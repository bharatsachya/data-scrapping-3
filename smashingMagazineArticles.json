[
  {
    "url": "/2025/02/time-to-first-byte-beyond-server-response-time/",
    "title": "Time To First Byte: Beyond Server Response Time",
    "author": "Matt Zeunert",
    "date": "Feb 12, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Performance",
      "Optimization",
      "User Experience"
    ],
    "summary": "Optimizing web performance means looking beyond surface-level metrics. Time to First Byte (TTFB) is crucial, but improving it requires more than tweaking server response time. Matt Zeunert breaks down what TTFB is, what causes its poor score, and why reducing server response time alone isn‚Äôt enough for optimization and often won‚Äôt be the most impactful change you can make to your website.",
    "content": "Loading your website HTML quickly has a big impact on visitor experience. After all, no page content can be displayed until after the first chunk of the HTML has been loaded. That‚Äôs why the Time to First Byte (TTFB) metric is important: it measures how soon after navigation the browser starts receiving the HTML response.\nGenerating the HTML document quickly plays a big part in minimizing TTFB delays. But actually, there‚Äôs a lot more to optimizing this metric. In this article, we‚Äôll take a look at what else can cause poor TTFB and what you can do to fix it.\nTTFB stands for Time to First Byte. But where does it measure from?\nDifferent tools handle this differently. Some only count the time spent sending the HTTP request and getting a response, ignoring everything else that needs to happen first before the resource can be loaded. However, when looking at Google‚Äôs Core Web Vitals, TTFB starts from the time when the users start navigating to a new page. That means TTFB includes:\nWe can see an example of this in this request waterfall visualization.\nThe server response time here is only 183 milliseconds, or about 12% of the overall TTFB metric. Half of the time is instead spent on a cross-origin redirect ‚Äî a separate HTTP request that returns a redirect response before we can even make the request that returns the website‚Äôs HTML code. And when we make that request, most of the time is spent on establishing the server connection.\nConnecting to a server on the web typically takes three round trips on the network:\nLet‚Äôs add up all the network round trips in the example above:\nThat means that before we even get the first response byte for our page we actually have to send data back and forth between the browser and a server eight times!\nThat‚Äôs where network latency comes in, or network round trip time (RTT) if we look at the time it takes to send data to a server and receive a response in the browser. On a high-latency connection with a 150 millisecond RTT, making those eight round trips will take 1.2 seconds. So, even if the server always responds instantly, we can‚Äôt get a TTFB lower than that number.\nNetwork latency depends a lot on the geographic distances between the visitor‚Äôs device and the server the browser is connecting to. You can see the impact of that in practice by running a global TTFB test on a website. Here, I‚Äôve tested a website that‚Äôs hosted in Brazil. We get good TTFB scores when testing from Brazil and the US East Coast. However, visitors from Europe, Asia, or Australia wait a while for the website to load.\nOne way to speed up your website is by using a Content Delivery Network (CDN). These services provide a network of globally distributed server locations. Instead of each round trip going all the way to where your web application is hosted, browsers instead connect to a nearby CDN server (called an edge node). That greatly reduces the time spent on establishing the server connection, improving your overall TTFB metric.\nBy default, the actual HTML request still has to be sent to your web app. However, if your content isn‚Äôt dynamic, you can also cache responses at the CDN edge node. That way, the request can be served entirely through the CDN instead of data traveling all across the world.\nIf we run a TTFB test on a website that uses a CDN, we can see that each server response comes from a regional data center close to where the request was made. In many cases, we get a TTFB of under 200 milliseconds, thanks to the response already being cached at the edge node.\nWhat you need to do to improve your website‚Äôs TTFB score depends on what its biggest contributing component is.\nKeep in mind that TTFB depends on how visitors are accessing your website. For example, if they are logged into your application, the page content probably can‚Äôt be served from the cache. You may also see a spike in TTFB when running an ad campaign, as visitors are redirected through a click-tracking server.\nIf you want to get a breakdown of what TTFB looks like for different visitors on your website, you need real user monitoring. That way, you can break down how visitor location, login status, or the referrer domain impact real user experience.\nDebugBear can help you collect real user metrics for Time to First Byte, Google Core Web Vitals, and other page speed metrics. You can track individual TTFB components like TCP duration or redirect time and break down website performance by country, ad campaign, and more.\nBy looking at everything that‚Äôs involved in serving the first byte of a website to a visitor, we‚Äôve seen that just reducing server response time isn‚Äôt enough and often won‚Äôt even be the most impactful change you can make on your website.\nJust because your website is fast in one location doesn‚Äôt mean it‚Äôs fast for everyone, as website speed varies based on where the visitor is accessing your site from.\nContent Delivery Networks are an incredibly powerful way to improve TTFB. Even if you don‚Äôt use any of their advanced features, just using their global server network saves a lot of time when establishing a server connection."
  },
  {
    "url": "/2025/02/how-to-test-and-measure-content-in-ux/",
    "title": "How To Test And Measure Content In UX",
    "author": "Vitaly Friedman",
    "date": "Feb 13, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Design",
      "UX"
    ],
    "summary": "The goal of content design is to reduce confusion and improve clarity. Yet often it‚Äôs difficult to pinpoint a problem as user feedback tends to be not specific enough. But: we can use a few simple techniques to assess how users understand and perceive content. Let‚Äôs take a look. Part of Smart Interface Design Patterns by yours truly.",
    "content": "Content testing is a simple way to test the clarity and understanding of the content on a page ‚Äî be it a paragraph of text, a user flow, a dashboard, or anything in between. Our goal is to understand how well users actually perceive the content that we present to them.\nIt‚Äôs not only about finding pain points and things that cause confusion or hinder users from finding the right answer on a page but also about if our content clearly and precisely articulates what we actually want to communicate.\nThis article is part of our ongoing series on UX. You can find more details on design patterns and UX strategy in Smart Interface Design Patterns¬†üç£ ‚Äî with live UX training coming up soon. Free preview.\nA great way to test how well your design matches a user‚Äôs mental model is Banana Testing. We replace all key actions with the word ‚ÄúBanana,‚Äù then ask users to suggest what each action could prompt.\nNot only does it tell you if key actions are understood immediately and if they are in the right place but also if your icons are helpful and if interactive elements such as links or buttons are perceived as such.\nOne reliable technique to assess content is content heatmapping. The way we would use it is by giving participants a task, then asking them to highlight things that are clear or confusing. We could define any other dimensions or style lenses as well: e.g., phrases that bring more confidence and less confidence.\nThen we map all highlights into a heatmap to identify patterns and trends. You could run it with print-outs in person, but it could also happen in Figjam or in Miro remotely ‚Äî as long as your tool of choice has a highlighter feature.\nThese little techniques above help you discover content issues, but they don‚Äôt tell you what is missing in the content and what doubts, concerns, and issues users have with it. For that, we need to uncover user needs in more detail.\nToo often, users say that a page is ‚Äúclear and well-organized,‚Äù but when you ask them specific questions, you notice that their understanding is vastly different from what you were trying to bring into spotlight.\nSuch insights rarely surface in unmoderated sessions ‚Äî it‚Äôs much more effective to observe behavior and ask questions on the spot, be it in person or remote.\nBefore testing, we need to know what we want to learn. First, write up a plan with goals, customers, questions, script. Don‚Äôt tweak words alone ‚Äî broader is better. In the session, avoid speaking aloud as it‚Äôs usually not how people consume content. Ask questions and wait silently.\nAfter the task is completed, ask users to explain the product, flow, and concepts to you. But: don‚Äôt ask them what they like, prefer, feel, or think. And whenever possible, avoid the word ‚Äúcontent‚Äù in testing as users often perceive it differently.\nThere are plenty of different tests that you could use:\nWhen choosing the right way to test, consider the following guidelines:\nIn many tasks, there is rarely anything more impactful than the careful selection of words on a page. However, it‚Äôs not only the words alone that are being used but the voice and tone that you choose to communicate with customers.\nUse the techniques above to test and measure how well people perceive content but also check how they perceive the end-to-end experience on the site.\nQuite often, the right words used incorrectly on a key page can convey a wrong message or provide a suboptimal experience. Even though the rest of the product might perform remarkably well, if a user is blocked on a critical page, they will be gone before you even blink.\nMeet Measure UX & Design Impact (8h), a new practical guide for designers and UX leads to measure and show your UX impact on business. Use the code üéü IMPACT to save 20% off today. Jump to the details."
  },
  {
    "url": "/2025/01/digital-playbook-crucial-counterpart-design-system/",
    "title": "The Digital Playbook: A Crucial Counterpart To Your Design System",
    "author": "Paul Boag",
    "date": "Jan 30, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Design Systems",
      "Design",
      "UI",
      "Workflow"
    ],
    "summary": "Design systems play a crucial role in today‚Äôs digital landscape, providing a blueprint for consistent and user-friendly interfaces. But there‚Äôs another tool that deserves equal attention: the digital playbook.",
    "content": "I recently wrote for Smashing Magazine about how UX leaders face increasing pressure to deliver more with limited resources. Let me show you how a digital playbook can help meet this challenge by enhancing our work‚Äôs visibility while boosting efficiency.\nWhile a design system ensures visual coherence, a digital playbook lays out the strategic and operational framework for how digital projects should be executed and managed. Here‚Äôs why a digital playbook deserves a place in your organization‚Äôs toolbox and what it should include to drive meaningful impact.\nA digital playbook is essentially your organization‚Äôs handbook for navigating the complexities of digital work. As a user experience consultant, I often help organizations create tools like this to streamline their processes and improve outcomes. It‚Äôs a collection of strategies, principles, and processes that provide clarity on how to handle everything from website creation to content management and beyond. Think of it as a how-to guide for all things digital.\nUnlike rigid rulebooks that feel constraining, you‚Äôll find that a playbook evolves with your organization‚Äôs unique culture and challenges. You can use it to help stakeholders learn, standardize your work, and help everybody be more effective. Let me show you how a playbook can transform the way your team works.\nHave you ever faced challenges like these?\nLet me show you how a playbook can help you and your team in four key ways:\nBut, no doubt you are wondering, what exactly goes into a digital playbook?\nEvery digital playbook is unique, but if you‚Äôve ever wondered where to start, here are some key areas to consider. Let‚Äôs walk through them together.\nHave you ever had people come to you too late in the process or approach you with solutions rather than explaining the underlying problems? A playbook can help mitigate these issues by providing clear guidance on:\nBy addressing these common challenges, you‚Äôre not just reducing your frustrations ‚Äî you‚Äôre educating stakeholders and encouraging better collaboration.\nMost digital projects can feel overwhelming without a clear structure, especially for stakeholders who may not understand the intricacies of the process. That‚Äôs why it‚Äôs essential to communicate the key phases clearly to those requesting your team‚Äôs help. For example:\nI‚Äôve structured the lifecycle this way to help stakeholders understand what to expect. When they know what‚Äôs happening at each stage, it builds trust and helps the working relationship. Stakeholders will see exactly what role you play and how your team adds value throughout the process.\nWriting for the web isn‚Äôt the same as traditional writing, and it‚Äôs critical for your team to help stakeholders understand the differences. Your playbook can include practical advice to guide them, such as:\nBy providing this guidance, you empower stakeholders to create content that‚Äôs not only effective but also reflects your team‚Äôs standards.\nHelping stakeholders understand your audience is essential for creating user-centered experiences. Your digital playbook can support this by including:\nBy sharing this knowledge, your team helps stakeholders make decisions that prioritize users, ultimately leading to more successful outcomes.\nStakeholders often are unaware of the wealth of resources that can help them improve their digital deliverables. Your playbook can help by recommending trusted solutions, such as:\nThese recommendations ensure stakeholders are equipped with reliable resources that align with your team‚Äôs processes.\nUncertainty about organizational policies can lead to confusion and missteps. Your playbook should provide clarity by outlining:\nBy setting these expectations, your team establishes a foundation of trust and accountability that stakeholders can rely on.\nOf course, you can have the best digital playbook in the world, but if people don‚Äôt reference it, then it is a wasted opportunity.\nIt falls to you and your team to ensure as many stakeholders as possible engage with your playbook. Try the following:\nCreating a digital playbook might sound like a daunting task, but it doesn‚Äôt have to be. Begin with a few core sections and expand over time. Assign ownership to a specific team or individual to ensure it remains updated and relevant.\nIn the end, a digital playbook is an investment. It saves time, reduces conflicts, and elevates your organization‚Äôs digital maturity."
  },
  {
    "url": "/2025/02/integrations-from-simple-data-transfer-to-composable-architectures/",
    "title": "Integrations: From Simple Data Transfer To Modern Composable Architectures",
    "author": "Edoardo Dusi",
    "date": "Feb 4, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Coding",
      "Headless",
      "Apps",
      "CMS"
    ],
    "summary": "In today‚Äôs web development landscape, the concept of a monolithic application has become increasingly rare. Modern applications are composed of multiple specialized services, each of which handles specific aspects of functionality. This shift didn‚Äôt happen overnight ‚Äî it‚Äôs the result of decades of evolution in how we think about and implement data transfer between systems. Let‚Äôs explore this journey and see how it shapes modern architectures, particularly in the context of headless CMS solutions.",
    "content": "When computers first started talking to each other, the methods were remarkably simple. In the early days of the Internet, systems exchanged files via FTP or communicated via raw TCP/IP sockets. This direct approach worked well for simple use cases but quickly showed its limitations as applications grew more complex.\nThe real breakthrough in enabling complex communication between computers on a network came with the introduction of Remote Procedure Calls (RPC) in the 1980s. RPC allowed developers to call procedures on remote systems as if they were local functions, abstracting away the complexity of network communication. This pattern laid the foundation for many of the modern integration approaches we use today.\nHere‚Äôs a simplified example using Python‚Äôs XML-RPC.\nRPC can operate in both synchronous (blocking) and asynchronous modes.\nModern implementations such as gRPC support streaming and bi-directional communication. In the example below, we define a gRPC service called Calculator with two RPC methods, Calculate, which takes a Numbers message and returns a Result message, and CalculateStream, which sends a stream of Result messages in response.\nThe late 1990s and early 2000s saw the emergence of Web Services and Service-Oriented Architecture (SOA). SOAP (Simple Object Access Protocol) became the standard for enterprise integration, introducing a more structured approach to system communication.\nWhile SOAP provided robust enterprise features, its complexity, and verbosity led to the development of simpler alternatives, especially the REST APIs that dominate Web services communication today.\nBut REST is not alone. Let‚Äôs have a look at some modern integration patterns.\nREST (Representational State Transfer) has become the de facto standard for Web APIs, providing a simple, stateless approach to manipulating resources. Its simplicity and HTTP-based nature make it ideal for web applications.\nFirst defined by Roy Fielding in 2000 as an architectural style on top of the Web‚Äôs standard protocols, its constraints align perfectly with the goals of the modern Web, such as performance, scalability, reliability, and visibility: client and server separated by an interface and loosely coupled, stateless communication, cacheable responses.\nIn modern applications, the most common implementations of the REST protocol are based on the JSON format, which is used to encode messages for requests and responses.\nGraphQL emerged from Facebook‚Äôs internal development needs in 2012 before being open-sourced in 2015. Born out of the challenges of building complex mobile applications, it addressed limitations in traditional REST APIs, particularly the issues of over-fetching and under-fetching data.\nAt its core, GraphQL is a query language and runtime that provides a type system and declarative data fetching, allowing the client to specify exactly what it wants to fetch from the server.\nOften used to build complex UIs with nested data structures, mobile applications, or microservices architectures, it has proven effective at handling complex data requirements at scale and offers a growing ecosystem of tools.\nModern applications often require real-time updates. For example, e-commerce apps need to update inventory levels when a purchase is made, or content management apps need to refresh cached content when a document is edited. Traditional request-response models can struggle to meet these demands because they rely on clients‚Äô polling servers for updates, which is inefficient and resource-intensive.\nWebhooks and event-driven architectures address these needs more effectively. Webhooks let servers send real-time notifications to clients or other systems when specific events happen. This reduces the need for continuous polling. Event-driven architectures go further by decoupling application components. Services can publish and subscribe to events asynchronously, and this makes the system more scalable, responsive, and simpler.\nThis is a simple Node.js function that uses Fastify to set up a web server. It responds to the endpoint /webhook, checks the type field of the JSON request, and refreshes a cache if the event is of type content.published.\nWith all this background information and technical knowledge, it‚Äôs easier to picture the current state of web application development, where a single, monolithic app is no longer the answer to business needs, but a new paradigm has emerged: Composable Architecture.\nThis evolution has led us to the concept of composable architecture, where applications are built by combining specialized services. This is where headless CMS solutions have a clear advantage, serving as the perfect example of how modern integration patterns come together.\nHeadless CMS platforms separate content management from content presentation, allowing you to build specialized frontends relying on a fully-featured content backend. This decoupling facilitates content reuse, independent scaling, and the flexibility to use a dedicated technology or service for each part of the system.\nTake Storyblok as an example. Storyblok is a headless CMS designed to help developers build flexible, scalable, and composable applications. Content is exposed via API, REST, or GraphQL; it offers a long list of events that can trigger a webhook. Editors are happy with a great Visual Editor, where they can see changes in real time, and many integrations are available out-of-the-box via a marketplace.\nImagine this ContentDeliveryService in your app, where you can interact with Storyblok‚Äôs REST API using the open source JS Client:\nThe last piece of the puzzle is a real example of integration.\nAgain, many are already available in the Storyblok marketplace, and you can easily control them from the dashboard. However, to fully leverage the Composable Architecture, we can use the most powerful tool in the developer‚Äôs hand: code.\nLet‚Äôs imagine a modern e-commerce platform that uses Storyblok as its content hub, Shopify for inventory and orders, Algolia for product search, and Stripe for payments.\nOnce each account is set up and we have our access tokens, we could quickly build a front-end page for our store. This isn‚Äôt production-ready code, but just to get a quick idea, let‚Äôs use React to build the page for a single product that integrates our services.\nFirst, we should initialize our clients:\nGiven that we created a blok in Storyblok that holds product information such as the product_id, we could write a component that takes the productSlug, fetches the product content from Storyblok, the inventory data from Shopify, and some related products from the Algolia index:\nWe could then set a simple component state:\nAnd return a template with all our data:\nWe could then use an event-driven approach and create a server that listens to our shop events and processes the checkout with Stripe (credits to Manuel Spigolon for this tutorial):\nAnd with this approach, each service is independent of the others, which helps us achieve our business goals (performance, scalability, flexibility) with a good developer experience and a smaller and simpler application that‚Äôs easier to maintain.\nThe integration between headless CMSs and modern web services represents the current and future state of high-performance web applications. By using specialized, decoupled services, developers can focus on business logic and user experience. A composable ecosystem is not only modular but also resilient to the evolving needs of the modern enterprise.\nThese integrations highlight the importance of mastering API-driven architectures and understanding how different tools can harmoniously fit into a larger tech stack.\nIf you want to dive deeper into the integrations you can build with Storyblok and other services, check out Storyblok‚Äôs integrations page. You can also take your projects further by creating your own plugins with Storyblok‚Äôs plugin development resources."
  },
  {
    "url": "/2025/01/navigating-challenges-modern-open-source-authoring/",
    "title": "Navigating The Challenges Of Modern Open-Source Authoring: Lessons Learned",
    "author": "Alvaro Saburido",
    "date": "Jan 21, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Business",
      "Tools",
      "UI"
    ],
    "summary": "Alvaro Saburido delves into the current state and challenges of Open-Source authoring, sharing lessons learned from both community- and company-driven initiatives.",
    "content": "Open source is the backbone of modern software development. As someone deeply involved in both community-driven and company-driven open source, I‚Äôve had the privilege of experiencing its diverse approaches firsthand. This article dives into what modern OSS (Open Source) authoring looks like, focusing on front-end JavaScript libraries such as TresJS and tools I‚Äôve contributed to at Storyblok.\nBut let me be clear:\nAuthoring an open-source project often begins with scratching your own itch ‚Äî solving a problem you face as a developer. But as your ‚Äúexperiment‚Äù gains traction, the challenge shifts to addressing diverse use cases while maintaining the simplicity and focus of the original idea.\nTake TresJS as an example. All I wanted was to add 3D to my personal Nuxt portfolio, but at that time, there wasn‚Äôt a maintained, feature-rich alternative to React Three Fiber in VueJS. So, I decided to create one. Funny enough, after two years after the library‚Äôs launch, my portfolio remains unfinished.\nContinuing with TresJS as an example of a community-driven OSS project, the community has been an integral part of its growth, offering ideas, filing issues (around 531 in total), and submitting pull requests (around 936 PRs) of which 90% eventually made it to production. As an author, this is the best thing that can happen ‚Äî it‚Äôs probably one of the biggest reasons I fell in love with open source. The continuous collaboration creates an environment where new ideas can evolve into meaningful contributions.\nHowever, it also comes with its own challenges. The more ideas come in, the harder it becomes to maintain the project‚Äôs focus on its original purpose.\nOver time, some of the most consistent collaborators became part of a core team, helping to share the responsibility of maintaining the library and ensuring it stays aligned with its original goals.\nAnother crucial aspect of scaling a project, especially one like TresJS, which has grown into an ecosystem of packages, is the ability to delegate. The more the project expands, the more essential it becomes to distribute responsibilities among contributors. Delegation helps in reducing the burden of the massive workload and empowers contributors to take ownership of specific areas. As a core author, it‚Äôs equally important to provide the necessary tools, CI workflows, and clear conventions to make the process of contributing as simple and efficient as possible. A well-prepared foundation ensures that new and existing collaborators can focus on what truly matters ‚Äî pushing the project forward.\nNow that we‚Äôve explored the bright spots and challenges of community-driven OSS let‚Äôs jump into a different realm: company-driven OSS.\nI had experience with inner-source and open-source in previous companies, so I already had a grasp of how OSS works in the context of a company environment. However, my most meaningful experience would come later, specifically earlier this year, when I switched my role from DevRel to a full-time Developer Experience Engineer, and I say ‚Äúfull-time‚Äù because before taking the role, I was already contributing to Storyblok‚Äôs SDK ecosystem.\nAt Storyblok, open source plays a crucial role in how we engage with developers and how they seamlessly use our product with their favorite framework. Our goal is to provide the same developer experience regardless of the flavor, making the experience of using Storyblok as simple, effective, and enjoyable as possible.\nTo achieve this, it‚Äôs crucial to balance the needs of the developer community ‚Äî which often reflect the needs of the clients they work for ‚Äî with the company‚Äôs broader goals. One of the things I find more challenging is managing expectations. For instance, while the community may want feature requests and bug fixes to be implemented quickly, the company‚Äôs priorities might dictate focusing on stability, scalability, and often strategic integrations. Clear communication and prioritization are key to maintaining healthy alignment and trust between both sides.\nOne of the unique advantages of company-driven open source is the availability of resources:\nHowever, this setup often comes with the challenge of dealing with legacy codebases ‚Äî typically written by developers who may not be familiar with OSS principles. This can lead to inconsistencies in structure, testing, and documentation that require significant refactoring before the project can align with open-source best practices.\nI like to think of community-driven OSS as being like jazz music‚Äîfreeform, improvised, and deeply collaborative. In contrast, company-driven OSS resembles an orchestra, with a conductor guiding the performance and ensuring all the pieces fit together seamlessly.\nThe truth is that most OSS projects ‚Äî if not the vast majority ‚Äî exist somewhere along this spectrum. For example, TresJS began as a purely community-driven project, but as it matured and gained traction, elements of structured decision-making ‚Äî more typical of company-driven projects ‚Äî became necessary to maintain focus and scalability. Together with the core team, we defined a vision and goals for the project to ensure it continued to grow without losing sight of its original purpose.\nInterestingly, the reverse is also true: Company-driven OSS can benefit significantly from the fast-paced innovation seen in community-driven projects.\nMany of the improvements I‚Äôve introduced to the Storyblok ecosystem since joining were inspired by ideas first explored in TresJS. For instance, migrating the TresJS ecosystem to pnpm workspaces demonstrated how streamlined dependency management could improve development workflows like playgrounds and e2e ‚Äî an approach we gradually adapted later for Storyblok‚Äôs ecosystem.\nSimilarly, transitioning Storyblok testing from Jest to Vitest, with its improved performance and developer experience, was influenced by how testing is approached in community-driven projects. Likewise, our switch from Prettier to ESLint‚Äôs v9 flat configuration with auto-fix helped consolidate linting and formatting into a single workflow, streamlining developer productivity.\nEven more granular processes, such as modernizing CI workflows, found their way into Storyblok. TresJS‚Äôs evolution from a single monolithic release action to granular steps for linting, testing, and building provided a blueprint for enhancing our pipelines at Storyblok. We also adopted continuous release practices inspired by pkg.pr.new, enabling faster delivery of incremental changes and testing package releases in real client projects to gather immediate feedback before merging the PRs.\nThat said, TresJS also benefited from my experiences at Storyblok, which had a more mature and battle-tested ecosystem, particularly in adopting automated processes. For example, we integrated Dependabot to keep dependencies up to date and used auto-merge to reduce manual intervention for minor updates, freeing up contributors‚Äô time for more meaningful work. We also implemented an automatic release pipeline using GitHub Actions, inspired by Storyblok‚Äôs workflows, ensuring smoother and more reliable releases for the TresJS ecosystem.\nThroughout this article, we‚Äôve touched on several modern OSS challenges, but if one deserves the crown, it‚Äôs managing breaking changes and maintaining compatibility. We know how fast the pace of technology is, especially on the web, and users expect libraries and tools to keep up with the latest trends. I‚Äôm not the first person to say that hype-driven development can be fun, but it is inherently risky and not your best ally when building reliable, high-performance software ‚Äî especially in enterprise contexts.\nBreaking changes exist. That‚Äôs why semantic versioning comes into play to make our lives easier. However, it is equally important to balance innovation with stability. This becomes more crucial when introducing new features or refactoring for better performance, breaking existing APIs. One key lesson I‚Äôve learned ‚Äî particularly during my time at Storyblok ‚Äî is the importance of clear communication. Changelogs, migration guides, and deprecation warnings are invaluable tools to smoothen the transition for users.\nAnd that takes us to the following point.\nOpen-source authoring is a journey of continuous learning. Each misstep offers a chance to improve, and each success reinforces the value of collaboration and experimentation.\nThere‚Äôs no ‚Äúperfect‚Äù way to do OSS, and that‚Äôs the beauty of it. Every project has its own set of workflows, challenges, and quirks shaped by the community and its contributors. These differences make open source adaptable, dynamic, fun, and, above all, impactful. No matter if you‚Äôre building something entirely new or contributing to an existing project, remember that progress, not perfection, is the goal.\nSo, keep contributing, experimenting, and sharing your work. Every pull request, issue, and idea you put forward brings value &mdashp not just to your project but to the broader ecosystem.\nHappy coding!"
  },
  {
    "url": "/2025/02/taking-rwd-to-the-extreme/",
    "title": "Taking RWD To The Extreme",
    "author": "Tomasz Jakut",
    "date": "Feb 7, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Design",
      "Responsive Design",
      "Web Design"
    ],
    "summary": "Tomasz Jakut reflects on the evolution of web design, recalling the days when table layouts were all the rage and Flash games were shaping the online culture. And then responsive web design (RWD) happened ‚Äî and it often feels like the end of history; well, at least for web design. After all, we still create responsive websites, and that‚Äôs The True Way‚Ñ¢ of doing layouts on the web. Yet the current year, 2025, marks the 15th anniversary of Ethan Marcotte‚Äôs article, which forever changed web development. That‚Äôs a whole era in ‚Äúweb‚Äù years. So, maybe something happened after RWD, but it was so obvious that it went nearly invisible. Let‚Äôs try to uncover this something.",
    "content": "When Ethan Marcotte conceived RWD, web technologies were far less mature than today. As web developers, we started to grasp how to do things with floats after years of stuffing everything inside table cells. There weren‚Äôt many possible ways to achieve a responsive site. There were two of them: fluid grids (based on percentages) and media queries, which were a hot new thing back then.\nWhat was lacking was a real layout system that would allow us to lay things out on a page instead of improvising with floating content. We had to wait several years for Flexbox to appear. And CSS Grid followed that.\nUndoubtedly, new layout systems native to the browser were groundbreaking 10 years ago. They were revolutionary enough to usher in a new era. In her talk ‚ÄúEverything You Know About Web Design Just Changed‚Äù at the An Event Apart conference in 2019, Jen Simmons proposed a name for it: Intrinsic Web Design (IWD). Let‚Äôs disarm that fancy word first. According to the Merriam-Webster dictionary, intrinsic means ‚Äúbelonging to the essential nature or constitution of a thing.‚Äù In other words, IWD is a natural way of doing design for the web. And that boils down to using CSS layout systems for‚Ä¶ laying out things. That‚Äôs it.\nIt does not sound that groundbreaking on its own. But it opens a lot of possibilities that weren‚Äôt earlier available with float-based layouts or table ones. We got the best things from both worlds: two-dimensional layouts (like tables with their rows and columns) with wrapping abilities (like floating content when there is not enough space for it). And there are even more goodies, like mixing fixed-sized content with fluid-sized content or intentionally overlapping elements:\nAs Jen points out in her presentation, this allows us to finally make even fancy designs in the ‚Äúweb‚Äù way, eliminating the tension between web designers and developers. No more ‚ÄúThis print design can‚Äôt be translated for the web!‚Äù Well, at least far fewer arguments‚Ä¶\nBut here‚Äôs the strange part: that new era didn‚Äôt come. IWD never became a household term, the same way that RWD has. We‚Äôre still stuck to the good and old RWD era. Yet, Flexbox and Grid became indispensable tools in (nearly) every web developer‚Äôs tool belt. They are so natural and intrinsic that we intuitively started to use them, missing their whole revolutionary aspect. Instead of a groundbreaking revolution of IWD, we chose a longer but steadier evolution of RWD.\nI believe that IWD paved the way for more radical ideas, even if it hasn‚Äôt developed into a bonafide era. And the central point of all of those radical ideas is a browser ‚Äî that part of the web that sits between our code and the user. Web developers have always had a love-hate relationship with browsers. (Don‚Äôt get me started on Internet Explorer!) They often amuse us both with new features (WebGPU for the win!) and cryptic bugs (points suddenly take up more space, what the heck?). But at the end of the day, we tell the browser what to do to display our page the way we want it to be displayed to the user.\nIn some ways, IWD challenged that approach. CSS layout systems aren‚Äôt taking direct orders from a web developer. We can barely hint at what we want them to do. But the final decision lies with the browser. And what if we take it even further?\nHeydon Pickering proposed the term algorithmic layouts to describe such an approach. The web is inherently algorithmic. Even the simplest page uses internal algorithms to lay things out: a block of text forms a flow layout that will wrap when there is not enough space in the line. And that‚Äôs so obvious that we don‚Äôt even think about it. That‚Äôs just how text works, and that‚Äôs how it has always worked. And yet, there is an algorithm behind that. That and all CSS layout systems. We can use Flexbox to make a simple layout that displays on a single line by default and falls back to wrapping up multiple lines if there is not enough space, just like text.\nAnd we get all of these algorithms for free! The only thing we need to do is to allow Flexbox to wrap with the flex-wrap property. And it wraps by itself. Imagine that you need to calculate when and how the layout should wrap ‚Äî that would be a nightmare. Fortunately, browsers are good at laying out things. After all, they have been doing it for over 35 years. They‚Äôre experienced in that, so just let them handle this stuff. That‚Äôs the power of algorithmic layouts: they work the best when left alone.\nAndy Bell summed it pretty well during All Day Hey! in 2022 when he recommended that we ‚Äúbe the browser‚Äôs mentor, not its micromanager.‚Äù Don‚Äôt try to be smarter than a browser because it knows things you can‚Äôt possibly know. You don‚Äôt know what device the user uses ‚Äî its processing power, current battery level, viewport, and connection stability. You don‚Äôt know what assistive technologies the user uses or how they configured their operating system. You don‚Äôt know if they disable cookies and JavaScript.\nYou know only one thing: there is that peculiar thing between your website and the user called browser ‚Äî and it knows much more about the page and the user than you do. It‚Äôs like an excellent translator that you hire for those extremely important business negotiations with someone from a totally foreign culture that you don‚Äôt know anything about. But the translator knows it well and translates your words with ease, gently closing the cultural chasm between you and the potential customer. You don‚Äôt want to force them to translate your words literally ‚Äî that could be catastrophic. What you want is to provide them with your message and allow them to do the magic of shaping it into a message understandable to the customer. And the same applies to browsers; they know better how to display your website.\nI think that Jen, Heydon, and Andy speak of the same thing ‚Äî an approach that shifts much of the work from the web developer to the browser. Instead of telling it how to do things, we rather tell it what to do and leave it to figure out the ‚Äúhow‚Äù part by itself.\nAs Jeremy Keith notices, there has been a shift from an imperative design (telling the browser ‚Äúhow‚Äù) to a declarative one (telling the browser ‚Äúwhat‚Äù). Specifically, Jeremy says that we ought to ‚Äúfocus on creating the right inputs rather than trying to control every possible output.‚Äù\nThat‚Äôs quite similar to what we do with AI today: we meticulously craft our prompts (inputs) and hope to get the right answer (output). However, there is a very important difference between AI and browsers: the latter is not a black box.\nEverything (well, most of what) the browser does is described in detail in open web standards, so we‚Äôre able to make educated guesses about the output. Granted, we can‚Äôt be sure if the user sees the two-column layout on their 8K screen or a one-column layout on their microwave‚Äôs small screen (if it can run DOOM, it can run a web browser!). But we know for sure that we defined these two edge cases, and the browser works out everything in between.\nIn theory, it all sounds nice and easy. Let‚Äôs try to make the declarative design more actionable. If we gather the techniques mentioned by Jen, Heydon, Andy, and Jeremy, we will end up with roughly the following list:\nThey‚Äôre available in basically every browser on the market and have been for years, and I believe that they are, indeed, widely used. But from time to time, a question pops up: Which layout system should I use? And the answer is: Yes. Mix and match! After all, different elements on the page would work better with different layout systems. Take, for example, this navigation on top with several links in one row that should wrap if there is not enough space. Sounds like Flexbox. Is the main part divided into three columns, with the third column positioned at the bottom of the content? Definitely CSS Grid. As for the text content? Well, that‚Äôs flow.\nHTML is the backbone of the web. It‚Äôs the language that structures and formats the content for the user. And it comes with a huge bonus: it loads and displays to the user, even if CSS and JavsScript fail to load for whatever reason. In other words, the website should still make sense to the user even if the CSS that provides the layout and the JavsScript that provides the interactivity are no-shows. A website is a text document, not so different from the one you can create in a text processor, like Word or LibreWriter.\nSemantic HTML also provides important accessibility features, like headings that are often used by screen-reader users for navigating pages. This is why starting not just with any markup but semantic markup for meaningful structure is a crucial step to embracing native web features.\nWe often need to adjust the font size of our content when the screen size changes. Smaller screens mean being able to display less content, and larger screens provide more affordance for additional content. This is why we ought to make content as fluid as possible, by which I mean the content should automatically adjust based on the screen‚Äôs size. A fluid typographic system optimizes the content‚Äôs legibility when it‚Äôs being viewed in different contexts.\nNowadays, we can achieve truly fluid type with one line of CSS, thanks to the clamp() function:\nThe maths involved in it goes quite above my head. Thankfully, there is a detailed article on fluid type by Adrian Bece here on Smashing Magazine and Utopia, a handy tool for doing the maths for us. But beware ‚Äî there be dragons! Or at least possible accessibility issues. By limiting the maximum font size, we could break the ability to zoom the text content, violating one of the WCAG‚Äôs requirements (though there are ways to address that).\nFortunately, fluid space is much easier to grasp: if gaps (margins) between elements are defined in font-dependent units (like rem or em), they will scale alongside the font size. Yet rest assured, there are also caveats.\nYes, that‚Äôs this over-20-year-old technique for creating web pages. And it‚Äôs still relevant today in 2025. Many interesting features have limited availability ‚Äî like cross-page view transitions. They won‚Äôt work for every user, but enabling them is as simple as adding one line of CSS:\nIt won‚Äôt work in some browsers, but it also won‚Äôt break anything. And if some browser catches up with the standard, the code is already there, and view transitions start to work in that browser on your website. It‚Äôs sort of like opting into the feature when it‚Äôs ready.\nIt applies to many more things in CSS (unsupported grid is just a flow layout, unsupported masonry layout is just a grid, and so on) and other web technologies.\nTrust it because it knows much more about how safe it is for users to surf the web. Besides, it‚Äôs a computer program, and computer programs are pretty good at calculating things. So instead of calculating all these breakpoints ourselves, take their helping hand and allow them to do it for you. Just give them some constraints. Make that <main> element no wider than 60 characters and no narrower than 20 characters ‚Äî and then relax, watching the browser make it 37 characters on some super rare viewport you‚Äôve never encountered before. It Just Works‚Ñ¢.\nBut trusting the browser also means trusting the open web. After all, these algorithms responsible for laying things out are all parts of the standards.\nThat‚Äôs a bonus point from me. Layout systems introduced the concept of logical CSS. Flexbox does not have a notion of a left or right side ‚Äî it has a start and an end. And that way of thinking lurked into other areas of CSS, creating the whole CSS Logical Properties and Values module. After working more with layout systems, logical CSS seems much more intuitive than the old ‚Äúphysical‚Äù one. It also has at least one advantage over the old way of doing things: it works far better with internationalized content.\nThe demo above shows the difference between physical and logical CSS. The physical tiles have the text-align: left property applied, while the logical ones have text-align: start. When the ‚Äúleft to right‚Äù inline text direction is set, both of them look the same. But when the ‚Äúright to left‚Äù one is set, the logical tiles ‚Äúmove‚Äù their start to the right, moving the text alongside it.\nAdditionally, containers with tiles have their width set ‚Äî the physical container with the width: 400px property and the logical one with the inline-size: 400px property. They both look the same as long as the block text direction is set to ‚Äúhorizontal.‚Äù But when it is set to ‚Äúvertical,‚Äù the logical one switches its width with the height (as now the line of text is going from top to bottom, not from left to right), and the physical one keeps its initial width and height.\nI hear you. But I believe that there‚Äôs still room for more. The changes described above are a big shift in the RWD world. But this shift is mainly technological. Fluid type without the clamp() method or algorithmic layouts without flexbox and grid couldn‚Äôt possibly exist ‚Äî at least not without some horrible hacks (does anyone still remember CSS locks?). Our web development routine just caught up to what the modern browser can do. Yet, there is still another shift that could happen: a mental one.\nI‚Äôll be honest: I‚Äôm a die-hard fanatic of using rem and em length units. I‚Äôve been using them for years, but they clicked for me only when I stopped trying to translate them into pixels. And what helped me in it was a‚Ä¶ chemistry class I attended many years ago. When working with all these chemical concoctions, you often need to calculate their ratios. There‚Äôs that fancy method for doing that:\nAfter I applied this way of thinking to rem and em units, I entered a new world of thinking about layouts: a ratio-based one. Because there is still a myth that 1 rem roughly equals 16 pixels ‚Äî except it doesn‚Äôt. It could equal any number of pixels because it all depends on what value the user sets in their browser. So, thinking in concrete numbers is, in fact, incompatible with rem and em units. The only fully compatible way is to‚Ä¶ keep it as-is.\nAnd I know that sounds crazy, but it forces a change in thinking about websites. If you don‚Äôt know the most basic information about your content (the font size), you can‚Äôt really apply any concrete numbers to your layout. You can only think in ratios. If the font size equals ‚úï, your heading could equal 2‚úï, the main column 60‚úï, some text input ‚Äî 10‚úï, and so on. This way, everything should work out with any font size and, by extension, scale up with any font size.\nWe‚Äôve already been doing that with layout systems ‚Äî we allow them to work on ratios and figure out how big each part of the layout should be. And we‚Äôve also been doing that with rem and em units for scaling things up depending on font size. The only thing left is to completely forget the ‚Äú1rem = 16px‚Äù equation and fully embrace the exciting shores of unknown dimensions.\nBut that sort of mental shift comes with one not-so-straightforward consequence. Not setting the font size and working with the user-provided one instead fully moves the power from the web developer to the browser and, effectively, the user. And the browser can provide us with far more information about user preferences.\nThanks to the modern CSS, we can respond to these things. For example, we can switch to dark mode if the user prefers one, we can limit motion if the user requests it, we can make clickable areas bigger if the device has a touch screen, and so on. By having this kind of dialogue with the browser, exchanging information (it gives us data on the user, and we give it hints on how to display our content), we empower the user in the result. The content would be displayed in the way they want. That makes our website far more inclusive and accessible.\nAfter all, the users know what they need best. If they set the default font size to 64 pixels, they would be grateful if we respected that value. We don‚Äôt know why they did it (maybe they have some kind of vision impairment, or maybe they simply have a screen far away from them); we only know they did it ‚Äî and we respect that.\nAnd that‚Äôs responsive design for me."
  },
  {
    "url": "/2025/01/role-illustration-style-visual-storytelling/",
    "title": "The Role Of Illustration Style In Visual Storytelling",
    "author": "Thomas Bohm",
    "date": "Jan 14, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Data Visualization",
      "UX",
      "Design"
    ],
    "summary": "How do we determine the most suitable illustration style? How should illustrations complement and reflect your corporate identity? What will resonate most with your target audience? And regarding the content, what type of illustration would best enhance it, and how would it work for the age range it is primarily for? Thomas Bohm shares insightful examples and discusses the key qualities of effective illustrations, emphasizing the importance of understanding your audience.",
    "content": "Illustration has been used for 10,000 years. One of the first ever recorded drawings was of a hand silhouette found in Spain, that is more than 66,000 years old. Fast forward to the introduction of the internet, around 1997, illustration has gradually increased in use. Popular examples of this are Google‚Äôs daily doodles and the Red Bull energy drink, both of which use funny cartoon illustrations and animations to great effect.\nTypically, illustration was done using pencils, chalk, pens, etchings, and paints. But now everything is possible ‚Äî you can do both analog and digital or mixed media styles.\nAs an example, although photography might be the most popular method to communicate visuals, it is not automatically the best default solution. Illustration offers a wider range of styles that help companies engage and communicate with their audience. Good illustrations create a mood and bring to life ideas and concepts from the text. To put it another way, visualisation.\nHow do we determine what kind of illustration or style would be best? How should illustration complement or echo your corporate identity? What will your main audience prefer? What about the content, what would suit and highlight the content best, and how would it work for the age range it is primarily for?\nBefore we dive into the examples, let‚Äôs discuss the qualities of good illustration and the importance of understanding your audience. The rubric below will help you make good choices for your audience‚Äôs benefit.\nJust look at what we are more often than not presented with.\nIt is really important to know and consider different audiences. Not all of us are the same and have the same physical, cognitive, education, or resources. Our writing, designs, and illustrations need to take into account users‚Äô make-up and capabilities.\nThere are some common categories of audiences:\nBelow are interesting examples of illustrations, in no particular order, that show how different styles communicate and echo different qualities and affect mood and tone.\nGood for formal, classy, and sophisticated imagery that also lends itself to imaginative expression. It is a great example of texture and light that delivers a really humane and personal feel that you would not get automatically by using software.\nStrengths\nA great option for highly abstract concepts and compositions with a funny, unusual, and unreal aspect. You can do some really striking and clever stuff with this style to engage readers in your content.\nStrengths\nPerfect for abstract hybrid illustration and photo illustration with a surreal fantasy aspect. This is a great example of merging different imagery together to create a really dramatic, scary, and visually arresting new image that fits the musician‚Äôs work as well.\nStrengths\nWell-suited for showing fun or humorous aspects, creating concepts with loads of wit and cleverness. New messages and forms of communication can be created with this style.\nStrengths\nWorks well for showing fun, quirky, or humorous aspects and concepts, often with loads of wit and cleverness. The simplicity of style can be quite good for people who struggle with more advanced imagery concepts, making it quite accessible.\nStrengths\nDesigned for clean and clear illustrations that are all-encompassing and durable. Due to the nature of this illustration style, it works quite well for a wide range of people as it is not overly stylistic in one direction or another.\nStrengths\nBest suited for imagining rustic imagery, echoing a vintage feel. This a great example of how texture and non-cleanliness can create and enhance the feeling of the imagery; it is very Western and old-fashioned, perfect for the core meaning of the illustration.\nStrengths\nHighly effective for clean, legible, quickly recognizable imagery and concepts, especially at small sizes as well. It is no surprise that many pictograms are to be seen in quick viewing environments such as airports and show imagery that has to work for a wide range of people.\nStrengths\nA great option for visually attractive and abstract imagery and concepts. This style lends itself to much customising and experimentation from the illustrator, giving some really cool and visually striking results.\nStrengths\nIdeal for imagery that has an old, historic, and traditional feel. Has a great feel achieved through sketchy markings, etchings, and a greyscale colour palette. You would not automatically get this from software, but given the right context or maybe an unusual juxtaposed context (like the clash against a modern, clean, fashionable corporate identity), it could work really well.\nStrengths\nIt serves as a great choice for highly realistic illustration with a friendly, widely accessible character element. This style is not overly stylistic and lends itself to being accepted by a wider range of people.\nStrengths\nIt‚Äôs especially useful for high-impact, bright, animated, and colourful concepts. Some really cool, almost animated graphic communication can be created with this style, which can also be put to much humorous use. The boldness and in-your-face style promote visual engagement.\nStrengths\nWell-suited for bold block-coloured silhouettes and imagery. It is so bold and impactful, and there is still loads of detail there, creating a really cool and sharp illustration. The illustration works well in black and white and would be further enhanced with colour.\nStrengths\nPerfect for humane, detailed imagery with plenty of feeling and character. The sketchy style highlights unusual details and lends itself to an imaginative feeling and imagery.\nStrengths\nEspecially useful for highly imaginative and fantasy imagery. By using gradients and a light-to-dark color palette, the imagery really has depth and says, ‚ÄòTake me away on a journey.‚Äô\nStrengths\nIt makes an excellent option for giving illustration a humane and tangible feel, with echoes of old historical illustrations. The murky black-and-white illustration really has an atmosphere to it.\nStrengths\nIt offers great value for block silhouette imagery that has presence, sharpness, and impact. Is colour even needed? The black against the light background goes a long way to communicating the imagery.\nStrengths\nA great option for imagery that has motion and flare to it, with a slight feminine feel. No wonder this style of illustration is used for fashion illustrations, great for expressing lines and colours with motion, and has a real fashion runway flare.\nStrengths\nIdeal for humorous imagery and illustration with a graphic edge and clarity. The layering of light and dark elements really creates an illustration with depth, perfect for playing with the detail of the character, not something you would automatically get from a clean vector illustration. It has received more thought and attention than clean vector illustration typically does.\nStrengths\nIt serves as a great choice for traditional romantic imagery that has loads of detail, texture, and depth of feeling. The rose flowers are a good example of this illustration style because they have so much detail and colour shades.\nStrengths\nWell-suited for highly sketchy imagery to make something an idea or working concept. The white lines against the black background have an almost animated effect and give the illustrations real movement and life. This style is a good example of using pure lines in illustration but to great effect.\nStrengths\nThere are plenty of options, such as using pencils, chalk, pens, etchings, and paints, then possibly scanning in. You can also use software like Illustrator, Photoshop, Procreate, Corel Painter, Sketch, Inkscape, or Figma. But no matter what tools you choose, there‚Äôs one essential ingredient you‚Äôll always need, and that is a mind and vision for illustration."
  },
  {
    "url": "/2025/01/desktop-wallpaper-calendars-february-2025/",
    "title": "Look Closer, Inspiration Lies Everywhere (February 2025 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "Jan 31, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "Let‚Äôs make the most of the shortest of all months, with a new collection of desktop wallpapers celebrating new opportunities, sweet memories, happy little moments, and everything in between. All of them created with love by the community for the community. Enjoy!",
    "content": "As designers, we are always on the lookout for some fresh inspiration, and well, sometimes, the best inspiration lies right in front of us. With that in mind, we embarked on our wallpapers adventure more than thirteen years ago. The idea: to provide you with a new batch of beautiful and inspiring desktop wallpapers every month. This February is no exception, of course.\nThe wallpapers in this post were designed by artists and designers from across the globe and come in versions with and without a calendar for February 2025. And since so many unique wallpaper designs have seen the light of day since we first started this monthly series, we also added some February ‚Äúoldies but goodies‚Äù from our archives to the collection ‚Äî so maybe you‚Äôll spot one of your almost-forgotten favorites in here, too?\nThis wallpapers post wouldn‚Äôt have been possible without the kind support of our wonderful community who tickles their creativity each month anew to keep the steady stream of wallpapers flowing. So, a huge thank-you to everyone who shared their designs with us this time around! If you too would like to get featured in one of our next wallpapers posts, please don‚Äôt hesitate to submit your design. We can‚Äôt wait to see what you‚Äôll come up with! Happy February!\nFall In Love With Yourself‚ÄúWe dedicate February to Frida Kahlo to illuminate the world with color. Fall in love with yourself, with life and then with whoever you want.‚Äù ‚Äî Designed by Veronica Valenzuela from Spain.previewwith calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440without calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nSweet Valentine‚ÄúEveryone deserves a sweet Valentine‚Äôs Day, no matter their relationship status. It‚Äôs a day to celebrate love in all its forms ‚Äî self-love, friendship, and the love we share with others. A little kindness or just a little chocolate can make anyone feel special, reminding us that everyone is worthy of love and joy.‚Äù ‚Äî Designed by LibraFire from Serbia.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMochiDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nCyber VoodooDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nPop Into Fun‚ÄúBlow the biggest bubbles, chew on the sweetest memories, and let your inner kid shine! Celebrate Bubble Gum Day with us and share the joy of every POP!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBelieve‚Äú‚ÄòBelieve‚Äô reminds us to trust ourselves and our potential. It fuels faith, even in challenges, and drives us to pursue our dreams. Belief unlocks strength to overcome obstacles and creates possibilities. It‚Äôs the foundation of success, starting with the courage to believe.‚Äù ‚Äî Designed by Hitesh Puri from Delhi, India.previewwith calendar: 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nPlants‚ÄúI wanted to draw some very cozy place, both realistic and cartoonish, filled with little details. A space with a slightly unreal atmosphere that some great shops or cafes have. A mix of plants, books, bottles, and shelves seemed like a perfect fit. I must admit, it took longer to draw than most of my other pictures! But it was totally worth it. Watch the making-of.‚Äù ‚Äî Designed by Vlad Gerasimov from Georgia.previewwithout calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880\nLove Is In The Play‚ÄúForget Lady and the Tramp and their spaghetti kiss, ‚Äôcause Snowflake and Cloudy are enjoying their bliss. The cold and chilly February weather made our kitties knit themselves a sweater. Knitting and playing, the kitties tangled in the yarn and fell in love in your neighbor‚Äôs barn.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nFarewell, Winter‚ÄúAlthough I love winter (mostly because of the fun winter sports), there are other great activities ahead. Thanks, winter, and see you next year!‚Äù ‚Äî Designed by Igor Izhik from Canada.previewwithout calendar: 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600\nTrue LoveDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nBalloonsDesigned by Xenia Latii from Germany.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMagic Of MusicDesigned by Vlad Gerasimov from Georgia.previewwithout calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880\nFebpurrary‚ÄúI was doodling pictures of my cat one day and decided I could turn it into a fun wallpaper ‚Äî because a cold, winter night in February is the perfect time for staying in and cuddling with your cat, your significant other, or both!‚Äù ‚Äî Designed by Angelia DiAntonio from Ohio, USA.previewwithout calendar: 320x480, 800x480, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nDog Year AheadDesigned by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nGood Times AheadDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nRomance Beneath The Waves‚ÄúThe 14th of February is just around the corner. And love is in the air, water, and everywhere!‚Äù ‚Äî Designed by Teodora Vasileva from Bulgaria.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1280x720, 1280x960, 1280x1024, 1400x1050, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nFebruary FernsDesigned by Nathalie Ouederni from France.previewwithout calendar: 320x480, 1024x768, 1280x1024, 1440x900, 1680x1200, 1920x1200, 2560x1440\nThe Great BeyondDesigned by Lars Pauwels from Belgium.previewwithout calendar: 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nIt‚Äôs A Cupcake Kind Of Day‚ÄúSprinkles are fun, festive, and filled with love‚Ä¶ especially when topped on a cupcake! Everyone is creative in their own unique way, so why not try baking some cupcakes and decorating them for your sweetie this month? Something homemade, like a cupcake or DIY craft, is always a sweet gesture.‚Äù ‚Äî Designed by Artsy Cupcake from the United States.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1152x864, 1280x800, 1280x1024, 1366x768, 1440x900, 1600x1200, 1680x1200, 1920x1200, 1920x1440, 2560x1440\nSnowDesigned by Elise Vanoorbeek from Belgium.previewwithout calendar: 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 1366x768, 2880x1800\nShare The Same Orbit!‚ÄúI prepared a simple and chill layout design for February called ‚ÄòShare The Same Orbit!‚Äô which suggests to share the love orbit.‚Äù ‚Äî Designed by Valentin Keleti from Romania.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nDark Temptation‚ÄúA dark romantic feel, walking through the city on a dark and rainy night.‚Äù ‚Äî Designed by Matthew Talebi from the United States.previewwithout calendar: 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nIce Cream Love‚ÄúMy inspiration for this wallpaper is the biggest love someone can have in life: the love for ice cream!‚Äù ‚Äî Designed by Zlatina Petrova from Bulgaria.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nLovely DayDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nTime Thief‚ÄúWho has stolen our time? Maybe the time thief, so be sure to enjoy the other 28 days of February.‚Äù ‚Äî Designed by Colorsfera from Spain.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1260x1440, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nIn Another Place At The Same Time‚ÄúFebruary is the month of love par excellence, but also a different month. Perhaps because it is shorter than the rest or because it is the one that makes way for spring, but we consider it a special month. It is a perfect month to make plans because we have already finished the post-Christmas crunch and we notice that spring and summer are coming closer. That is why I like to imagine that maybe in another place someone is also making plans to travel to unknown lands.‚Äù ‚Äî Designed by Ver√≥nica Valenzuela from Spain.previewwithout calendar: 800x480, 1024x768, 1152x864, 1280x800, 1280x960, 1440x900, 1680x1200, 1920x1080, 2560x1440\nFrench FriesDesigned by Doreen Bethge from Germany.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nFrozen Worlds‚ÄúA view of two frozen planets, lots of blue tints.‚Äù ‚Äî Designed by Rutger Berghmans from Belgium.previewwithout calendar: 1280x800, 1366x768, 1440x900, 1680x1050, 1920x1080, 1920x1200, 2560x1440\nOut There, There‚Äôs Someone Like You‚ÄúI am a true believer that out there in this world there is another person who is just like us, the problem is to find her/him.‚Äù ‚Äî Designed by Maria Keller from Mexico.previewwithout calendar: 320x480, 640x480, 640x1136, 750x1334, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1242x2208, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2880x1800\n‚ÄúGreben‚Äù Icebreaker‚ÄúDanube is Europe‚Äôs second largest river, connecting ten different countries. In these cold days, when ice paralyzes rivers and closes waterways, a small but brave icebreaker called Greben (Serbian word for ‚Äòreef‚Äô) seems stronger than winter. It cuts through the ice on ƒêerdap gorge (Iron Gate) ‚Äî the longest and biggest gorge in Europe ‚Äî thus helping the production of electricity in the power plant. This is our way to give thanks to Greben!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSharp‚ÄúI was sick recently and squinting through my blinds made a neat effect with shapes and colors.‚Äù ‚Äî Designed by Dylan Baumann from Omaha, NE.previewwithout calendar: 320x480, 640x480, 800x600, 1024x1024, 1280x1024, 1600x1200, 1680x1200, 1920x1080, 1920x1440, 2560x1440\nOn The Light SideDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160, printable PDF\nFebrewery‚ÄúI live in Madison, WI, which is famous for its breweries. Wisconsin even named their baseball team ‚ÄúThe Brewers.‚Äù If you like beer, brats, and lots of cheese, it‚Äôs the place for you!‚Äù ‚Äî Designed by Danny Gugger from the United States.previewwithout calendar: 320x480, 1020x768, 1280x800, 1280x1024, 1136x640, 2560x1440\nLove Angel Vader‚ÄúValentine‚Äôs Day is coming? Noooooooooooo!‚Äù ‚Äî Designed by Ricardo Gimenes from Spain.previewwithout calendar: 320x480, 640x960, 1024x768, 1024x1024, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1050, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2880x1800\nMade In Japan‚ÄúSee the beautiful colors, precision, and the nature of Japan in one picture.‚Äù ‚Äî Designed by Fatih Yilmaz from the Netherlands.previewwithout calendar: 1280x720, 1280x960, 1400x1050, 1440x900, 1600x1200, 1680x1200, 1920x1080, 1920x1440, 2560x1440, 3840x2160\nGroundhog‚ÄúThe Groundhog emerged from its burrow on February 2. If it is cloudy, then spring will come early, but if it is sunny, the groundhog will see its shadow, will retreat back into its burrow, and the winter weather will continue for six more weeks.‚Äù ‚Äî Designed by Oscar Marcelo from Portugal.previewwithout calendar: 1280x720, 1280x800, 1280x960, 1280x1024, 1440x900, 1680x1050, 1920x1080, 1920x1200, 2560x1440\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2025/01/ode-to-side-project-time/",
    "title": "An Ode To Side Project Time",
    "author": "Frederick O‚ÄôBrien",
    "date": "Jan 17, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Career",
      "Opinion Column",
      "Workflow",
      "Inspiration"
    ],
    "summary": "A once-revered perk of some tech workplaces, the status of ‚Äòside project time‚Äô seems to have slipped in recent years. Frederick O‚ÄôBrien believes it deserves a comeback.",
    "content": "There seemed to be a hot minute when the tech industry understood the value of idle tinkering and made a point of providing ‚Äòside project time‚Äô as an explicit working perk. The concept endures ‚Äî I‚Äôm lucky enough to work somewhere that has it ‚Äî but it seems to have been outpaced in recent years by the endless charge toward efficiency.\nThis seems a shame. We can‚Äôt optimize our way to quality solutions and original ideas. To try is a self-defeating fantasy. The value of side project time is hard to overstate, and more workplaces should not just provide it but actively encourage it.\nHere‚Äôs why.\nSide project time pops up under different names. At the Guardian, it‚Äôs 10% time, for example. Whatever the name, it amounts to the same thing: dedicated space and time during working hours for people to work on pet projects, independent learning, and personal development.\nGoogle founders Larry Page and Sergey Brin famously highlighted the practice as part of the company‚Äôs initial public offering in 2004, writing:\nThe extent to which Google still supports the practice 20 years on is hazy, and though other tech big hitters talk a good game, it doesn‚Äôt seem terribly widespread. The concept threatened to become mainstream for a while but has receded.\nThere are countless benefits to side project time, both on an individual and corporate level. Whether your priorities are personal growth or making lines, it ought to be on your radar.\nOn an individual level, side project time frees up people to explore ideas and concepts that interest them. This is good in itself. We all, of course, hope to nurture existing skills and develop new ones in our day-to-day work. Sometimes day to day work provides that. Sometimes it doesn‚Äôt. In either case, side project time opens up new avenues for exploration.\nIt is also a space in which the waters can clear. I‚Äôve previously written about the lessons of zen philosophy as they relate to pet project maintenance, with a major aspect being the value of not doing. Getting things done isn‚Äôt always the same as making things better.\nDedicated side project time facilitates personal growth, exploration, and learning. This is obviously good for the individual, but for the project too, because where are the benefits going to be felt?\nThere are a couple of examples of similar company outlooks I‚Äôd like to highlight. One is Pixar‚Äôs philosophy ‚Äî as outlined by co-founder Ed Catmull ‚Äî of protecting ‚Äòugly babies‚Äô, i.e. rough, unformed ideas:\nHe goes on to point out that they must eventually stand on their own two feet if they are to step out of the sandbox, but that formative time is vital to their development.\nThe mention of DARPA (the Defense Advanced Research Projects Agency), a research and development agency, highlights this outlook, with Bell Labs being one of its shining examples. Its work has received ten Nobel Prizes and five Turing Awards over the years.\nAs journalist Jon Gertner summarised in The Idea Factory: Bell Labs and the Great Age of American Innovation:\nIt‚Äôs a long-term outlook. One Bell employee recalled: ‚ÄúWhen I first came, there was the philosophy: look, what you‚Äôre doing might not be important for ten years or twenty years, but that‚Äôs fine, we‚Äôll be there then.‚Äù\nThe cynic might say side project time is research and development for companies without the budget allocation. Even if there is some truth to that, I think the former speaks to a more entwined culture. It‚Äôs not innovation over here with these people and business as usual over there with those other people.\nAnd let‚Äôs be frank: even in purely Machiavellian terms, it benefits employers. You‚Äôll be rewarded with happier, more knowledgeable employees and higher retention. You may even wind up with a surprising new product.\nSide project time is a slow burner but an invaluable thing to cultivate. Any readers in a position to try side project time will reap the benefits in time.\nSome of the best things in life come from idle tinkering. Let people do their thing. Give their ideas space to grow, and they will. And they might just be brilliant."
  },
  {
    "url": "/2025/01/transitioning-top-layer-entries-display-property-css/",
    "title": "Transitioning Top-Layer Entries And The Display Property In CSS",
    "author": "Brecht De Ruyte",
    "date": "Jan 29, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS",
      "Animation",
      "Tools",
      "Techniques"
    ],
    "summary": "We are getting spoiled with so many new features involving animations with CSS, from scroll-driven animations to view transitions, and plenty of things in between. But it‚Äôs not always the big features that make our everyday lives easier; sometimes, it‚Äôs those ease-of-life features that truly enhance our projects. In this article, Brecht De Ruyte puts two features on display: @starting-style and transition-behavior ‚Äî two properties that are absolutely welcome additions to your everyday work with CSS animations.",
    "content": "Animating from and to display: none; was something we could only achieve with JavaScript to change classes or create other hacks. The reason why we couldn‚Äôt do this in CSS is explained in the new CSS Transitions Level 2 specification:\nIn simple terms, this means that we couldn‚Äôt start a transition on an element that is hidden or that has just been created.\nallow-discrete is a bit of a strange name for a CSS property value, right? We are going on about transitioning display: none, so why isn‚Äôt this named transition-behavior: allow-display instead? The reason is that this does a bit more than handling the CSS display property, as there are other ‚Äúdiscrete‚Äù properties in CSS. A simple rule of thumb is that discrete properties do not transition but usually flip right away between two states. Other examples of discrete properties are visibility and mix-blend-mode. I‚Äôll include an example of these at the end of this article.\nTo summarise, setting the transition-behavior property to allow-discrete allows us to tell the browser it can swap the values of a discrete property (e.g., display, visibility, and mix-blend-mode) at the 50% mark instead of the 0% mark of a transition.\nThe @starting-style rule defines the styles of an element right before it is rendered to the page. This is highly needed in combination with transition-behavior and this is why:\nWhen an item is added to the DOM or is initially set to display: none, it needs some sort of ‚Äústarting style‚Äù from which it needs to transition. To take the example further, popovers and dialog elements are added to a top layer which is a layer that is outside of your document flow, you can kind of look at it as a sibling of the <html> element in your page‚Äôs structure. Now, when opening this dialog or popover, they get created inside that top layer, so they don‚Äôt have any styles to start transitioning from, which is why we set @starting-style. Don‚Äôt worry if all of this sounds a bit confusing. The demos might make it more clearly. The important thing to know is that we can give the browser something to start the animation with since it otherwise has nothing to animate from.\nAt the moment of writing, the transition-behavior is available in Chrome, Edge, Safari, and Firefox. It‚Äôs the same for @starting-style, but Firefox currently does not support animating from display: none. But remember that everything in this article can be perfectly used as a progressive enhancement.\nNow that we have the theory of all this behind us, let‚Äôs get practical. I‚Äôll be covering three use cases in this article:\nFor the first example, let‚Äôs take a look at @starting-style alone. I created this demo purely to explain the magic. Imagine you want two buttons on a page to add or remove list items inside of an unordered list.\nThis could be your starting HTML:\nNext, we add actions that add or remove those list items. This can be any method of your choosing, but for demo purposes, I quickly wrote a bit of JavaScript for it:\nWhen clicking the addButton, an empty list item gets created inside of the unordered list. When clicking the removeButton, the last item gets a new .removing class and finally gets taken out of the DOM after 200ms.\nWith this in place, we can write some CSS for our items to animate the removing part:\nThis is great! Our .removing animation is already looking perfect, but what we were looking for here was a way to animate the entry of items coming inside of our DOM. For this, we will need to define those starting styles, as well as the final state of our list items.\nFirst, let‚Äôs update the CSS to have the final state inside of that list item:\nNot much has changed, but now it‚Äôs up to us to let the browser know what the starting styles should be. We could set this the same way we did the .removing styles like so:\nNow we‚Äôve let the browser know that the @starting-style should include zero opacity and be slightly nudged to the bottom using a transform. The final result is something like this:\nBut we don‚Äôt need to stop there! We could use different animations for entering and exiting. We could, for example, update our starting style to the following:\nDoing this, the items will enter from the top and exit to the bottom. See the full example in this CodePen:\nIn the previous example, we added and removed items from our DOM. In the next demo, we will show and hide items using the CSS display property. The basic setup is pretty much the same, except we will add eight list items to our DOM with the .hidden class attached to it:\nOnce again, for demo purposes, I added a bit of JavaScript that, this time, removes the .hidden class of the next item when clicking the addButton and adds the hidden class back when clicking the removeButton:\nLet‚Äôs put together everything we learned so far, add a @starting-style to our items, and do the basic setup in CSS:\nThis time, we have added the .hidden class, set it to display: none, and added the same opacity and transform declarations as we previously did with the .removing class in the last example. As you might expect, we get a nice fade-in for our items, but removing them is still very abrupt as we set our items directly to display: none.\nThis is where the transition-behavior property comes into play. To break it down a bit more, let‚Äôs remove the transition property shorthand of our previous CSS and open it up a bit:\nAll that is left to do is transition the display property and set the transition-behavior property to allow-discrete:\nWe are now animating the element from display: none, and the result is exactly as we wanted it:\nWe can use the transition shorthand property to make our code a little less verbose:\nYou can add allow-discrete in there. But if you do, take note that if you declare a shorthand transition after transition-behavior, it will be overruled. So, instead of this:\n‚Ä¶we want to declare transition-behavior after the transition shorthand:\nOtherwise, the transition shorthand property overrides transition-behavior.\nLet‚Äôs add a few use cases with dialogs and popovers. Dialogs and popovers are good examples because they get added to the top layer when opening them.\nWe‚Äôve already likened the ‚Äútop layer‚Äù to a sibling of the <html> element, but you might also think of it as a special layer that sits above everything else on a web page. It‚Äôs like a transparent sheet that you can place over a drawing. Anything you draw on that sheet will be visible on top of the original drawing.\nThe original drawing, in this example, is the DOM. This means that the top layer is out of the document flow, which provides us with a few benefits. For example, as I stated before, dialogs and popovers are added to this top layer, and that makes perfect sense because they should always be on top of everything else. No more z-index: 9999!\nBut it‚Äôs more than that:\nHopefully, you are starting to understand the importance of the top layer and how we can transition elements in and out of it as we would with popovers and dialogues.\nThe following HTML contains a button that opens a <dialog> element, and that <dialog> element contains another button that closes the <dialog>. So, we have one button that opens the <dialog> and one that closes it.\nA lot is happening in HTML with invoker commands that will make the following step a bit easier, but for now, let‚Äôs add a bit of JavaScript to make this modal actually work:\nI‚Äôm using the following styles as a starting point. Notice how I‚Äôm styling the ::backdrop as an added bonus!\nThis results in a pretty hard transition for the entry, meaning it‚Äôs not very smooth:\nLet‚Äôs add transitions to this dialog element and the backdrop. I‚Äôm going a bit faster this time because by now, you likely see the pattern and know what‚Äôs happening:\nWhen a dialog is open, the browser slaps an open attribute on it:\nAnd that‚Äôs something else we can target with CSS, like dialog[open]. So, in this case, we need to set a @starting-style for when the dialog is in an open state.\nLet‚Äôs add a transition for our backdrop while we‚Äôre at it:\nNow you‚Äôre probably thinking: A-ha! But you should have added the display property and the transition-behavior: allow-discrete on the backdrop!\nBut no, that is not the case. Even if I would change my backdrop pseudo-element to the following CSS, the result would stay the same:\nIt turns out that we are working with a ::backdrop and when working with a ::backdrop, we‚Äôre implicitly also working with the CSS overlay property, which specifies whether an element appearing in the top layer is currently rendered in the top layer.\nAnd overlay just so happens to be another discrete property that we need to include in the transition-property declaration:\nUnfortunately, this is currently only supported in Chromium browsers, but it can be perfectly used as a progressive enhancement.\nAnd, yes, we need to add it to the dialog styles as well:\nIt‚Äôs pretty much the same thing for a popover instead of a dialog. I‚Äôm using the same technique, only working with popovers this time:\nThere are a few other discrete properties besides the ones we covered here. If you remember the second demo, where we transitioned some items from and to display: none, the same can be achieved with the visibility property instead. This can be handy for those cases where you want items to preserve space for the element‚Äôs box, even though it is invisible.\nSo, here‚Äôs the same example, only using visibility instead of display.\nThe CSS mix-blend-mode property is another one that is considered discrete. To be completely honest, I can‚Äôt find a good use case for a demo. But I went ahead and created a somewhat trite example where two mix-blend-modes switch right in the middle of the transition instead of right away.\nThat‚Äôs an overview of how we can transition elements in and out of the top layer! In an ideal world, we could get away without needing a completely new property like transition-behavior just to transition otherwise ‚Äúun-transitionable‚Äù properties, but here we are, and I‚Äôm glad we have it.\nBut we also got to learn about @starting-style and how it provides browsers with a set of styles that we can apply to the start of a transition for an element that‚Äôs in the top layer. Otherwise, the element has nothing to transition from at first render, and we‚Äôd have no way to transition them smoothly in and out of the top layer."
  },
  {
    "url": "/2025/01/svelte-5-future-frameworks-chat-rich-harris/",
    "title": "Svelte 5 And The Future Of Frameworks: A Chat With Rich Harris",
    "author": "Frederick O‚ÄôBrien",
    "date": "Jan 28, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Frameworks",
      "Coding",
      "Tools",
      "Techniques"
    ],
    "summary": "After months of anticipation, debate, and even a bit of apprehension, Svelte 5 arrived earlier this year. Frederick O‚ÄôBrien caught up with its creator, Rich Harris, to talk about the path that brought him and his team here and what lies ahead.",
    "content": "Svelte occupies a curious space within the web development world. It‚Äôs been around in one form or another for eight years now, and despite being used by the likes of Apple, Spotify, IKEA, and the New York Times, it still feels like something of an upstart, maybe even a black sheep. As creator Rich Harris recently put it,\nThis may be why the release of Svelte 5 in October this year felt like such a big deal. It tries to square the circle of convention and innovation. Can it remain one of the best-loved frameworks on the web while shaking off suspicions that it can‚Äôt quite rub shoulders with React, Vue, and others when it comes to scalability? Whisper it, but they might just have pulled it off. The post-launch reaction has been largely glowing, with weekly npm downloads doubling compared to six months ago.\nStill, I‚Äôm not in the predictions game. The coming months and years will be the ultimate measure of Svelte 5. And why speculate on the most pressing questions when I can just ask Rich Harris myself? He kindly took some time to chat with me about Svelte and the future of web development.\nSvelte 5 is a ground-up rewrite. I don‚Äôt want to get into the weeds here ‚Äî key changes are covered nicely in the migration guide ‚Äî but suffice it to say the big one where day-to-day users are concerned is runes. At times, magic feeling $ has given way to the more explicit $state, $derived, and $effect.\nA lot of the talk around Svelte 5 included the sentiment that it marks the ‚Äòmaturation‚Äô of the framework. To Harris and the Svelte team, it feels like a culmination, with lessons learned combined with aspirations to form something fresh yet familiar.\nAlthough raw usage numbers aren‚Äôt everything, seeing the uptick in installations has been a welcome signal for Harris and the Svelte team.\nThe tenets of a Svelte philosophy outlined by Harris earlier this year reinforce the point:\nClick the link above to hear these expounded upon, but you get the crux. Svelte is very much a qualitative project. Although Svelte performs well in a fair few performance metrics itself, Harris has long been a critic of metrics like Lighthouse being treated as ends in themselves. Fastest doesn‚Äôt necessarily mean best. At the end of the day, we are all in the business of making quality websites.\nFrameworks are a means to that end, and Harris sees plenty of work to be done there.\nEvery milestone is a cause for celebration. It‚Äôs also a natural pause in which to ask, ‚ÄúNow what?‚Äù For the Svelte team, the sights seem firmly set on shoring up the quality of the web.\nThis certainly meshes with my experience and, doubtless, countless others. Between enshittification, manipulative algorithms, and the seemingly endless influx of AI-generated slop, it‚Äôs hard to shake the feeling that the web is becoming increasingly decadent and depraved.\nThis sense of responsibility for the creation and maintenance of good software speaks to the Svelte team‚Äôs holistic outlook and also looks to influence priorities going forward.\nPart of Svelte 5 feels like a new chapter in the sense of fresh foundations. Anyone who‚Äôs worked in software development or web design will tell you how much of a headache ground-up rewrites are. Rebuilding the foundations is something to celebrate when you pull it off, but it also begs the question: What are the foundations for?\nHarris has his eyes on the wider ecosystem around frameworks.\nIn the short to medium term, this will likely translate into some love for SvelteKit, the web application framework built around Svelte. The framework might start having opinions about authentication and databases, an official component library perhaps, and dev tools in the spirit of the Astro dev toolbar. And all these could be precursors to even bigger explorations.\nAlthough Svelte has been ticking along happily for years, the release of version 5 has felt like a new lease of life for the ecosystem around it. Every day brings new and exciting projects to the front page of the /r/sveltejs subreddit, while this year‚Äôs Advent of Svelte has kept up a sense of momentum following the stable release.\nBelow are just a handful of the Svelte-based projects that have caught my eye:\nDespite the turbulence and inescapable sense of existential dread surrounding much tech, this feels like an exciting time for web development. The conditions are ripe for lovely new things to emerge.\nAnd as for Svelte 5 itself, what does Rich Harris say to those who might be on the fence?"
  },
  {
    "url": "/2025/01/designing-high-traffic-events-cloudways/",
    "title": "How To Design For High-Traffic Events And Prevent Your Website From Crashing",
    "author": "Saad Khan",
    "date": "Jan 7, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Performance"
    ],
    "summary": "Product drops and sales are a great way to increase revenue, but these events can result in traffic spikes that affect a site‚Äôs availability and performance. To prevent website crashes, you‚Äôll have to make sure that the sites you design can handle large numbers of server requests at once. Let‚Äôs discuss how!",
    "content": "Product launches and sales typically attract large volumes of traffic. Too many concurrent server requests can lead to website crashes if you‚Äôre not equipped to deal with them. This can result in a loss of revenue and reputation damage.\nThe good news is that you can maximize availability and prevent website crashes by designing websites specifically for these events. For example, you can switch to a scalable cloud-based web host, or compress/optimize images to save bandwidth.\nIn this article, we‚Äôll discuss six ways to design websites for high-traffic events like product drops and sales:\nLet‚Äôs jump right in!\nLet‚Äôs take a look at six ways to design websites for high-traffic events, without worrying about website crashes and other performance-related issues.\nOne of the simplest ways to design a website that accommodates large volumes of traffic is to optimize and compress images. Typically, images have very large file sizes, which means they take longer for browsers to parse and display. Additionally, they can be a huge drain on bandwidth and lead to slow loading times.\nYou can free up space and reduce the load on your server by compressing and optimizing images. It‚Äôs a good idea to resize images to make them physically smaller. You can often do this using built-in apps on your operating system.\nThere are also online optimization tools available like Tinify, as well as advanced image editing software like Photoshop or GIMP:\nImage format is also a key consideration. Many designers rely on JPG and PNG, but adaptive modern image formats like WebP can reduce the weight of the image and provide a better user experience (UX).\nYou may even consider installing an image optimization plugin or an image CDN to compress and scale images automatically. Additionally, you can implement lazy loading, which prioritizes the loading of images above the fold and delays those that aren‚Äôt immediately visible.\nThe most convenient way to design a high-traffic website without worrying about website crashes is to upgrade your web hosting solution.\nTraditionally, when you sign up for a web hosting plan, you‚Äôre allocated a pre-defined number of resources. This can negatively impact your website performance, particularly if you use a shared hosting service.\nUpgrading your web host ensures that you have adequate resources to serve visitors flocking to your site during high-traffic events. If you‚Äôre not prepared for this eventuality, your website may crash, or your host may automatically upgrade you to a higher-priced plan.\nTherefore, the best solution is to switch to a scalable web host like Cloudways Autonomous:\nThis is a fully managed WordPress hosting service that automatically adjusts your web resources based on demand. This means that you‚Äôre able to handle sudden traffic surges without the hassle of resource monitoring and without compromising on speed.\nWith Cloudways Autonomous your website is hosted on multiple servers instead of just one. It uses Kubernetes with advanced load balancing to distribute traffic among these servers. Kubernetes is capable of spinning up additional pods (think of pods as servers) based on demand, so there‚Äôs no chance of overwhelming a single server with too many requests.\nHigh-traffic events like sales can also make your site a prime target for hackers. This is because, in high-stress situations, many sites enter a state of greater vulnerability and instability. But with Cloudways Autonomous, you‚Äôll benefit from DDoS mitigation and a web application firewall to improve website security.\nAs you‚Äôd expect, large volumes of traffic can significantly impact the security and stability of your site‚Äôs network. This can result in website crashes unless you take the proper precautions when designing sites for these events.\nA content delivery network (CDN) is an excellent solution to the problem. You‚Äôll get access to a collection of strategically-located servers, scattered all over the world. This means that you can reduce latency and speed up your content delivery times, regardless of where your customers are based.\nWhen a user makes a request for a website, they‚Äôll receive content from a server that‚Äôs physically closest to their location. Plus, having extra servers to distribute traffic can prevent a single server from crashing under high-pressure conditions. Cloudflare is one of the most robust CDNs available, and luckily, you‚Äôll get access to it when you use Cloudways Autonomous.\nYou can also find optimization plugins or caching solutions that give you access to a CDN. Some tools like Jetpack include a dedicated image CDN, which is built to accommodate and auto-optimize visual assets.\nWhen a user requests a website, it can take a long time to load all the HTML, CSS, and JavaScript contained within it. Caching can help your website combat this issue.\nA cache functions as a temporary storage location that keeps copies of your web pages on hand (once they‚Äôve been requested). This means that every subsequent request will be served from the cache, enabling users to access content much faster.\nThe cache mainly deals with static content like HTML which is much quicker to parse compared to dynamic content like JavaScript. However, you can find caching technologies that accommodate both types of content.\nThere are different caching mechanisms to consider when designing for high-traffic events. For example, edge caching is generally used to cache static assets like images, videos, or web pages. Meanwhile, database caching enables you to optimize server requests.\nIf you‚Äôre expecting fewer simultaneous sessions (which isn‚Äôt likely in this scenario), server-side caching can be a good option. You could even implement browser caching, which affects static assets based on your HTTP headers.\nThere are plenty of caching plugins available if you want to add this functionality to your site, but some web hosts provide built-in solutions. For example, Cloudways Autonomous uses Cloudflare‚Äôs edge cache and integrated object cache.\nOne of the best ways to design websites while preparing for peak traffic is to carry out comprehensive stress tests.\nThis enables you to find out how your website performs in various conditions. For instance, you can simulate high-traffic events and discover the upper limits of your server‚Äôs capabilities. This helps you avoid resource drainage and prevent website crashes.\nYou might have experience with speed testing tools like Pingdom, which assess your website performance. But these tools don‚Äôt help you understand how performance may be impacted by high volumes of traffic.\nTherefore, you‚Äôll need to use a dedicated stress test tool like Loader.io:\nThis is completely free to use, but you‚Äôll need to register for an account and verify your website domain. You can then download your preferred file and upload it to your server via FTP.\nAfter that, you‚Äôll find three different tests to carry out. Once your test is complete, you can take a look at the average response time and maximum response time, and see how this is affected by a higher number of clients.\nThe final way to design websites for high-traffic events is to refine the WordPress back end.\nThe admin panel is where you install plugins, activate themes, and add content. The more of these features that you have on your site, the slower your pages will load.\nTherefore, it‚Äôs a good idea to delete any old pages, posts, and images that are no longer needed. If you have access to your database, you can even go in and remove any archived materials.\nOn top of this, it‚Äôs best to remove plugins that aren‚Äôt essential for your website to function. Again, with database access, you can get in there and delete any tables that sometimes get left behind when you uninstall plugins via the WordPress dashboard.\nWhen it comes to themes, you‚Äôll want to opt for a simple layout with a minimalist design. Themes that come with lots of built-in widgets or rely on third-party plugins will likely add bloat to your loading times. Essentially, the lighter your back end, the quicker it will load.\nProduct drops and sales are a great way to increase revenue, but these events can result in traffic spikes that affect a site‚Äôs availability and performance. To prevent website crashes, you‚Äôll have to make sure that the sites you design can handle large numbers of server requests at once.\nThe easiest way to support fluctuating traffic volumes is to upgrade to a scalable web hosting service like Cloudways Autonomous. This way, you can adjust your server resources automatically, based on demand. Plus, you‚Äôll get access to a CDN, caching, and an SSL certificate. Get started today!"
  },
  {
    "url": "/2025/01/solo-development-learning-to-let-go-of-perfection/",
    "title": "Solo Development: Learning To Let Go Of Perfection",
    "author": "Victor Ayomipo",
    "date": "Jan 10, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Workflow",
      "Inspiration",
      "Web Design",
      "Opinion Column"
    ],
    "summary": "The best and worst thing about solo development is the ‚Äúsolo‚Äù part. There‚Äôs a lot of freedom in working alone, and that freedom can be inspiring, but it can also become a debilitating hindrance to productivity and progress. Victor Ayomipo shares his personal lessons on what it takes to navigate solo development and build the ‚Äúright‚Äù app.",
    "content": "As expected from anyone who has ever tried building anything solo, my goal was not to build an app but the app ‚Äî the one app that‚Äôs so good you wonder how you ever survived without it. I had everything in place: wireframes, a to-do list, project structure ‚Äî you name it. Then I started building. Just not the product. I started with the landing page for it, which took me four days, and I hadn‚Äôt even touched the app‚Äôs core features yet. The idea itself was so good I had to start marketing it right away!\nI found myself making every detail perfect: every color, shadow, gradient, font size, margin, and padding had to be spot on. I don‚Äôt even want to say how long the logo took.\nWhy did I get so stuck on something that was never even part of the core app I wanted so badly to build? Why wasn‚Äôt I nagging myself to move on when I clearly needed to?\nThe reality of solo development is that there is no one to tell you when to stop or simply say, ‚ÄúYo, this is good enough! Move on.‚Äú Most users don‚Äôt care whether a login button is yellow or green. What they want (and need) is a button that works and solves their problem when clicking it.\nLike most solo developers, I also started with the hope of pushing out builds with the efficiency of a large-scale team. But it is easier said than done.\nWhen building solo, you start coding, then you maybe notice a design flaw, and you switch to fixing it, then a bug appears, and you try fixing that, and voil√† ‚Äî the day is gone. There comes a time when it hits you that, ‚ÄúYou know what? It‚Äôs time to build messy.‚Äù That‚Äôs when good intentions of project and product management go out the window, and that‚Äôs when I find myself working by the seat of my pants rather than plowing forward with defined goals and actionable tasks that are based on good UI/UX principles, like storyboards, user personas, and basic prioritization.\nThis realization is something you have to experience to grasp fully. The trick I‚Äôve learned is to focus on getting something out there for people to see and then work on actual feedback. In other words,\nBecause guess what? Even if you have the greatest app idea in the world, you‚Äôre never going to make it perfect until you start receiving feedback on it. You‚Äôre no mind reader ‚Äî as much as we all want to be one ‚Äî and some insights (often the most relevant) can only be received through real user feedback and analytics. Sure, your early assumptions may be correct, but how do you know until you ship them and start evaluating them?\nNowadays, I like to tell others (and myself) to work from hypotheses instead of absolutes. Make an assertion, describe how you intend to test it, and then ship it. With that, you can gather relevant insights that you can use to get closer to perfection ‚Äî whatever that is.\nLet‚Äôs be real: Building a full application on your own is not an easy feat. I‚Äôd say it‚Äôs like trying to build a house by yourself; it seems doable, but the reality is that it takes a lot more hands than the ones you have to make it happen. And not only to make it happen but to make it happen well.\nThere‚Äôs only so much one person can do, and admitting your strengths and weaknesses up-front will serve you well by avoiding the trap that you can do it all alone.\nI once attempted to build a project management app alone. I knew it might be difficult, but I was confident. Within a few days, this ‚Äúsimple‚Äù project grew legs and expanded with new features like team collaboration, analytics, time tracking, and custom reports being added, many of which I was super excited to make.\nBuilding a full app takes a lot of time. Think about it; you‚Äôre doing the work of a team all alone without any help. There‚Äôs no one to provide you with design assets, content, or back-end development. No stakeholder to ‚Äúswoop and poop‚Äù on your ideas (which might be a good thing). Every decision, every line of code, and every design element is 100% on you alone.\nIt is technically possible to build a full-featured app solo, but when you think about it, there‚Äôs a reason why the concept of MVP exists. Take Instagram, for example; it wasn‚Äôt launched with reels, stories, creator‚Äôs insights, and so on. It started with one simple thing: photo sharing.\nAll I‚Äôm trying to say is start small, launch, and let users guide the evolution of the product. And if you can recruit more hands to help, that would be even better. Just remember to leverage your strengths and reinforce your weaknesses by leaning on other people‚Äôs strengths.\nThe concept of a minimum viable product (MVP) has always been fascinating to me. In its simplest form, it means building the basic version of your idea that technically works and getting it in front of users. Yes, this is such a straightforward and widely distributed tip, but it‚Äôs still one of the hardest principles for solo developers to follow, particularly for me.\nI mentioned earlier that my ‚Äúgenius‚Äù app idea grew legs. And lots of them. I had more ideas than I knew what to do with, and I hadn‚Äôt even written a reasonable amount of code! Sure, this app could be enhanced to support face ID, dark mode, advanced security, real-time results, and a bunch of other features. But all these could take months of development for an app that you‚Äôre not even certain users want.\nI‚Äôve learned to ask myself: ‚ÄúWhat would this project look like if it was easy to build?‚Äù. It‚Äôs so surreal how the answer almost always aligns with what users want. If you can distill your grand idea into a single indispensable idea that does one or two things extremely well, I think you‚Äôll find ‚Äî as I have ‚Äî that the final result is laser-focused on solving real user problems.\nShip the simplest version first. Dark mode can wait. All you need is a well-defined idea, a hypothesis to test, and a functional prototype to validate that hypothesis; anything else is probably noise.\nYou may have heard about the ‚ÄúShip it Fast‚Äù approach to development and instantly recognize the parallels between it and what I‚Äôve discussed so far. In a sense, ‚ÄúShip it Fast‚Äù is ultimately another way of describing an MVP: get the idea out fast and iterate on it just as quickly.\nSome might disagree with the ship-fast approach and consider it reckless and unprofessional, which is understandable because, as developers, we care deeply about the quality of our work. However,\nThat‚Äôs why I like to tell other developers that shipping an MVP is the safest, most professional way to approach development. It forces you to stay in scope and on task without succumbing to your whimsies. I even go so far as to make myself swear an ‚ÄúOath of Focus‚Äù at the start of every project.\nRemember, there‚Äôs no one there to hold you accountable when you develop on your own. Taking a brief moment to pause and accepting that my first version won‚Äôt be flawless helps put me in the right headspace early in the project.\nI have noticed that no matter what I build, there‚Äôs always going to be bugs. Always. If Google still has bugs in the Google Notes app, trust me, then it‚Äôs fine for a solo developer to accept that bugs will always be a part of any project.\nLook at flaky tests. For instance, you could run a test over 1,000 times and get all greens, and then the next day, you run the same test, an error shows. It‚Äôs just the nature of software development. And for the case of endlessly adding features, it never ends either. There‚Äôs always going to be a new feature that you‚Äôre excited about. The challenge is to curb some of that enthusiasm and shelve it responsibly for a later time when it makes sense to work on it.\nI‚Äôve learned to categorize bugs and features into two types: intrusive and non-intrusive. Intrusive are those things that prevent projects from functioning properly until fixed, like crashes and serious errors. The non-intrusive items are silent ones. Sure, they should be fixed, but the product will work just fine and won‚Äôt prevent users from getting value if they aren‚Äôt addressed right away.\nYou may want to categorize your bugs and features in other ways, and I‚Äôve seen plenty of other examples, including:\nI‚Äôve even seen developers and teams use these categorizations to create some fancy priority ‚Äúscore‚Äù that considers each category. Whatever it is that helps you stay focused and on-task is going to be the right approach for you more than what specific category you use.\nHere‚Äôs a classic conundrum in development circles:\nAnd just like that, you‚Äôve spent an entire day thinking about nothing but the tech stack you‚Äôre using to build the darn thing.\nWe all know that an average user could care less about the tech stack under the hood. Go ahead and ask your mom what tech stack WhatsApp is built on, and let me know what she says. Most times, it‚Äôs just us who obsesses about tech stacks, and that usually only happens when we‚Äôre asked to check under the hood.\nI have come to accept that there will always be new tech stacks released every single day with the promise of 50% performance and 10% less code. That new tool might scale better, but do I actually have a scaling problem with my current number of zero users? Probably not.\nMy advice:\nThere‚Äôs no use fighting something early if something you already know and use gets the job done. Basically, don‚Äôt prematurely optimize or constantly chase the latest shiny object.\nI know lots of solo developers out there suck at design, and I‚Äôm probably among the top 50. My design process has traditionally been to open VS Code, create a new project, and start building the idea in whatever way comes to mind. No design assets, comps, or wireframes to work with ‚Äî just pure, unstructured improvisation. That‚Äôs not a good idea, and it‚Äôs a habit I‚Äôm actively trying to break.\nThese days, I make sure to have a blueprint of what I‚Äôm building before I start writing code. Once I have that, I make sure to follow through and not change anything to respect my ‚ÄúOath of Focus.‚Äù\nI like how many teams call comps and wireframes ‚Äúproject artifacts.‚Äù They are pieces of evidence that provide a source of truth for how something looks and works. You might be the sort of person who works better with sets of requirements, and that‚Äôs totally fine. But having some sort of documentation that you can point back to in your work is like having a turn-by-turn navigation on a long road trip ‚Äî it‚Äôs indispensable for getting where you need to go.\nAnd what if you‚Äôre like me and don‚Äôt pride yourself on being the best designer? That‚Äôs another opportunity to admit your weaknesses up-front and recruit help from someone with those strengths. That way, you can articulate the goal and focus on what you‚Äôre good at.\nPersonally, without deadlines, I‚Äôm almost unstoppable at procrastinating. I‚Äôve started setting time limits when building any project, as it helps with procrastination and makes sure something is pushed out at a specified time. Although this won‚Äôt work without accountability, I feel the two work hand in hand.\nI set a 2‚Äì3 week deadline to build a project. And no matter what, as soon as that time is up, I must post or share the work in its current state on my socials. Because of this, I‚Äôm not in my comfort zone anymore because I won‚Äôt want to share a half-baked project with the public; I‚Äôm conditioned to work faster and get it all done. It‚Äôs interesting to see the length of time you can go if you can trick your brain.\nI realize that this is an extreme constraint, and it may not work for you. I‚Äôm just the kind of person who needs to know what my boundaries are. Setting deadlines and respecting them makes me a more disciplined developer. More than that, it makes me work efficiently because I stop overthinking things when I know I have a fixed amount of time, and that leads to faster builds.\nThe best and worst thing about solo development is the ‚Äúsolo‚Äù part. There‚Äôs a lot of freedom in working alone, and that freedom can be inspiring. However, all that freedom can be intoxicating, and if left unchecked, it becomes a debilitating hindrance to productivity and progress. That‚Äôs a good reason why solo development isn‚Äôt for everyone. Some folks will respond a lot better to a team environment.\nBut if you are a solo developer, then I hope my personal experiences are helpful to you. I‚Äôve had to look hard at myself in the mirror many days to come to realize that I am not a perfect developer who can build the ‚Äúperfect‚Äù app alone. It takes planning, discipline, and humility to make anything, especially the right app that does exactly the right thing.\nIdeas are cheap and easy, but stepping out of our freedom and adding our own constraints based on progress over perfection is the secret sauce that keeps us moving and spending our time on those essential things."
  },
  {
    "url": "/2025/01/on-device-ai-building-smarter-faster-private-applications/",
    "title": "On-Device AI: Building Smarter, Faster, And Private Applications",
    "author": "Joas Pambou",
    "date": "Jan 16, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "AI",
      "Tools",
      "LLM",
      "Techniques",
      "Apps"
    ],
    "summary": "Shouldn‚Äôt there be a way to keep your apps or project data private and improve performance by reducing server latency? This is what on-device AI is designed to solve. It handles AI processing locally, right on your device, without connecting to the internet and sending data to the cloud. In this article, Joas Pambou explains what on-device AI is, why it‚Äôs important, the tools to build this type of technology, and how it can change the way we use technology every day.",
    "content": "It‚Äôs not too far-fetched to say AI is a pretty handy tool that we all rely on for everyday tasks. It handles tasks like recognizing faces, understanding or cloning speech, analyzing large data, and creating personalized app experiences, such as music playlists based on your listening habits or workout plans matched to your progress.\nBut here‚Äôs the catch:\nTake self-driving cars, for example. These types of cars need AI to process data from cameras, sensors, and other inputs to make split-second decisions, such as detecting obstacles or adjusting speed for sharp turns. Now, if all that processing depends on the cloud, network latency connection issues could lead to delayed responses or system failures. That‚Äôs why the AI should operate directly within the car. This ensures the car responds instantly without needing direct access to the internet.\nThis is what we call On-Device AI (ODAI). Simply put, ODAI means AI does its job right where you are ‚Äî on your phone, your car, or your wearable device, and so on ‚Äî without a real need to connect to the cloud or internet in some cases. More precisely, this kind of setup is categorized as Embedded AI (EMAI), where the intelligence is embedded into the device itself.\nOkay, I mentioned ODAI and then EMAI as a subset that falls under the umbrella of ODAI. However, EMAI is slightly different from other terms you might come across, such as Edge AI, Web AI, and Cloud AI. So, what‚Äôs the difference? Here‚Äôs a quick breakdown:\nThe main difference? It‚Äôs about where the AI does the work: on your device, nearby, or somewhere far off in the cloud or web.\nOn-device AI is, first and foremost, about privacy ‚Äî keeping your data secure and under your control. It processes everything directly on your device, avoiding the need to send personal data to external servers (cloud). So, what exactly makes this technology worth using?\nOn-device AI processes data instantly because it doesn‚Äôt need to send anything to the cloud. For example, think of a smart doorbell ‚Äî it recognizes a visitor‚Äôs face right away and notifies you. If it had to wait for cloud servers to analyze the image, there‚Äôd be a delay, which wouldn‚Äôt be practical for quick notifications.\nPicture this: You are opening an app using voice commands or calling a friend and receiving a summary of the conversation afterward. Your phone processes the audio data locally, and the AI system handles everything directly on your device without the help of external servers. This way, your data stays private, secure, and under your control.\nA big win of ODAI is that it doesn‚Äôt need the internet to work, which means it can function even in areas with poor or no connectivity. You can take modern GPS navigation systems in a car as an example; they give you turn-by-turn directions with no signal, making sure you still get where you need to go.\nODAI AI skips out the round trip of sending data to the cloud and waiting for a response. This means that when you make a change, like adjusting a setting, the device processes the input immediately, making your experience smoother and more responsive.\nAt its core, ODAI uses special hardware and efficient model designs to carry out tasks directly on devices like smartphones, smartwatches, and Internet of Things (IoT) gadgets. Thanks to the advances in hardware technology, AI can now work locally, especially for tasks requiring AI-specific computer processing, such as the following:\nHere‚Äôs a look at some innovative AI chips in the industry:\nThese chips or AI accelerators show different ways to make devices more efficient, use less power, and run advanced AI tasks.\nCreating AI models that fit resource-constrained devices often requires combining clever hardware utilization with techniques to make models smaller and more efficient. I‚Äôd like to cover a few choice examples of how teams are optimizing AI for increased performance using less energy.\nMeta‚Äôs approach to ODAI introduced a model built specifically for smartphones. Instead of scaling traditional models, they designed MobileLLM from scratch to balance efficiency and performance. One key innovation was increasing the number of smaller layers rather than having fewer large ones. This design choice improved the model‚Äôs accuracy and speed while keeping it lightweight. You can try out the model either on Hugging Face or using vLLM, a library for LLM inference and serving.\nThis simplifies a model‚Äôs internal calculations by using lower-precision numbers, such as 8-bit integers, instead of 32-bit floating-point numbers. Quantization significantly reduces memory requirements and computation costs, often with minimal impact on model accuracy.\nNeural networks contain many weights (connections between neurons), but not all are crucial. Pruning identifies and removes less important weights, resulting in a smaller, faster model without significant accuracy loss.\nLarge matrices are a core component of AI models. Matrix decomposition splits these into smaller matrices, reducing computational complexity while approximating the original model‚Äôs behavior.\nThis technique involves training a smaller model (the ‚Äústudent‚Äù) to mimic the outputs of a larger, pre-trained model (the ‚Äúteacher‚Äù). The smaller model learns to replicate the teacher‚Äôs behavior, achieving similar accuracy while being more efficient. For instance, DistilBERT successfully reduced BERT‚Äôs size by 40% while retaining 97% of its performance.\nWell, all the model compression techniques and specialized chips are cool because they‚Äôre what make ODAI possible. But what‚Äôs even more interesting for us as developers is actually putting these tools to work. This section covers some of the key technologies and frameworks that make ODAI accessible.\nMediaPipe Solutions is a developer toolkit for adding AI-powered features to apps and devices. It offers cross-platform, customizable tools that are optimized for running AI locally, from real-time video analysis to natural language processing.\nAt the heart of MediaPipe Solutions is MediaPipe Tasks, a core library that lets developers deploy ML solutions with minimal code. It‚Äôs designed for platforms like Android, Python, and Web/JavaScript, so you can easily integrate AI into a wide range of applications.\nMediaPipe also provides various specialized tasks for different AI needs:\nLiteRT or Lite Runtime (previously called TensorFlow Lite) is a lightweight and high-performance runtime designed for ODAI. It supports running pre-trained models or converting TensorFlow, PyTorch, and JAX models to a LiteRT-compatible format using AI Edge tools.\nModel Explorer is a visualization tool that helps you analyze machine learning models and graphs. It simplifies the process of preparing these models for on-device AI deployment, letting you understand the structure of your models and fine-tune them for better performance.\nYou can use Model Explorer locally or in Colab for testing and experimenting.\nIf you‚Äôre familiar with PyTorch, ExecuTorch makes it easy to deploy models to mobile, wearables, and edge devices. It‚Äôs part of the PyTorch Edge ecosystem, which supports building AI experiences for edge devices like embedded systems and microcontrollers.\nGemini is a powerful AI model that doesn‚Äôt just excel in processing text or images. It can also handle multiple types of data seamlessly. The best part? It‚Äôs designed to work right on your devices.\nFor on-device use, there‚Äôs Gemini Nano, a lightweight version of the model. It‚Äôs built to perform efficiently while keeping everything private.\nWhat can Gemini Nano do?\nNote: It‚Äôs similar to an application we built using LLaVA in a previous article.\nGemini Nano is far from the only language model designed specifically for ODAI. I‚Äôve collected a few others that are worth mentioning:\nBuilding AI into devices can be exciting and practical, but it‚Äôs not without its challenges. While you may get a lightweight, private solution for your app, there are a few compromises along the way. Here‚Äôs a look at some of them:\nPhones, wearables, and similar devices don‚Äôt have the same computing power as larger machines. This means AI models must fit within limited storage and memory while running efficiently. Additionally, running AI can drain the battery, so the models need to be optimized to balance power usage and performance.\nAI in devices like drones, self-driving cars, and other similar devices process data quickly, using sensors or lidar to make decisions. However, these models or the system itself don‚Äôt usually get real-time updates or additional training unless they are connected to the cloud. Without these updates and regular model training, the system may struggle with new situations.\nBiases in training data are a common challenge in AI, and ODAI models are no exception. These biases can lead to unfair decisions or errors, like misidentifying people. For ODAI, keeping these models fair and reliable means not only addressing these biases during training but also ensuring the solutions work efficiently within the device‚Äôs constraints.\nThese aren‚Äôt the only challenges of on-device AI. It‚Äôs still a new and growing technology, and the small number of professionals in the field makes it harder to implement.\nChoosing between on-device and cloud-based AI comes down to what your application needs most. Here‚Äôs a quick comparison to make things clear:\nFor apps that need fast processing and strong privacy, ODAI is the way to go. On the other hand, cloud-based AI is better when you need more computing power and frequent updates. The choice depends on your project‚Äôs needs and what matters most to you."
  },
  {
    "url": "/2025/01/lesser-known-uses-better-known-attributes/",
    "title": "Lesser Known Uses Of Better Known Attributes",
    "author": "John Rhea",
    "date": "Jan 8, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "HTML",
      "Coding",
      "Techniques",
      "Design"
    ],
    "summary": "HTML attributes are like little instructions that we add to the markup of elements to make them do certain things or behave in certain ways. For example, most of us know that the target attribute with a value of _blank opens the link in a new tab or window. But did you know that you can use it on the form element, too? John Rhea presents several lesser-known uses for common HTML attributes.",
    "content": "The list of attributes available in HTML is long and well-documented. Even if you haven‚Äôt memorized them (and there‚Äôs totally nothing wrong with an author‚Ä¶ er‚Ä¶ random person off the street, who has), there are a bunch of places where HTML attributes you‚Äôre familiar with will have different or more specific jobs. Let‚Äôs take a look.\nYou may have heard of the name attribute, giving a name/label to information sent through a form. And more specifically you may have used it to bring together a set of radio buttons, but you can also use it with the details element to have only one of a set of accordions open at a time.\nLike if you have more than one refrigerator in the office at work, any respectable person would only open one door at a time. Right, Bob?\nYou‚Äôve probably heard of the universal attribute title. It‚Äôs typically thought of as the built-in tooltip text, but three elements have special semantics for the title attribute: input and the rarely used gems, the definition (dfn) element, and the abbreviation (abbr) element.\nIf you‚Äôre using a pattern attribute on an input to provide some regex-based error correction, then you should definitely tell the user how to meet the criteria you‚Äôre using. The title attribute can be used both as a tooltip and as the message shown when the user doesn‚Äôt meet that criteria.\nFor a dfn element, if you use the title attribute, then it has to include the term being defined. dfn should still have text in it, but it can be an abbreviation or a different form of the term.\nA title on an abbr element not only sets the tooltip but explicitly has the expansion of the abbreviation or acronym. As it says in the spec: ‚ÄúThe [title] attribute, if specified, must contain an expansion of the abbreviation, and nothing else.‚Äù That‚Äôs the specification‚Äôs equivalent of threatening a mafia hit if you aren‚Äôt careful with your title attributes. You have been warned, Bob.\nThe value attribute is well known for setting default values on inputs, but you can also use it on a list item (li) within an ordered list (ol) to change the number of that item and all that follow it. It only takes integers, but you can use it no matter what type of ordered list you use (numeric, alphabetical, or Roman numerals).\nYou might have used a datetime attribute on a time element to provide a machine-readable format of the time and/or date represented in the time element‚Äôs text:\nThe same attribute can also be used with the ins and del elements (used for notating an addition/insertion and deletion of content, respectively). The datetime attribute on ins and del provides a machine-readable date (and optionally a time) for when the change was made. You can show it to the visitor if you like, but it‚Äôs mainly intended for private use.\nCheck out the edits of the original version of an earlier example:\nAs an added note, screenreaders do not announce the datetime attribute in this context.\nSticking with our oft-neglected friends ins and del, the cite attribute that you use on blockquote and q elements to provide a URL of the source of the quotation can also be used on ins and del to provide the URL of a document explaining the changes.\nAgain, these dates are not announced in assistive tech, like screen readers.\nYou probably know the multiple attribute as that more-than-meets-the-eye attribute that transforms a dropdown menu into a multi-select box, like a co-worker who lets you choose two donuts from the box. (I‚Äôm lookin‚Äô at you, Tina.) But it has two other uses as well. You can add it to both a file input and an email input to accept multiple files and emails, respectively.\nJust be sure that the emails are comma-separated.\nIn your travels across the internet, you‚Äôve probably come across the for attribute when it‚Äôs used to associate a label element with a form field (input, select, textarea, etc.), but you can also use it to explicitly associate the elements of a calculation with an output element.\nUnlike a label-input relationship, which is a one-to-one relationship (i.e., one label for one field), the for attribute used on an output can hold an unordered, space-separated list of IDs of the fields that contributed to the calculation.\nJust like you can use a target attribute to open a link in a new tab/window, you can use the same target attribute and value _blank to have a form open the response in a new tab/window.\nYou may have used the disabled attribute to knock out an individual form field, but you can also use it to disable every descendant of a fieldset element.\nNo matter what HR says and its innocent-until-proven-guilty ethos, we all know Bob did it. Don‚Äôt we?\nWhile not technically an HTML tip, attributes can also be used as selectors in CSS. You put square brackets around the attribute name and you‚Äôll select all elements that contain that attribute.\nThere‚Äôs actually a whole lot more you can do with attribute selectors, but that‚Äôs the topic of another article ‚Äî literally.\nOkay, now that we‚Äôve learned some trivia we can use to properly prosecute Bob‚Äôs office and yogurtorial transgressions, do you have a favorite HTML attribute I didn‚Äôt discuss? Show off your personal life-of-the-party energy in the comments. (And, yes, cool people have a favorite HTML attribute‚Ä¶ really cool people‚Ä¶ right? Right?? Right!?!?!?!?!)"
  },
  {
    "url": "/2025/01/tight-mode-why-browsers-produce-different-performance-results/",
    "title": "Tight Mode: Why Browsers Produce Different Performance Results",
    "author": "Geoff Graham",
    "date": "Jan 9, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Performance",
      "Optimization",
      "Tools"
    ],
    "summary": "We know that browsers do all sorts of different things under the hood. One of those things is the way they not only fetch resources like images and scripts from the server but how they prioritize those resources. Chrome and Safari have implemented a ‚ÄúTight Mode‚Äù that constrains which resources are loaded and in what order, but they each take drastically different approaches to it. With so little information about Tight Mode available, this article attempts a high-level explanation of what it is, what triggers it, and how it is treated differently in major browsers.",
    "content": "I was chatting with DebugBear‚Äôs Matt Zeunert and, in the process, he casually mentioned this thing called Tight Mode when describing how browsers fetch and prioritize resources. I wanted to nod along like I knew what he was talking about but ultimately had to ask: What the heck is ‚ÄúTight‚Äù mode?\nWhat I got back were two artifacts, one of them being the following video of Akamai web performance expert Robin Marx speaking at We Love Speed in France a few weeks ago:\nThe other artifact is a Google document originally published by Patrick Meenan in 2015 but updated somewhat recently in November 2023. Patrick‚Äôs blog has been inactive since 2014, so I‚Äôll simply drop a link to the Google document for you to review.\nThat‚Äôs all I have and what I can find on the web about this thing called Tight Mode that appears to have so much influence on the way the web works. Robin acknowledged the lack of information about it in his presentation, and the amount of first-person research in his talk is noteworthy and worth calling out because it attempts to describe and illustrate how different browsers fetch different resources with different prioritization. Given the dearth of material on the topic, I decided to share what I was able to take away from Robin‚Äôs research and Patrick‚Äôs updated article.\nThe fact that Patrick‚Äôs original publication date falls in 2015 makes it no surprise that we‚Äôre talking about something roughly 10 years old at this point. The 2023 update to the publication is already fairly old in ‚Äúweb years,‚Äù yet Tight Mode is still nowhere when I try looking it up.\nSo, how do we define Tight Mode? This is how Patrick explains it:\nOK, so we have this two-part process that Chrome uses to fetch resources from the network and the first part is focused on anything that isn‚Äôt a ‚Äúlower-priority resource.‚Äù We have ways of telling browsers which resources we think are low priority in the form of the Fetch Priority API and lazy-loading techniques that asynchronously load resources when they enter the viewport on scroll ‚Äî all of which Robin covers in his presentation. But Tight Mode has its own way of determining what resources to load first.\nTight Mode discriminates resources, taking anything and everything marked as High and Medium priority. Everything else is constrained and left on the outside, looking in until the body is firmly attached to the document, signaling that blocking scripts have been executed. It‚Äôs at that point that resources marked with Low priority are allowed in the door during the second phase of loading.\nThere‚Äôs a big caveat to that, but we‚Äôll get there. The important thing to note is that‚Ä¶\nYes, both Chrome and Safari have some working form of Tight Mode running in the background. That last image illustrates Chrome‚Äôs Tight Mode. Let‚Äôs look at Safari‚Äôs next and compare the two.\nLook at that! Safari discriminates High-priority resources in its initial fetch, just like Chrome, but we get wildly different loading behavior between the two browsers. Notice how Safari appears to exclude the first five PNG images marked with Medium priority where Chrome allows them. In other words, Safari makes all Medium- and Low-priority resources wait in line until all High-priority items are done loading, even though we‚Äôre working with the exact same HTML. You might say that Safari‚Äôs behavior makes the most sense, as you can see in that last image that Chrome seemingly excludes some High-priority resources out of Tight Mode. There‚Äôs clearly some tomfoolery happening there that we‚Äôll get to.\nWhere‚Äôs Firefox in all this? It doesn‚Äôt take any extra tightening measures when evaluating the priority of the resources on a page. We might consider this the ‚Äúclassic‚Äù waterfall approach to fetching and loading resources.\nRobin makes this clear as day in his talk. Chrome and Safari are both Tight Mode proponents, yet trigger it under differing circumstances that we can outline like this:\nNotice that Chrome only looks at the document <head> when prioritizing resources, and only when it involves JavaScript. Safari, meanwhile, also looks at JavaScript, but CSS as well, and anywhere those things might be located in the document ‚Äî regardless of whether it‚Äôs in the <head> or <body>. That helps explain why Chrome excludes images marked as High priority in Figure 2 from its Tight Mode implementation ‚Äî it only cares about JavaScript in this context.\nSo, even if Chrome encounters a script file with fetchpriority=\"high\" in the document body, the file is not considered a ‚ÄúHigh‚Äù priority and it will be loaded after the rest of the items. Safari, meanwhile, honors fetchpriority anywhere in the document. This helps explain why Chrome leaves two scripts on the table, so to speak, in Figure 2, while Safari appears to load them during Tight Mode.\nThat‚Äôs not to say Safari isn‚Äôt doing anything weird in its process. Given the following markup:\n‚Ä¶you might expect that Safari would delay the two Low-priority scripts in the <head> until the five images in the <body> are downloaded. But that‚Äôs not the case. Instead, Safari loads those two scripts during its version of Tight Mode.\nI mentioned earlier that Low-priority resources are loaded in during the second phase of loading after Tight Mode has been completed. But I also mentioned that there‚Äôs a big caveat to that behavior. Let‚Äôs touch on that now.\nAccording to Patrick‚Äôs article, we know that Tight Mode is ‚Äúthe initial phase and constraints loading lower-priority resources until the body is attached to the document (essentially, after all blocking scripts in the head have been executed).‚Äù But there‚Äôs a second part to that definition that I left out:\nA-ha! So, there is a way for low-priority resources to load in Tight Mode. It‚Äôs when there are less than two ‚Äúin-flight‚Äù requests happening when they‚Äôre detected.\nWait, what does ‚Äúin-flight‚Äù even mean?\nThat‚Äôs what‚Äôs meant by less than two High- or Medium-priority items being requested. Robin demonstrates this by comparing Chrome to Safari under the same conditions, where there are only two High-priority scripts and ten regular images in the mix:\nLet‚Äôs look at what Safari does first because it‚Äôs the most straightforward approach:\nNothing tricky about that, right? The two High-priority scripts are downloaded first and the 10 images flow in right after. Now let‚Äôs look at Chrome:\nWe have the two High-priority scripts loaded first, as expected. But then Chrome decides to let in the first five images with Medium priority, then excludes the last five images with Low priority. What. The. Heck.\nThe reason is a noble one: Chrome wants to load the first five images because, presumably, the Largest Contentful Paint (LCP) is often going to be one of those images and Chrome is hedging bets that the web will be faster overall if it automatically handles some of that logic. Again, it‚Äôs a noble line of reasoning, even if it isn‚Äôt going to be 100% accurate. It does muddy the waters, though, and makes understanding Tight Mode a lot harder when we see Medium- and Low-priority items treated as High-priority citizens.\nEven muddier is that Chrome appears to only accept up to two Medium-priority resources in this discriminatory process. The rest are marked with Low priority.\nThat‚Äôs what we mean by ‚Äúless than two in-flight requests.‚Äù If Chrome sees that only one or two items are entering Tight Mode, then it automatically prioritizes up to the first five non-critical images as an LCP optimization effort.\nTruth be told, Safari does something similar, but in a different context. Instead of accepting Low-priority items when there are less than two in-flight requests, Safari accepts both Medium and Low priority in Tight Mode and from anywhere in the document regardless of whether they are located in the <head> or not. The exception is any asynchronous or deferred script because, as we saw earlier, those get loaded right away anyway.\nThis might make for a great follow-up article, but this is where I‚Äôll refer you directly to Robin‚Äôs video because his first-person research is worth consuming directly. But here‚Äôs the gist:\nAgain, watch Robin‚Äôs talk for the full story starting around the 28:32 marker.\nIt‚Äôs bonkers to me that there is so little information about Tight Mode floating around the web. I would expect something like this to be well-documented somewhere, certainly over at Chrome Developers or somewhere similar, but all we have is a lightweight Google Doc and a thorough presentation to paint a picture of how two of the three major browsers fetch and prioritize resources. Let me know if you have additional information that you‚Äôve either published or found ‚Äî I‚Äôd love to include them in the discussion."
  },
  {
    "url": "/2024/12/new-front-end-features-for-designers-in-2025/",
    "title": "New Front-End Features For Designers In 2025",
    "author": "Cosima Mielke",
    "date": "Dec 31, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS",
      "HTML"
    ],
    "summary": "Searching for the most flexible front-end workflows and toolkits, it‚Äôs easy to forget how powerful some of the fundamentals on the web have become these days. This post is a journey through new front-end features and what they are capable of.",
    "content": "Component-specific styling, styling parents based on their children, relative colors ‚Äî the web platform is going through exciting times, and many things that required JavaScript in the past can today be achieved with one simple line of HTML and CSS.\nAs we are moving towards 2025, it‚Äôs a good time to revisit some of the incredible new technologies that are broadly available and supported in modern browsers today. Let‚Äôs dive right in and explore how they can simplify your day-to-day work and help you build modern UI components.\nBelow you‚Äôll find quick jumps to topics you may be interested in, or skip the table of contents.\nComponent-specific styling? What has long sounded like a dream to any developer, is slowly but surely becoming reality. Thanks to container queries, we can now query the width and style of the container in which components live.\nAs Una Kravets points out in her introduction to style queries, this currently only works with CSS custom property values, but there are already some real-world use cases where style queries shine: They come in particularly handy when you have a reusable component with multiple variations or when you don‚Äôt have control over all of your styles but need to apply changes in certain cases.\nIf you want to dive deeper into what‚Äôs possible with container style queries and the things we can ‚Äî maybe ‚Äî look forward to in the future, also be sure to take a look at Geoff Graham‚Äôs post. He dug deep into the more nuanced aspects of style queries and summarized the things that stood out to him.\nWe all know those headlines where the last word breaks onto a new line and stands there alone, breaking the visual and looking, well, odd. Of course, there‚Äôs the good ol‚Äô <br> to break the text manually or a <span> to divide the content into different parts. But have you heard of text-wrap: balance already?\nBy applying the text-wrap: balance property, the browser will automatically calculate the number of words and divide them equally between two lines ‚Äî perfect for page titles, card titles, tooltips, modals, and FAQs, for example. Ahmad Shadeed wrote a helpful guide to text-wrap: balance in which he takes a detailed look at the property and how it can help you make your headlines look more consistent.\nWhen dealing with large blocks of text, such as paragraphs, you might want to look into text-wrap: pretty to prevent orphans on the last line.\nFinding just the right size for an input field usually involves a lot of guesswork ‚Äî or JavaScript ‚Äî to count characters and increase the field‚Äôs height or width as a user enters text. CSS field-sizing is here to change that. With field-sizing, we can auto-grow inputs and text areas, but also auto-shrink short select menus, so the form always fits content size perfectly. All we need to make it happen is one line of CSS.\nAdam Argyle summarized everything you need to know about field-sizing, exploring in detail how field-sizing affects different <form> elements. To prevent your input fields from becoming too small or too large, it is also a good idea to insert some additional styles that keep them in shape. Adam shares a code snippet that you can copy-and-paste right away.\nAccordions are a popular UI pattern, but they come with a caveat: The content inside the collapsed sections is impossible to search with find-in-page search. By using the hidden=until-found attribute and the beforematch event, we can solve the problem and even make the content accessible to search engines.\nAs Joey Arhar explains in his guide to making collapsed content searchable, you can replace the styles that hide the section with the hidden=until-found attribute. If your page also has another state that needs to be kept in sync with whether or not your section is revealed, he recommends adding a beforematch event listener. It will be fired on the hidden=until-found element right before the element is revealed by the browser.\nIt‚Äôs a small upgrade for the <select> element, but a mighty one: We can now add <hr> into the list of select options, and they will appear as separators to help visually break up the options in the list.\nIf you want to refine things further, also be sure to take a look at <optgroup>. The HTML element lets you group options within a <select> element by adding a subheading for each group.\nSometimes, you need a quick and easy way to make an element a scrollable container. CSS scroll snap makes it possible. The CSS feature enables us to create a well-controlled scrolling experience that lets users precisely swipe left and right and snap to a specific item in the container. No JavaScript required.\nAhmad Shadeed wrote a practical guide that walks you step by step through the process of setting up a container with scroll snap. You can use it to create image galleries, avatar lists, or other components where you want a user to scroll and snap through the content, whether it‚Äôs horizontally or vertically.\nWhether you use it for footnotes, tooltips, connector lines, visual cross-referencing, or dynamic labels in charts, the CSS Anchor Positioning API enables us to natively position elements relative to other elements, known as anchors.\nIn her introduction to the CSS Anchor Positioning API, Una Kravets summarized in detail how anchor positioning works. She takes a closer look at the mechanism behind anchor positioning, how to tether to one and multiple anchors, and how to size and position an anchor-positioned element based on the size of its anchor. Browser support is still limited, so you might want to use the API with some precautions. Una‚Äôs guide includes what to watch out for.\nWith high-definition colors with LCH, okLCH, LAB, and okLAB that give us access to 50% more colors, the times of RGB/HSL might be over soon. To get you familiar with the new color spaces, Vitaly wrote a quick overview of what you need to know.\nBoth OKLCH and OKLAB are based on human perception and can specify any color the human eye can see. While OKLAB works best for rich gradients, OKLCH is a fantastic fit for color palettes in design systems. OKLCH/OKLAB colors are fully supported in Chrome, Edge, Safari, Firefox, and Opera. Figma doesn‚Äôt support them yet.\nLet‚Äôs say you have a background color and want to reduce its luminosity by 25%, or you want to use a complementary color without having to calculate it yourself. The relative color syntax (RCS) makes it possible to create a new color based on a given color.\nTo derive and compute a new color, we can use the from keyword for color functions (color(), hsl(), oklch(), etc.) to modify the values of the input color. Adam Argyle shares some code snippets of what this looks like in practice, or check the spec for more details.\nThere are a number of use cases where a smooth visual transition can make the user experience more engaging. When a thumbnail image on a product listing page transitions into a full-size image on the product detail page, for example, or when you have a fixed navigation bar that stays in place as you navigate from one page to another. The View Transitions API helps us create seamless visual transitions between different views on a site.\nView transitions can be triggered not only on a single document but also between two different documents. Both rely on the same principle: The browser takes snapshots of the old and new states, the DOM gets updated while rendering is suppressed, and the transitions are powered by CSS Animations. The only difference lies in how you trigger them, as Bramus Van Damme explains in his guide to the View Transitions API. A good alternative to single page apps that often rely on heavy JavaScript frameworks.\nThe ‚Äòexclusive accordion‚Äô is a variation of the accordion component. It only allows one disclosure widget to be open at the same time, so when a user opens a new one, the one that is already open will be closed automatically to save space. Thanks to CSS, we can now create the effect without a single line of JavaScript.\nTo build an exclusive accordion, we need to add a name attribute to the <details> elements. When this attribute is used, all <details> elements that have the same name value form a semantic group and behave as an exclusive accordion. Bramus Van Damme summarized in detail how it works.\nWhen we use :valid and :invalid to apply styling based on a user‚Äôs input, there‚Äôs a downside: a form control that is required and empty will match :invalid even if a user hasn‚Äôt started interacting with it yet. To prevent this from happening, we usually had to write stateful code that keeps track of input a user has changed. But not anymore.\nWith :user-valid and :user-invalid, we now have a native CSS solution that handles all of this automatically. Contrary to :valid and :invalid, the :user-valid and :user-invalid pseudo-classes give users feedback about mistakes only after they have changed the input. :user-valid and :user-invalid work with input, select, and textarea controls.\nImagine you have a scrolling box and a series of links that target an anchored position inside the box. When a user clicks on one of the links, it will take them to the content section inside the scrolling box ‚Äî with a rather abrupt jump. The scroll-behavior property makes the scrolling transition a lot smoother, only with CSS.\nWhen setting the scroll-behavior value to smooth, the scrolling box will scroll in a smooth fashion using a user-agent-defined easing function over a user-agent-defined period of time. Of course, you can also use scroll-behavior: auto, and the scrolling box will scroll instantly.\nFocus styles are essential to help keyboard users navigate a page. However, for mouse users, it can be irritating when a focus ring appears around a button or link as they click on it. :focus-visible is here to help us create the best experience for both user groups: It displays focus styles for keyboard users and hides them for mouse users.\n:focus-visible applies while an element matches the :focus pseudo-class and the User Agent determines via heuristics that the focus should be made visible on the element. Curious how it works in practice? MDN Web Docs highlights the differences between :focus and :focus-visible, what you need to consider accessibility-wise, and how to provide a fallback for old browser versions that don‚Äôt support :focus-visible.\nHistorically, CSS selectors have worked in a top-down fashion, allowing us to style a child based on its parent. The new CSS pseudo-class :has works the other way round: We can now style a parent based on its children. But that‚Äôs not all yet. Josh W. Comeau wrote a fantastic introduction to :has in which he explores real-world use cases that show what the pseudo-class is capable of.\n:has is not limited to parent-child relationships or direct siblings. Instead, it lets us style one element based on the properties or status of any other element in a totally different container. And it can be used as a sort of global event listener, as Josh shows ‚Äî to disable scrolling on a page when a modal is open or to create a JavaScript-free dark mode toggle, for example.\nCSS comparison functions min(), max(), and clamp() are today supported in all major browsers, providing us with an effective way to create dynamic layouts with fluid type scales, grids, and spacing systems.\nTo get you fit for using the functions in your projects right away, Ahmad Shadeed wrote a comprehensive guide in which he explains everything you need to know about min(), max(), and clamp(), with practical examples and use cases and including all the points of confusion you might encounter.\nIf you‚Äôre looking for a quick and easy way to create fluid scales, the Fluid Type Scale Calculator by Utopia has got your back. All you need to do is define min and max viewport widths and the number of scale steps, and the calculator provides you with a responsive preview of the scale and the CSS code snippet.\nIf you‚Äôre looking for a quick way to create a modal or popup, the <dialog> HTML element finally offers a native (and accessible!) solution to help you get the job done. It represents a modal or non-modal dialog box or other interactive component, such as a confirmation prompt or a subwindow used to enter data.\nWhile modal dialog boxes interrupt interaction with a page, non-modal dialog boxes allow interaction with the page while the dialog is open. Adam Argyle published some code snippets that show how <dialog> can block pop-ups and popovers for non-blocking menus, out of the box.\nIn 2014, media attribute support for HTML video sources was deleted from the HTML standard. Last year, it made a comeback, which means that we can use media queries for delivering responsive HTML videos.\nScott Jehl summarized how responsive HTML video ‚Äî and even audio ‚Äî works, what you need to consider when writing the markup, and what other types of media queries can be used in combination with HTML video.\nIt‚Äôs a small detail, but one that adds to a well-considered user experience: displaying the most comfortable touchscreen keyboard to help a user enter their information without having to switch back and forth to insert numbers, punctuation, or special characters like an @ symbol.\nTo show the right keyboard layout, we can use inputmode. It instructs the browser which keyboard to display and supports values for numeric, telephone, decimal, email, URL, and search keyboards. To further improve the UX, we can add the enterkeyhint attribute: it adjusts the text on the Enter key. If no enterkeyhint is used, the user agent might use contextual information from the inputmode attribute.\nAs we are starting to adopt all of these shiny new front-end features in our projects, the web platform is, of course, constantly evolving ‚Äî and there are some exciting things on the horizon already! For example, we are very close to getting masonry layout, fully customizable drop-downs with <selectmenu>, and text-box trimming for adjusting fonts to be perfectly aligned within the grid. Kudos to all the wonderful people who are working tirelessly to push the web forward! üëè\nIn the meantime, we hope you found something helpful in this post that you can apply to your product or application right away. Happy tinkering!\nYou want to stay on top of what‚Äôs happening in the world of front-end and UX? With our weekly newsletter, we aim to bring you useful, practical tidbits and share some of the helpful things that folks are working on in the web industry. Every issue is curated, written, and edited with love and care. No third-party mailings or hidden advertising.Also, when you subscribe, you really help us pay the bills. Thank you for your kind support!"
  },
  {
    "url": "/2024/12/the-design-leader-dilemma/",
    "title": "The Design Leader Dilemma",
    "author": "Paul Boag",
    "date": "Dec 23, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Web Design",
      "Workflow",
      "Tools"
    ],
    "summary": "Design leaders are expected to deliver the impossible. Instead of trying, we need to redefine our role from implementor to enabler.",
    "content": "Many design leaders find themselves in an impossible situation. On one side, senior management have read articles trumpeting the incredible ROI of user experience design. McKinsey tells us that design-led companies achieve 56% higher returns to shareholders. Forrester reports that every dollar invested in UX brings 100 dollars in return.\nYet the reality I encounter when talking to design leaders is very different. Most are desperately under-resourced, with tiny teams expected to support hundreds of projects across their organizations. The result? We‚Äôre spread so thin that we can barely scratch the surface of what needs doing.\nThe problem isn‚Äôt just about resources. It‚Äôs about expectations and how we define our role. Too often, we position ourselves (or are positioned by others) as implementors ‚Äî the people who do the user research, create the prototypes, and run the usability tests. But with the scale of digital touching every corner of our organizations, that‚Äôs simply not sustainable.\nWe need to stop trying to do everything ourselves and instead focus on empowering others across the organization to improve the user experience. In other words, we need to become true leaders rather than just practitioners.\nThis isn‚Äôt about giving up control or lowering standards. It‚Äôs about maximizing our impact by working through others. Think about it: would you rather be directly involved in 10% of projects or have some influence over 90% of them?\nFirst, we need to shift our mindset from doing to enabling. This means:\nLet‚Äôs break down each of these areas.\nInstead of trying to be involved in every project, focus on providing specific, high-value services that can make the biggest impact. This might include:\nOne of the most effective ways to scale your impact is through coaching. This could include:\nIt‚Äôs also important to recognize that others might not initially deliver work at the same level of quality that you would. This is okay. The primary goal is to get people engaged and excited about UX. If we criticize them every time they fall short of perfection, we risk undermining their enthusiasm. Instead, we need to foster a supportive environment where improvement happens over time.\nDevelop tools and resources that help others apply UX principles independently. For example:\nCreate a framework that guides UX decisions across the organization:\nAll of these elements should come together in what I call a UX Playbook ‚Äî a single source of truth that contains everything teams need to deliver better user experiences. This isn‚Äôt just another document to gather dust; it‚Äôs a living resource that demonstrates your value as a leader and helps others get started on their UX journey.\nThe shift from practitioner to leader isn‚Äôt easy. It requires letting go of some control and trusting others to carry forward UX principles. But it‚Äôs the only way to create lasting change at scale.\nIf you‚Äôre struggling with this transition, I am running a workshop on design leadership in February. I would love to discuss your situation there."
  },
  {
    "url": "/2024/12/mastering-svg-arcs/",
    "title": "Mastering SVG Arcs",
    "author": "Akshay Gupta",
    "date": "Dec 9, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "SVG",
      "Design",
      "Coding"
    ],
    "summary": "SVG arcs demystified! Akshay Gupta explains how to master radii, rotation, and arc direction to create stunning curves. Make arcs a powerful part of your SVG toolkit for creating more dynamic, intricate designs with confidence.",
    "content": "So, I love drawing birds with code. Inspired by my brother‚Äôs love for birdwatching, I admire the uniqueness of their feathers, colors, and sounds. But what I notice most is the way their bodies curve and different birds can have dramatically different curves! So, I took my love for drawing with SVG graphics and used it to experiment with bird shapes. Over time, I‚Äôve drawn enough to become incredibly adept at working with arc shapes.\nHere are a few of my recent works. Inspired by designs I came across on Dribbble, I created my versions with code. You can browse through the code for each on my CodePen.\nBut before we dive into creating curves with arcs, please pause here and check out Myriam Frisano‚Äôs recent article, ‚ÄúSVG Coding Examples: Useful Recipes For Writing Vectors By Hand.‚Äù It‚Äôs an excellent primer to the SVG syntax and it will give you solid context heading into the concepts we‚Äôre covering here when it comes to mastering SVG arcs.\nYou probably know that SVGs are crisp, infinitely scalable illustrations without pixelated degradation ‚Äî vectors for the win! What you might not know is that few developers write SVG code. Why? Well, the syntax looks complicated and unfamiliar compared to, say, HTML. But trust me, once you break it down, it‚Äôs not only possible to hand-code SVG but also quite a bit of fun.\nLet‚Äôs make sure you‚Äôre up to speed on the SVG viewBox because it‚Äôs a key concept when it comes to the scalable part of *SVG. We‚Äôll use the analogy of a camera, lens, and canvas to explain this concept. Think of your browser window as a camera and the SVG viewBox as the camera lens focusing on the painting of a bird you‚Äôve created (the SVG). Imagine the painting on a large canvas that may stretch far beyond what the camera captures. The viewBox defines which part of this canvas is visible through the camera.\nLet‚Äôs say we have an SVG element that we‚Äôre sizing at 600px square with width and height attributes directly on the <svg> element.\nLet‚Äôs turn our attention to the viewBox attribute:\nThe viewBox attribute defines the internal coordinate system for the SVG, with four values mapping to the SVG‚Äôs x, y, width, and height in that order.\nHere‚Äôs how this relates to our analogy:\nSo, when you adjust the viewBox coordinates, you‚Äôre simply choosing a new area of the canvas to focus on without resizing the canvas itself. This lets you control the visible area without changing the SVG‚Äôs actual display dimensions.\nYou now have the context you need to learn how to work with <path> elements in SVG, which is where we start working with arcs!\nWe have an <svg> element. And we‚Äôre viewing the element‚Äôs contents through the ‚Äúlens‚Äù of a viewBox.\nA <path> allows us to draw shapes. We have other elements for drawing shapes ‚Äî namely <circle>, <line>, and <polygon> ‚Äî but imagine being restricted to strict geometrical shapes as an artist. That‚Äôs where the custom <path> element comes in. It‚Äôs used to draw complex shapes that cannot be created with the basic ones. Think of <path> as a flexible container that lets you mix and match different drawing commands.\nWith a single <path>, you can combine multiple drawing commands into one smooth, elegant design. Today, we‚Äôre focusing on a super specific path command: arcs. In other words, what we‚Äôre doing is drawing arc shapes with <path>.\nHere‚Äôs a quick, no-frills example that places a <path> inside the <svg> example we looked at earlier:\nNow, I get it. Looking at that string of numbers for the first time is like staring into the Matrix, right? But once you get the hang of it, you‚Äôll see that arcs aren‚Äôt as scary as they look.\nLet‚Äôs break down the <path> in that example. We‚Äôll break it down even further in the next section, but for now:\nYou can visualize the coordinate positions in red resulting from different M commands in the following demo:\nSee that? We have two points along the X-axis that are relative to the viewBox‚Äôs center, and a curved line connects them. Now, know that the numbers in an M command are setting coordinates, and the numbers in an A command draw a line along the SVG‚Äôs axes. You just drew a curve in SVG!\nWe can zoom into the M and A commands even further to better understand what‚Äôs happening.\nFirst off, we‚Äôre working with an arc, or more accurately, an elliptical arc, which is a curved line. We know that a perfect circle is merely an ellipse with equal radii in both the X and Y directions. We can change the shape of the circle by giving it different, unmatching radii values.\nThis is what we know so far:\nThere are three values in the A command that we sort of skipped. These are like ‚Äúswitches‚Äù in the sense that they are Boolean values that enable or disable certain things about the arc.\nIf we take this information and re-write the <path> with these definitions, then it starts to come together more clearly:\nMaybe we can simplify that a bit using abbreviations:\nLet‚Äôs take this information and start playing with values to see how it behaves.\nAgain, if this is the <path> we‚Äôre starting with:\nThen, we can manipulate it in myriad ways. Mathematically speaking, you can create an infinite number of arcs between any two points by adjusting the parameters. Here are a few variations of an arc that we get when all we do is change the arc‚Äôs endpoints in the X (<ex>) and Y (<ey>) directions.\nOr, let‚Äôs control the arc‚Äôs width and height by updating its radius in the X direction (<rx>) and the Y direction (<ry>). If we play around with the <rx> value, we can manipulate the arc‚Äôs height:\nSimilarly, we can manipulate the arc‚Äôs width by updating the <ry> value:\nLet‚Äôs see what happens when we rotate the arc along its X-axis (<rotation>). This parameter rotates the arc‚Äôs ellipse around its center. It won‚Äôt affect circles, but it‚Äôs a game-changer for ellipses.\nEven with a fixed set of endpoints and radii (<rx> and <ry>), and a given angle of rotation, four distinct arcs can connect them. That‚Äôs because we have the <arc> flag value that can be one of two values, as well as the <sweep> flag that is also one of two values. Two boolean values, each with two arguments, give us four distinct possibilities.\nAnd lastly, adjusting the arc‚Äôs endpoint along the X (<ex>) and Y (<ey>) directions shifts the arc‚Äôs location without changing the overall shape.\nAnd there you have it, SVG arcs demystified! Whether you‚Äôre manipulating radii, rotation, or arc direction, you now have all the tools to master these beautiful curves. With practice, arcs will become just another part of your SVG toolkit, one that gives you the power to create more dynamic, intricate designs with confidence.\nSo keep playing, keep experimenting, and soon you‚Äôll be bending arcs like a pro ‚Äî making your SVGs not just functional but beautifully artistic. If you enjoyed this dive into arcs, drop a like or share it with your friends. Let‚Äôs keep pushing the boundaries of what SVG can do!"
  },
  {
    "url": "/2024/12/introduction-css-scroll-driven-animations/",
    "title": "An Introduction¬†To¬†CSS¬†Scroll-Driven Animations: Scroll And View Progress Timelines",
    "author": "Mariana Beldi",
    "date": "Dec 11, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS",
      "Animation",
      "Design"
    ],
    "summary": "It‚Äôs been 10 years since scroll-driven animations were introduced in a spec proposal, and after five years in development, we‚Äôre finally beginning to see pop up in websites. There are scrolly-telling and maze games as well as cover flow animations and 3D rotation with scroll‚Ä¶ but what exactly is new here? It‚Äôs not like we haven‚Äôt seen scroll animations before, but what we have now requires no JavaScript, no dependencies, no libraries ‚Äî just pure CSS. And if that‚Äôs not exciting enough, these animations run off the main thread, delivering smooth, high-performance, GPU-accelerated experiences.",
    "content": "You can safely use scroll-driven animations in Chrome as of December 2024. Firefox supports them, too, though you‚Äôll need to enable a flag. Safari? Not yet, but don‚Äôt worry ‚Äî you can still offer a seamless experience across all browsers with a polyfill. Just keep in mind that adding a polyfill involves a JavaScript library, so you won‚Äôt get the same performance boost.\nThere are plenty of valuable resources to dive into scroll-driven animations, which I‚Äôll be linking throughout the article. My starting point was Bramus‚Äô video tutorial, which pairs nicely with Geoff‚Äôs in-depth notes Graham that build on the tutorial.\nIn this article, we‚Äôll walk through the latest published version by the W3C and explore the two types of scroll-driven timelines ‚Äî scroll progress timelines and view progress timelines. By the end, I hope that you are familiar with both timelines, not only being able to tell them apart but also feeling confident enough to use them in your work.\nNote: All demos in this article only work in Chrome 116 or later at the time of writing.\nThe scroll progress timeline links an animation‚Äôs timeline to the scroll position of a scroll container along a specific axis. So, the animation is tied directly to scrolling. As you scroll forward, so does the animation. You‚Äôll see me refer to them as scroll-timeline animations in addition to calling them scroll progress timelines.\nJust as we have two types of scroll-driven animations, we have two types of scroll-timeline animations: anonymous timelines and named timelines.\nLet‚Äôs start with a classic example: creating a scroll progress bar at the top of a blog post to track your reading progress.\nIn this example, there‚Äôs a <div> with the ID ‚Äúprogress.‚Äù At the end of the CSS file, you‚Äôll see it has a background color, a defined width and height, and it‚Äôs fixed at the top of the page. There‚Äôs also an animation that scales it from 0 to 1 along the x-axis ‚Äî pretty standard if you‚Äôre familiar with CSS animations!\nHere‚Äôs the relevant part of the styles:\nThe progressBar animation runs once and lasts one second with a linear timing function. Linking this animation scrolling is just a single line in CSS:\nNo need to specify seconds for the duration‚Ää‚Äî‚Ääthe scrolling behavior itself will dictate the timing. And that‚Äôs it! You‚Äôve just created your first scroll-driven animation! Notice how the animation‚Äôs direction is directly tied to the scrolling direction ‚Äî scroll down, and the progress indicator grows wider; scroll up, and it becomes narrower.\nIn a scroll-timeline animation, the scroll() function is used inside the animation-timeline property. It only takes two parameters: <scroller> and <axis>.\nIn the reading progress example above, we didn‚Äôt declare any of these because we used the defaults. But we could achieve the same result with:\nHere, the nearest scroll container is the root scroll of the HTML element. So, we could also write it this way instead:\nThe block axis confirms that the scroll moves top to bottom in a left-to-right writing mode. If the page has a wide horizontal scroll, and we want to animate along that axis, we could use the inline or x values (depending on whether we want the scrolling direction to always be left-to-right or adapt based on the writing mode).\nWe‚Äôll dive into self and inline in more examples later, but the best way to learn is to play around with all the combinations, and this tool by Bramus lets you do exactly that. Spend a few minutes before we jump into the next property associated with scroll timelines.\nThe animation-range for scroll-timeline defines which part of the scrollable content controls the start and end of an animation‚Äôs progress based on the scroll position. It allows you to decide when the animation starts or ends while scrolling through the container.\nBy default, the animation-range is set to normal, which is shorthand for the following:\nThis translates to 0% (start) and 100% (end) in a scroll-timeline animation:\n‚Ä¶which is the same as:\nYou can declare any CSS length units or even calculations. For example, let‚Äôs say I have a footer that‚Äôs 500px tall. It‚Äôs filled with banners, ads, and related posts. I don‚Äôt want the scroll progress bar to include any of that as part of the reading progress. What I want is for the animation to start at the top and end 500px before the bottom. Here we go:\nJust like that, we‚Äôve covered the key properties of scroll-timeline animations. Ready to take it a step further?\nLet‚Äôs say I want to use the scroll position of a different scroll container for the same animation. The scroll-timeline-name property allows you to specify which scroll container the scroll animation should be linked to. You give it a name (a dashed-ident, e.g., --my-scroll-timeline) that maps to the scroll container you want to use. This container will then control the animation‚Äôs progress as the user scrolls through it.\nNext, we need to define the scroll axis for this new container by using the scroll-timeline-axis, which tells the animation which axis will trigger the motion. Here‚Äôs how it looks in the code:\nIf you omit the axis, then the default block value will be used. However, you can also use the shorthand scroll-timeline property to combine both the name and axis in a single declaration:\nI think it‚Äôs easier to understand all this with a practical example. Here‚Äôs the same progress indicator we‚Äôve been working with, but with inline scrolling (i.e., along the x-axis):\nWe have two animations running:\nThe HTML structure looks like the following:\nIn this case, the gallery-scroll-container has horizontal scrolling and changes its background color as you scroll. Normally, we could just use animation-timeline: scroll(self inline) to achieve this. However, we also want the gallery-progress element to use the same scroll for its animation.\nThe gallery-progress element is the first inside gallery-scroll-container, and we will lose it when scrolling unless it‚Äôs absolutely positioned. But when we do this, the element no longer occupies space in the normal document flow, and that affects how the element behaves with its parent and siblings. We need to specify which scroll container we want it to listen to.\nThat‚Äôs where naming the scroll container comes in handy. By giving gallery-scroll-container a scroll-timeline-name and scroll-timeline-axis, we can ensure both animations sync to the same scroll:\nAnd is using that scrolling to define its own animation-timeline:\nNow we can scale this name to the progress bar that is using a different animation but listening to the same scroll:\nThis allows both animations (the growing progress bar and changing background color) to follow the same scroll behavior, even though they are separate elements and animations.\nWhat happens if we want to animate something based on the scroll position of a sibling or even a higher ancestor? This is where the timeline-scope property comes into play. It allows us to extend the scope of a scroll-timeline beyond the current element‚Äôs subtree. The value of timeline-scope must be a custom identifier, which again is a dashed-ident.\nLet‚Äôs illustrate this with a new example. This time, scrolling in one container runs an animation inside another container:\nWe can play the animation on the image when scrolling the text container because they are siblings in the HTML structure:\nHere, only the .scroll-container has scrollable content, so let‚Äôs start by naming this:\nNotice that I haven‚Äôt specified the scroll axis, as it defaults to block (vertical scrolling), and that‚Äôs the value I want.\nLet‚Äôs move on to the image inside the sardinas-container. We want this image to animate as we scroll through the scroll-container. I‚Äôve added a scroll-timeline-name to its animation-timeline property:\nAt this point, however, the animation still won‚Äôt work because the scroll-container is not directly related to the images. To make this work, we need to extend the scroll-timeline-name so it becomes reachable. This is done by adding the timeline-scope to the parent element (or a higher ancestor) shared by both elements:\nWith this setup, the scroll of the scroll-container will now control the animation of the image inside the sardinas-container!\nNow that we‚Äôve covered how to use timeline-scope, we‚Äôre ready to move on to the next type of scroll-driven animations, where the same properties will apply but with slight differences in how they behave.\nWe just looked at scroll progress animations. That‚Äôs the first type of scroll-driven animation of the two. Next, we‚Äôre turning our attention to view progress animations. There‚Äôs a lot of similarities between the two! But they‚Äôre different enough to warrant their own section for us to explore how they work. You‚Äôll see me refer to these as view-timeline animations in addition to calling them view progress animations, as they revolve around a view() function.\nThe view progress timeline is the second type of type of scroll-driven animation that we‚Äôre looking at. It tracks an element as it enters or exits the scrollport (the visible area of the scrollable content). This behavior is quite similar to how an IntersectionObserver works in JavaScript but can be done entirely in CSS.\nWe have anonymous and named view progress timelines, just as we have anonymous and named scroll progress animations. Let‚Äôs unpack those.\nHere‚Äôs a simple example to help us see the basic idea of anonymous view timelines. Notice how the image fades into view when you scroll down to a certain point on the page:\nLet‚Äôs say we want to animate an image that fades in as it appears in the scrollport. The image‚Äôs opacity will go from 0 to 1. This is how you might write that same animation in classic CSS using @keyframes:\nThat‚Äôs great, but we want the image to fadeIn when it‚Äôs in view. Otherwise, the animation is sort of like a tree that falls in a forest with no one there to witness it‚Ä¶ did the animation ever happen? We‚Äôll never know!\nWe have a view() function that makes this a view progress animation with a single line of CSS:\nAnd notice how we no longer need to declare an animation-duration like we did in classic CSS. The animation is no longer tied by time but by space. The animation is triggered as the image becomes visible in the scrollport.\nJust like the scroll-timeline property, the view-timeline property accepts parameters that allow for more customization:\nHere‚Äôs an example that uses both inset and axis to customize when and how the animation starts:\nIn this case:\nWith the view() function, it‚Äôs also easy to create parallax effects by simply adjusting the animation properties. For example, you can have an element move or scale as it enters the scrollport without any JavaScript:\nThis makes it incredibly simple to create dynamic and engaging scroll animations with just a few lines of CSS.\nUsing the CSS animation-range property with view timelines defines how much of an element‚Äôs visibility within the scrollport controls the start and end points of the animation‚Äôs progress. This can be used to fine-tune when the animation begins and ends based on the element‚Äôs visibility in the viewport.\nWhile the default value is normal, in view timelines, it translates to tracking the full visibility of the element from the moment it starts entering the scrollport until it fully leaves. This is represented by the following:\nOr, more simply:\nThere are six possible values or timeline-range-names:\nYou can mix different timeline-range-names to control the start and end points of the animation range. For example, you could make the animation start when the element enters the scrollport and end when it exits:\nYou can also combine these values with percentages to define more custom behavior, such as starting the animation halfway through the element‚Äôs entry and ending it halfway through its exit:\nExploring all these values and combinations is best done interactively. Tools like Bramus‚Äô view-timeline range visualizer make it easier to understand.\nOne of the powerful features of timeline-range-names is their ability to be used inside @keyframes:\nTwo different animations are happening in that demo:\nThe new thing is that now we can merge these two animations using the entry and exit timeline-range-names, simplifying it into one animation that handles both cases:\nThis approach allows us to animate the element‚Äôs behavior smoothly as it both enters and leaves the scrollport, all within a single @keyframes block.\nThe concept of using view-timeline with named timelines and linking them across different elements can truly expand the possibilities for scroll-driven animations. In this case, we are linking the scroll-driven animation of images with the animations of unrelated paragraphs in the DOM structure by using a named view-timeline and timeline-scope.\nThe view-timeline property works similarly to the scroll-timeline property. It‚Äôs the shorthand for declaring the view-timeline-name and view-timeline-axis properties in one line. However, the difference from scroll-timeline is that we can link the animation of an element when the linked elements enter the scrollport. I took the previous demo and added an animation to the paragraphs so you can see how the opacity of the text is animated when scrolling the images on the left:\nThis one looks a bit verbose, but I found it hard to come up with a better example to show the power of it. Each image in the vertical scroll container is assigned a named view-timeline with a unique identifier:\nThis makes the scroll timeline of each image have its own custom name, such as --one for the first image, --two for the second, and so on.\nNext, we connect the animations of the paragraphs to the named timelines of the images. The corresponding paragraph should animate when the images enter the scrollport:\nHowever, since the images and paragraphs are not directly related in the DOM, we need to declare a timeline-scope on their common ancestor. This ensures that the named timelines (--one, --two, and so on) can be referenced and shared between the elements:\nBy declaring the timeline-scope with all the named timelines (--one, ‚Äîtwo, --three, --four), both the images and the paragraphs can participate in the same scroll-timeline logic, despite being in separate parts of the DOM tree.\nWe‚Äôve covered the vast majority of what‚Äôs currently defined in the CSS Scroll-Driven Animations Module Leve 1 specification today in December 2024. But I want to highlight a few key takeaways that helped me better understand these new rules that you may not get directly from the spec:\nFor example:\nMy main struggle while trying to build the demos was more about CSS itself than the scroll animations. Sometimes, building the layout and generating the scroll was more difficult than applying the scroll animation. Also, some things that confused me at the beginning as the spec keeps evolving, and some of these are not there anymore (remember, it has been under development for more than five years now!):"
  },
  {
    "url": "/2024/12/creating-effective-multistep-form-better-user-experience/",
    "title": "Creating An Effective Multistep Form For Better User Experience",
    "author": "Amejimaobari Ollornwi",
    "date": "Dec 3, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "JavaScript",
      "UX",
      "Design"
    ],
    "summary": "Forms are already notoriously tough to customize and style ‚Äî to the extent that we‚Äôre already starting to see new ideas for more flexible control. But what we don‚Äôt often discuss is designing good-form experiences beyond validation. That‚Äôs what Jima Victor discusses in this article, focusing specifically on creating multi-step forms that involve navigation between sections.",
    "content": "For a multistep form, planning involves structuring questions logically across steps, grouping similar questions, and minimizing the number of steps and the amount of required information for each step. Whatever makes each step focused and manageable is what should be aimed for.\nIn this tutorial, we will create a multistep form for a job application. Here are the details we are going to be requesting from the applicant at each step:\nYou can think of structuring these questions as a digital way of getting to know somebody. You can‚Äôt meet someone for the first time and ask them about their work experience without first asking for their name.\nBased on the steps we have above, this is what the body of our HTML with our form should look like. First, the main <form> element:\nStep 1 is for filling in personal information, like the applicant‚Äôs name, email address, and phone number:\nOnce the applicant completes the first step, we‚Äôll navigate them to Step 2, focusing on their work experience so that we can collect information like their most recent company, job title, and years of experience. We‚Äôll tack on a new <fieldset> with those inputs:\nStep 3 is all about the applicant listing their skills and qualifications for the job they‚Äôre applying for:\nAnd, finally, we‚Äôll allow the applicant to review their information before submitting it:\nNotice: We‚Äôve added a hidden attribute to every fieldset element but the first one. This ensures that the user sees only the first step. Once they are done with the first step, they can proceed to fill out their work experience on the second step by clicking a navigational button. We‚Äôll add this button later on.\nTo keep things focused, we‚Äôre not going to be emphasizing the styles in this tutorial. What we‚Äôll do to keep things simple is leverage the Simple.css style framework to get the form in good shape for the rest of the tutorial.\nIf you‚Äôre following along, we can include Simple‚Äôs styles in the document <head>:\nAnd from there, go ahead and create a style.css file with the following styles that I‚Äôve folded up.\nAn easy way to ruin the user experience for a multi-step form is to wait until the user gets to the last step in the form before letting them know of any error they made along the way. Each step of the form should be validated for errors before moving on to the next step, and descriptive error messages should be displayed to enable users to understand what is wrong and how to fix it.\nNow, the only part of our form that is visible is the first step. To complete the form, users need to be able to navigate to the other steps. We are going to use several buttons to pull this off. The first step is going to have a Next button. The second and third steps are going to have both a Previous and a Next button, and the fourth step is going to have a Previous and a Submit button.\nNotice: We‚Äôve added onclick attributes to the Previous and Next buttons to link them to their respective JavaScript functions: previousStep() and nextStep().\nThe nextStep() function is linked to the Next button. Whenever the user clicks the Next button, the nextStep() function will first check to ensure that all the fields for whatever step the user is on have been filled out correctly before moving on to the next step. If the fields haven‚Äôt been filled correctly, it displays some error messages, letting the user know that they‚Äôve done something wrong and informing them what to do to make the errors go away.\nBefore we go into the implementation of the nextStep function, there are certain variables we need to define because they will be needed in the function. First, we need the input fields from the DOM so we can run checks on them to make sure they are valid.\nThen, we‚Äôre going to need an array to store our error messages.\nAlso, we would need an element in the DOM where we can insert those error messages after they‚Äôve been generated. This element should be placed in the HTML just below the last fieldset closing tag:\nAdd the above div to the JavaScript code using the following line:\nAnd finally, we need a variable to keep track of the current step.\nlet currentStep = 1;\nNow that we have all our variables in place, here‚Äôs the implementation of the nextstep() function:\nThe moment the Next button is pressed, our code first checks which step the user is currently on, and based on this information, it validates the data for that specific step by calling the addValidationErrors() function. If there are errors, we display them. Then, the form calls the validateStep() function to verify that there are no errors before moving on to the next step. If there are errors, it prevents the user from going on to the next step.\nWhenever the nextStep() function runs, the error messages are cleared first to avoid appending errors from a different step to existing errors or re-adding existing error messages when the addValidationErrors function runs. The addValidationErrors function is called for each step using the fields for that step as arguments.\nHere‚Äôs how the addValidationErrors function is implemented:\nThis is how the validateStep() function is defined:\nThe validateStep() function checks for errors. If there are none, it proceeds to the next step with the help of the showStep() function.\nThe showStep() function requires the four fieldsets in the DOM. Add the following line to the top of the JavaScript code to make the fieldsets available:\nWhat the showStep() function does is to go through all the fieldsets in our form and hide whatever fieldset is not equal to the one we‚Äôre navigating to. Then, it updates the currentStep variable to be equal to the step we‚Äôre navigating to.\nThe previousStep() function is linked to the Previous button. Whenever the previous button is clicked, similarly to the nextStep function, the error messages are also cleared from the page, and navigation is also handled by the showStep function.\nWhenever the showStep() function is called with ‚ÄúcurrentStep - 1‚Äù as an argument (as in this case), we go back to the previous step, while moving to the next step happens by calling the showStep() function with ‚ÄúcurrentStep + 1‚Äù as an argument (as in the case of the validateStep() function).\nOne other way of improving the user experience for a multi-step form, is by integrating visual cues, things that will give users feedback on the process they are on. These things can include a progress indicator or a stepper to help the user know the exact step they are on.\nTo integrate a stepper into our form (sort of like this one from Material Design), the first thing we need to do is add it to the HTML just below the opening <form> tag.\nNext, we need to query the part of the stepper that will represent the current step. This is the span tag with the class name of currentStep.\nNow, we need to update the stepper value whenever the previous or next buttons are clicked. To do this, we need to update the showStep() function by appending the following line to it:\nThis line is added to the showStep() function because the showStep() function is responsible for navigating between steps and updating the currentStep variable. So, whenever the currentStep variable is updated, the currentStepDiv should also be updated to reflect that change.\nOne major way we can improve the form‚Äôs user experience is by storing user data in the browser. Multistep forms are usually long and require users to enter a lot of information about themselves. Imagine a user filling out 95% of a form, then accidentally hitting the F5 button on their keyboard and losing all their progress. That would be a really bad experience for the user.\nUsing localStorage, we can store user information as soon as it is entered and retrieve it as soon as the DOM content is loaded, so users can always continue filling out their forms from wherever they left off. To add this feature to our forms, we can begin by saving the user‚Äôs information as soon as it is typed. This can be achieved using the input event.\nBefore adding the input event listener, get the form element from the DOM:\nNow we can add the input event listener:\nNext, we need to add some code to help us retrieve the user data once the DOM content is loaded.\nLastly, it is good practice to remove data from localStorage as soon as it is no longer needed:\nIf the user accidentally closes their browser, they should be able to return to wherever they left off. This means that the current step value also has to be saved in localStorage.\nTo save this value, append the following line to the showStep() function:\nNow we can retrieve the current step value and return users to wherever they left off whenever the DOM content loads. Add the following code to the DOMContentLoaded handler to do so:\nAlso, do not forget to clear the current step value from localStorage when the form is submitted.\nThe above line should be added to the submit handler.\nCreating multi-step forms can help improve user experience for complex data entry. By carefully planning out steps, implementing form validation at each step, and temporarily storing user data in the browser, you make it easier for users to complete long forms.\nFor the full implementation of this multi-step form, you can access the complete code on GitHub."
  },
  {
    "url": "/2025/01/understanding-ai-meaning/",
    "title": "What Does AI Really Mean?",
    "author": "Atila Fassina",
    "date": "Jan 6, 2025",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "AI",
      "Guides",
      "User Interaction"
    ],
    "summary": "We, as human beings, don‚Äôt worry too much about making sure the connections land at the right point. Our brain just works that way, declaratively. However, for building AI, we need to be more explicit. Let‚Äôs dive in!",
    "content": "In 2024, Artificial Intelligence (AI) hit the limelight with major advancements. The problem with reaching common knowledge and so much public attention so quickly is that the term becomes ambiguous. While we all have an approximation of what it means to ‚Äúuse AI‚Äù in something, it‚Äôs not widely understood what infrastructure having AI in your project, product, or feature entails.\nSo, let‚Äôs break down the concepts that make AI tick. How is data stored and correlated, and how are the relationships built in order for an algorithm to learn how to interpret that data? As with most data-oriented architectures, it all starts with a database.\nCreating intelligence, whether artificial or natural, works in a very similar way. We store chunks of information, and we then connect them. Multiple visualization tools and metaphors show this in a 3-dimensional space with dots connected by lines on a graph. Those connections and their intersection are what make up for intelligence. For example, we put together ‚Äúchocolate is sweet and nice‚Äù and ‚Äúdrinking hot milk makes you warm‚Äù, and we make ‚Äúhot chocolate‚Äù.\nWe, as human beings, don‚Äôt worry too much about making sure the connections land at the right point. Our brain just works that way, declaratively. However, for building AI, we need to be more explicit. So think of it as a map. In order for a plane to leave CountryA and arrive at CountryB it requires a precise system: we have coordinates, we have 2 axis in our maps, and they can be represented as a vector: [28.3772, 81.5707].\nFor our intelligence, we need a more complex system; 2 dimensions will not suffice; we need thousands. That‚Äôs what vector databases are. Our intelligence can now correlate terms based on the distance and/or angle between them, create cross-references, and establish patterns in which every term occurs.\nA specialized database that stores and manages data as high-dimensional vectors. It enables efficient similarity searches and semantic matching.\nAs stated in the last session, matching the search terms (your prompt) to the data is the exercise of semantic matching (it establishes the pattern in which keywords in your prompt are used within its own data), and the similarity search, the distance (angular or linear) between each entry. That‚Äôs actually a roughly accurate representation. What a similarity search does is define each of the numbers in a vector (that‚Äôs thousands of coordinates long), a point in this weird multi-dimensional space. Finally, to establish similarity between each of these points, the distance and/or angles between them are measured.\nThis is one of the reasons why AI isn‚Äôt deterministic ‚Äî we also aren‚Äôt ‚Äî for the same prompt, the search may produce different outputs based on how the scores are defined at that moment. If you‚Äôre building an AI system, there are algorithms you can use to establish how your data will be evaluated.\nThis can produce more precise and accurate results depending on the type of data. The main algorithms used are 3, and Each one of them performs better for a certain kind of data, so understanding the shape of the data and how each of these concepts will correlate is important to choosing the correct one. In a very hand-wavy way, here‚Äôs the rule-of-thumb to offer you a clue for each:\nNow that we understand how the data bulk is stored and the relationships are built, we can start talking about how the intelligence works ‚Äî let the training begin!\nA language model is a system trained to understand, predict, and finally generate human-like text by learning statistical patterns and relationships between words and phrases in large text datasets. For such a system, language is represented as probabilistic sequences.\nIn that way, a language model is immediately capable of efficient completion (hence the quote stating that 90% of the code in Google is written by AI ‚Äî auto-completion), translation, and conversation. Those tasks are the low-hanging fruits of AI because they depend on estimating the likelihood of word combinations and improve by reaffirming and adjusting the patterns based on usage feedback (rebalancing the similarity scores).\nAs of now, we understand what a language model is, and we can start classifying them as large and small.\nAs the name says, use large-scale datasets ‚Äî with billions of parameters, like up to 70 billion. This allows them to be diverse and capable of creating human-like text across different knowledge domains.\nThink of them as big generalists. This makes them not only versatile but extremely powerful. And as a consequence, training them demands a lot of computational work.\nWith a smaller dataset, with numbers ranging from 100 million to 3 billion parameters. They take significantly less computational effort, which makes them less versatile and better suited for specific tasks with more defined constraints. SLMs can also be deployed more efficiently and have a faster inference when processing user input.\nFine-tuning an LLM consists of adjusting the model‚Äôs weights through additional specialized training on a specific (high-quality) dataset. Basically, adapting a pre-trained model to perform better in a particular domain or task.\nAs training iterates through the heuristics within the model, it enables a more nuanced understanding. This leads to more accurate and context-specific outputs without creating a custom language model for each task. On each training iteration, developers will tune the learning rate, weights, and batch-size while providing a dataset tailored for that particular knowledge area. Of course, each iteration depends also on appropriately benchmarking the output performance of the model.\nAs mentioned above, fine-tuning is particularly useful for applying a determined task with a niche knowledge area, for example, creating summaries of nutritional scientific articles, correlating symptoms with a subset of possible conditions, etc.\nFine-tuning is not something that can be done frequently or fast, requiring numerous iterations, and it isn‚Äôt intended for factual information, especially if dependent on current events or streamed information.\nMost conversations we have are directly dependent on context; with AI, it isn‚Äôt so much different. While there are definitely use cases that don‚Äôt entirely depend on current events (translations, summarization, data analysis, etc.), many others do. However, it isn‚Äôt quite feasible yet to have LLMs (or even SLMs) being trained on a daily basis.\nFor this, a new technique can help: Retrieve-Augmented Generation (RAG). It consists of injecting a smaller dataset into the LLMs in order to provide it with more specific (and/or current) information. With a RAG, the LLM isn‚Äôt better trained; it still has all the generalistic training it had before ‚Äî but now, before it generates the output, it receives an ingest of new information to be used.\nFor an RAG to work well, data must be prepared/formatted in a way that the LLM can properly digest it. Setting it up is a multi-step process:\nRAG first retrieves relevant information from a database using a query generated by the LLM. Integrating an RAG to an LLM enhances its context, providing it with a more comprehensive understanding of the topic. This augmented context enables the LLM to generate more precise, informative, and engaging responses.\nSince it provides access to fresh information via easy-to-update database records, this approach is mostly for data-driven responses. Because this data is context-focused, it also provides more accuracy to facts. Think of a RAG as a tool to turn your LLM from a generalist into a specialist.\nEnhancing an LLM context through RAG is particularly useful for chatbots, assistants, agents, or other usages where the output quality is directly connected to domain knowledge. But, while RAG is the strategy to collect and ‚Äúinject‚Äù data into the language model‚Äôs context, this data requires input, and that is why it also requires meaning embedded.\nTo make data digestible by the LLM, we need to capture each entry‚Äôs semantic meaning so the language model can form the patterns and establish the relationships. This process is called embedding, and it works by creating a static vector representation of the data. Different language models have different levels of precision embedding. For example, you can have embeddings from 384 dimensions all the way to 3072.\nIn other words, in comparison to our cartesian coordinates in a map (e.g., [28.3772, 81.5707]) with only two dimensions, an embedded entry for an LLM has from 384 to 3072 dimensions.\nI hope this helped you better understand what those terms mean and the processes which encompass the term ‚ÄúAI‚Äù. This merely scratches the surface of complexity, though. We still need to talk about AI Agents and how all these approaches intertwine to create richer experiences. Perhaps we can do that in a later article ‚Äî let me know in the comments if you‚Äôd like that!\nMeanwhile, let me know your thoughts and what you build with this!"
  },
  {
    "url": "/2024/11/ai-transformative-impact-web-design-supercharging-productivity/",
    "title": "AI‚Äôs Transformative Impact On Web Design: Supercharging Productivity Across The Industry",
    "author": "Paul Boag",
    "date": "Nov 19, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "AI",
      "Workflow",
      "Web Design",
      "Tools"
    ],
    "summary": "Discover how AI is reshaping web design, boosting productivity in design, coding, UX, and copywriting while amplifying human creativity in a new article by Paul Boag.",
    "content": "As I sit down to write this article, I can‚Äôt help but marvel at the incredible changes sweeping through our industry. For the first time in my career, I feel like we‚Äôre no longer limited by our technology but by our imagination. Well, almost. Artificial Intelligence (AI) is reshaping the web design landscape in ways we could only dream of a few years ago, and I‚Äôm excited to share with you how it‚Äôs supercharging our productivity across various aspects of our work.\nNow, before we dive in, let me assure you: AI isn‚Äôt here to replace us. At least, not for a while yet. There are still crucial areas where human expertise reigns supreme. AI struggles with strategic planning that considers the nuances of human behavior and market trends. It can‚Äôt match our emotional intelligence when navigating client relationships and team dynamics. And when it comes to creative thinking that pushes boundaries and creates truly innovative solutions, we humans still have the upper hand.\nBut here‚Äôs the exciting part: AI is becoming an invaluable tool that‚Äôs supercharging our productivity. Think of it as having a highly capable intern at your disposal. As the Nielsen Norman Group aptly put it in their article ‚ÄúAI as an Intern,‚Äù we need to approach AI tools with the right mindset. Double-check their work, use them for initial drafts rather than final products, and provide specific instructions and relevant context.\nDon‚Äôt expect perfect results on the first try. Instead, engage in a back-and-forth conversation, refining the AI output through iteration. This process of continuous improvement is where AI truly shines, dramatically speeding up our workflow.\nLet‚Äôs explore how AI is reshaping different areas of our industry, looking at some of the many tools available to us.\nIn the realm of design, AI is proving to be a game-changer. It‚Äôs particularly adept at:\nTake AI in Figma, for instance. It‚Äôs become my go-to for generating dummy content and tidying up my layers. The time saved on these mundane tasks allows me to focus more on the creative aspects of design.\nGenerative imagery tools like Krea, which uses Flux, have revolutionized how we source visuals. Gone are the days of endlessly scrolling through stock libraries. Now, we can describe exactly what we need, and AI will create it for us. This level of customization and specificity is a game changer for creating unique, on-brand visuals.\nRelume is another tool I‚Äôve found incredibly useful. It‚Äôs great for a collaborative back-and-forth over designs or for quickly putting together designs for smaller sites. The ability to iterate rapidly with AI assistance has significantly sped up my design process.\nAnd let‚Äôs not forget about Adobe. Their upcoming tools, such as lighting matching for composite images, are set to take our design capabilities to new heights. If you want to see more of what‚Äôs on the horizon, I highly recommend checking out the latest Adobe Max presentations.\nThe impact of AI on coding is nothing short of revolutionary. According to a McKinsey study, developers using AI tools performed coding tasks like code generation, refactoring, and documentation 20%-50% faster on average compared to those not using AI tools. That‚Äôs a significant productivity boost!\nAI is helping developers in several key areas:\nTo put this into perspective, AI now writes 25% of the code at Google. That‚Äôs a staggering figure from one of the world‚Äôs leading tech companies.\nTools like Cursor AI and GitHub Copilot are at the forefront of this revolution, offering features such as:\nI‚Äôve personally been amazed by what ChatGPT 01-Preview can do. I‚Äôve used it to build simple WordPress plugins in minutes, tasks that would have taken me significantly longer in the past.\nIn the field of User Experience (UX), AI is opening up new possibilities for research and analysis. It‚Äôs allowing us to:\nI‚Äôve found ChatGPT to be an invaluable tool for data analysis, particularly when it comes to making sense of analytics and survey responses. It can quickly identify patterns and insights that might take us hours to uncover manually.\nTools like Strella are pushing the boundaries of what‚Äôs possible in user research. AI can now perform user interviews at scale, allowing us to gather insights from a much larger pool of users than ever before.\nAttention Insight is another fascinating tool. It uses AI to predict where people will look on a page, providing valuable data for optimizing layouts and user interfaces.\nMicrosoft Clarity has also upped its game, allowing us to ask questions about our analytic insights, heatmaps, and session recordings. This natural language interface makes it easier than ever to extract meaningful insights from our data.\nWhen it comes to copywriting, AI is proving to be a powerful ally. It‚Äôs helping us:\nNotion AI has become one of my go-to tools for content creation. It combines the best of ChatGPT and Claude, allowing it to draw upon a wide range of provided source material to write detailed documentation, articles, and reports.\nChatGPT has been a game-changer for improving the quality of website copy. It can take user questions and bullet-point answers from subject specialists and transform them into web-optimized content. I‚Äôve found it particularly useful for defining value propositions and writing high-converting copy.\nFor refining existing content, the Hemingway Editor is invaluable. It can take the existing copy and make it clearer, more concise, and easier to scan ‚Äî essential qualities for effective web content.\nAI isn‚Äôt just transforming the technical aspects of our work; it‚Äôs also making a significant impact on those mundane administrative tasks that often eat up our time. By leveraging AI, we can streamline various aspects of our daily workflow, allowing us to focus more on high-value activities.\nHere are some ways AI is helping us tackle administrative tasks more efficiently:\nLet me share some personal experiences with AI tools that have transformed my administrative workflow:\nI‚Äôve dramatically increased my writing speed using Flow. This tool has taken me from typing at 49 words per minute to dictating at over 95 words per minute. Not only does it allow me to dictate, but it also tidies up my words to ensure they read well and are grammatically correct.\nFor email writing, I‚Äôve found Fixkey to be invaluable. It helps me rewrite or reformat copy quickly. I‚Äôve even set up a prompt that tones down my emails when I‚Äôm feeling particularly irritable, ensuring they sound reasonable and professional.\nDealing with long email threads or Slack conversations can be time-consuming. That‚Äôs where Spark comes in handy. It summarizes lengthy threads, saving me valuable time. Interestingly, this feature is now built into iOS for all notifications, making it even more accessible.\nWhen it comes to research, Google Notebook LLM has been a game-changer. I can feed it large amounts of data on a subject and quickly extract valuable insights. This tool has significantly sped up my research process.\nLastly, if I need to back up an argument with a statistic or quote, Perplexity has become my go-to resource. It quickly finds relevant sources I can quote, adding credibility to my work without the need for extensive manual searches.\nAs I wrap up this article, I realize I‚Äôve only scratched the surface of what AI can do for our industry. The real challenge isn‚Äôt in the technology itself but in breaking out of our established routines and taking the time to experiment with what‚Äôs possible.\nAI isn‚Äôt replacing us ‚Äî it‚Äôs empowering us to work smarter and more efficiently. By embracing these tools and learning to collaborate effectively with AI, we can focus more on the aspects of our work that truly require human creativity, empathy, and strategic thinking.\nIf you‚Äôre feeling overwhelmed by the rapid pace of change, don‚Äôt worry. We‚Äôre all learning and adapting together. Remember, the goal isn‚Äôt to become an AI expert overnight but to gradually incorporate these tools into your work in ways that make sense for you and your projects."
  },
  {
    "url": "/2024/12/importance-graceful-degradation-accessible-interface-design/",
    "title": "The Importance Of Graceful Degradation In Accessible Interface Design",
    "author": "Eleanor Hecks",
    "date": "Dec 6, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Accessibility",
      "Design",
      "User Experience"
    ],
    "summary": "Few things are as frustrating to a user as when a site won‚Äôt respond. Unfortunately, it‚Äôs also an all-too-common scenario. Many websites and apps depend on so many elements that one of any number of errors could cause the whole thing to fail. As prevalent as such instances may be, they‚Äôre preventable through the practice of graceful degradation.",
    "content": "Graceful degradation is a design approach that ensures the basics of a website will still function even if specific individual parts of it stop working. The approach removes single points of failure: just because one thing stops working doesn‚Äôt mean the system as a whole fails. A site following this principle fails in pieces instead of all at once, so the most important features remain available when some components encounter an error.\nThe idea or the concept of single points of failure is well known in the manufacturing sector. It‚Äôs one of the most common resilience strategies in manufacturing and supply chain operations. A factory with multiple sources of material can keep working even when one supplier becomes unavailable. However, it‚Äôs become increasingly crucial to web development as user expectations around availability and functionality rise.\nData center redundancy is a common example of graceful degradation in web development. By using multiple server components, websites ensure they‚Äôll stay up when one or more servers fail. In a design context, it may look like guaranteeing the lack of support for a given feature in a user‚Äôs browser or device doesn‚Äôt render an app unusable.\nEscalators are a familiar real-world example of the same concept. When they stop working, they can still get people from one floor to the next by acting as stairs. They may not be as functional as they normally are, but they‚Äôre not entirely useless.\nThe BBC News webpage is a good example of graceful degradation in web design. As this screenshot shows, the site prioritizes loading navigation and the text within a news story over images. Consequently, slow speeds or old, incompatible browser plugins may make pictures unavailable, but the site‚Äôs core function ‚Äî sharing the news ‚Äî is still accessible.\nIn contrast, the Adobe Express website is an example of what happens without graceful degradation. Instead of making some features unavailable or dropping load times, the entire site is inaccessible on some browsers. Consequently, users have to update or switch software to use the web app, which isn‚Äôt great for accessibility.\nThe graceful degradation approach acts as the opposite of progressive enhancement ‚Äî an approach in which a designer builds the basics of a website and progressively adds features that are turned on only if a browser is capable of running them. Each layer of features is turned off by default, allowing for one seamless user experience designed to work for everyone.\nThere is much debate between designers about whether graceful degradation or progressive enhancement is the best way to build site functionality. In reality, though, both are important. Each method has unique pros and cons, so the two can complement each other to provide the most resilience.\nProgressive enhancement is a good strategy when building a new site or app because you ensure a functional experience for everyone from the start. However, new standards and issues can emerge in the future, which is where graceful degradation comes in. This approach helps you adjust an existing website to comply with new accessibility standards or resolve a compatibility problem you didn‚Äôt notice earlier.\nEnsuring your site or app remains functional is crucial for accessibility. When core functions become unavailable, the platform is no longer accessible to anyone. On a smaller scale, if features like text-to-speech readers or video closed captioning stop working, users with sight difficulties may be unable to enjoy the site.\nGraceful degradation‚Äôs impact on accessibility is all the larger when considering varying device capabilities. As the average person spends 3.6 hours each day on their phone, failing to ensure a site supports less powerful mobile browsers will alienate a considerable chunk of your audience. Even if some complex functions may not work on mobile, sacrificing those to keep the bulk of the website available on phones ensures broader accessibility.\nOutdated browsers are another common accessibility issue you can address with graceful degradation. Consider this example from Fairleigh Dickinson University about Adobe Flash, which most modern browsers no longer support.\nSoftware still using Flash cannot use the multi-factor authentication feature in question. As a result, users with older programs can‚Äôt log in. Graceful degradation may compromise by making some functionality unavailable to Flash-supporting browsers while still allowing general access. That way, people don‚Äôt need to upgrade to use the service.\nGraceful degradation removes technological barriers to accessibility. In a broader sense, it also keeps your site or app running at all times, even amid unforeseen technical difficulties. While there are many ways you can achieve that, here are some general best practices to follow.\nThe first step in ensuring graceful degradation is determining what your core functions are. You can only guarantee the availability of mission-critical features once you know what‚Äôs essential and what isn‚Äôt.\nReview your user data to see what your audience interacts with most ‚Äî these are generally elements worth prioritizing. Anything related to site security, transactions, and readability is also crucial. Infrequently used features or elements like video players and interactive maps are nice to have but okay to sacrifice if you must to ensure mission-critical components remain available.\nOnce you‚Äôve categorized site functions by criticality, you can ensure redundancy for the most important ones. That may mean replicating elements in a few forms to work on varying browsers or devices. Alternatively, you could provide multiple services to carry out important functions, like supporting alternate payment methods or providing both video and text versions of content.\nRemember that redundancy applies to the hardware your platform runs on, too. The Uptime Institute classifies data centers into tiers, which you can use to determine what redundant systems you need. Similarly, make sure you can run your site on multiple servers to avoid a crash should one go down.\nRemember that graceful degradation is also about supporting software and hardware of varying capabilities. One of the most important considerations under that umbrella for web design is to accommodate outdated browsers.\nWhile mobile devices don‚Äôt support Flash, some older versions of desktop browsers still use it. You can work with both by avoiding Flash ‚Äî you can often use HTML5 instead ‚Äî but not requiring users to have a non-Flash-supporting browser. Similarly, you can offer low-bandwidth, simple alternatives to any features that take up considerable processing power to keep things accessible on older systems.\nRemember to pay attention to newer software‚Äôs security settings, too. Error messages like this one a Microsoft user posted about can appear if a site does not support some browsers‚Äô updated security protocols. Always keep up with updates from popular platforms like Chrome and Safari to meet these standards and avoid such access issues.\nLoad balancing is another crucial step in graceful degradation. Many cloud services automatically distribute traffic between server resources to prevent overloading. Enabling this also ensures that requests can be processed on a different part of the system if another fails.\nCaching is similar. By storing critical data, you build a fallback plan if an external service or application program interface (API) doesn‚Äôt work. When the API doesn‚Äôt respond, you can load the cached data instead. As a result, caches significantly reduce latency in many cases, but you should be aware that you can‚Äôt cache everything. Focus on the most critical functions.\nFinally, be sure to test your website for accessibility issues before taking it live. Access it from multiple devices, including various browser versions. See if you can run it on a single server to test its ability to balance loads.\nYou likely won‚Äôt discover all possible errors in testing, but it‚Äôs better to catch some than none. Remember to test your site‚Äôs functionality before any updates or redesigns, too.\nDesigners, both big and small, can start their graceful degradation journey by tweaking some settings with their web hosting service. AWS offers guidance for managing failures you can use to build degradation into your site‚Äôs architecture. Hosting providers should also allow you to upgrade your storage plan and configure your server settings to provide redundancy and balance loads.\nBusinesses large enough to run their own data centers should install redundant server capacity and uninterruptible power supplies to keep things running. Smaller organizations can instead rely on their code, using semantic HTML to keep it simple enough for multiple browsers. Programming nonessential things like images and videos to stop when bandwidth is low will also help.\nVirtualization systems like Kubernetes are also useful as a way to scale site capacity and help load elements separately from one another to maintain accessibility. Testing tools like BrowserStack, WAVE, and CSS HTML Validator can assist you by revealing if your site has functional issues on some browsers or for certain users.\nAt its core, web accessibility is about ensuring a platform works as intended for all people. While design features may be the most obvious part of that goal, technical defenses also play a role. A site is only accessible when it works, so you must keep it functional, even when unexpected hiccups occur.\nGraceful degradation is not a perfect solution, but it prevents a small issue from becoming a larger one. Following these five steps to implement it on your website or app will ensure that your work in creating an accessible design doesn‚Äôt go to waste."
  },
  {
    "url": "/2024/12/three-approaches-amplify-design-projects/",
    "title": "Three Approaches To Amplify Your Design Projects",
    "author": "Olivia De Alba",
    "date": "Dec 17, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Design",
      "Workflow",
      "Communication"
    ],
    "summary": "There are many ways to elevate a design project from good to incredible. For web and product designers, it‚Äôs not just about adding more animations and flair. What it truly comes down to is a reframing of your thought processes starting before the project even kicks off. Olivia De Alba presents three approaches that designers can implement and which will change the way they make their projects more successful.",
    "content": "What makes an incredible project? Is it the client? The type of project? An exorbitant budget? While those things help to create the environment in which a great project can thrive, what truly makes a project something powerful is you.\nNo, this isn‚Äôt some pep talk on why you are the ultimate weapon ‚Äî but yes, you are if you want to be. I am simply a web and product designer writing down my observations in order to give others the tools to make their project experiences all the better for it.\nStill with me? Let me tell you about what I‚Äôve discovered over the years working as an agency designer.\nThere are three approaches that have completely changed the way my projects run from start to finish. I have found that since implementing all three, my work and my interactions with clients and coworkers have blossomed. Here they are:\nIn this article, you will find explanations of each approach and connected practical examples ‚Äî as well as real-life ones from my project work at Fueled + 10up ‚Äî to show you how they can be applied to projects. With that said, let‚Äôs dive in.\nWhile some of the things that we have learned over the years spent in design are invaluable, amidst those previous experiences, there are also the ones that hold us back.\nUnlearning ingrained lessons is not an easy thing to do. Rather, I challenge you to reframe them and get into the habit of asking yourself, ‚ÄúAm I stopping short creatively because I have always gone this far?‚Äù or ‚ÄúAm I associating an implied response from others due to a previous experience and therefore not doing enough for the project?‚Äù\nLet me give you some examples of thoughts that may arise on a given project and how you can reframe them in a better way.\nAs you know, in 99.9% of website design projects, a card design is required. It may seem that every possible design ever imagined has been created up to this point ‚Äî a fair reasoning, isn‚Äôt it? However, stifling yourself from the very get-go with this mentality will only serve to produce expected and too-well-known results.\nInstead, you could approach this scenario with the following reframed thought:\nWith this new outlook, you may find yourself digging deeper to pull on creative threads, inevitably resulting in adaptive thinking. A good exercise to promote this is the Crazy 8‚Äôs design exercise. In this format, you can pull forth rapid ideas ‚Äî some good, some not so good ‚Äî and see what sticks. This method is meant to get your brain working through a simple solution by tackling it from multiple angles.\nHere is a real-life example from one of my projects in which I had to explore cards on a deeper level. This client‚Äôs website was primarily made up of cards of varying content and complexity. In the initial stages of design, I worked to define how we could differentiate cards, with prominence in size, imagery, and color, as well as motion and hover effects.\nWhat I landed on was a flexible system that had three tiers and harmonized well together. Knowing they had content that they wanted to be highlighted in a distinctive way, I created a Featured Card and tied it to the brand identity with the cutout shape in the image masking. I also included the glass effect on top to allude to the brand‚Äôs science background and ensure the text was accessible. For the Stacked Card, I introduced a unique hover effect pattern: depending on where the card was in a given grid, it would determine the card‚Äôs hover color. Lastly, for the Horizontal Card, I wanted to create something that had equal emphasis on the image and content and that could also stand alone well, even without an image.\nWhile these cards include what most cards usually do, the approach I took and the visual language used was unique to the client. Instead of working on these too quickly, I ventured down a different path that took a little more thought, which led me to a result that felt in tune with the client‚Äôs needs. It also pushed me outside of what I knew to be the standard, straightforward approach.\nIn most projects, speed is indeed rewarded. It keeps the project within its budget constraints, the project managers are happy, and ultimately, the clients are happy, too. However, what it can end up doing instead is generating errors in the process and hindering design exploration.\nIn this scenario, you can reframe this like so:\nWith this new outlook, you are still looking out for what clients and project teams want (successful outcomes), but you have also enriched the experience by fully executing your design expertise rather than just churning out work.\nOne recommendation here is to always ensure you are communicating with your project team about the budget and timelines. Keeping yourself aware of these key goals will allow you to pace when to push for more exploration and when to dial it in.\nI experienced this on a project of mine when a client‚Äôs piece of feedback seemed clear-cut, but as we entered a third round of design surrounding it, it revealed that it was much more complicated.\nThe client, Cleveland Public Library, had approved a set of wireframes for their homepage that illustrated a very content-heavy hero, but when it came to the design phase, they were delighted by a simpler, more bold design for a block that I created in my preliminary design explorations. At first, I thought it was obvious: let‚Äôs just give them a dialed-in, simple hero design and be done with it. I knew the hours were precious on this project, and I wanted to save time for later on as we got into the finer design details of the pages. However, this was an error on my part.\nAfter taking a step back and removing speed as a key factor during this phase of the project, I found the solution they actually needed: a content-heavy hero showcasing the breadth of their offerings, melded with the boldness of the more pared-down design. And guess what? This variant was approved instantly!\nNow that I have shown you two examples of how to unlearn previous experiences, I hope you can see the value of reframing those moments in order to tap into a more uninhibited and unexplored creative path. Of course, you should expect that it will take several implementations to start feeling the shift towards inherent thinking ‚Äî even I need to remind myself to pause and reframe, like in the last example. Rome wasn‚Äôt built in a day, as they say!\nI challenge you to identify a few moments on a recent project where you could have paused, reflected, and used more creativity. What would you have done differently?\nI know I just talked about unlearning some of our previous experiences to unlock creativity, but what about the ones we may want to tap into to push us even further? Every designer has an array of passions, memories, and experiences that have culminated into what makes us who we are today. We often have a work self ‚Äî professional and poised, and a personal self ‚Äî exploding with hobbies. How can we take those unique facets of our personalities and apply them to our projects?\nCreating connections with projects and clients on a deeper level is a major way to make use of our personal experiences and knowledge. It can help to add inspiration where you otherwise may not have found that same spark on a project or subject matter.\nLet me walk you through what I like to call the Three Connection Paths. I‚Äôll also show you how you can pull from these and apply them to your projects.\nThis connection path is one in which you have overlapping interests with the client or subject matter.\nAn example of this is a client from the video game industry, and you play their video games. Seems like an obvious connection! You can bring in your knowledge and love for the game industry and their work. You could propose easter eggs and tie-ins to their games on their website. It‚Äôs a match made in heaven.\nThis connection path is one in which you cross at a singular point with the client or subject matter.\nAn example of this is a client, which is a major restaurant chain, and you used to work in the food industry. With your background, you understand what it is like to work at a restaurant, so you might suggest what CTA‚Äôs or fun graphics would be important for a staff-centric site.\nThis connection path is one in which you are tethered to the client or subject matter through who you know.\nAn example of this is a client in the engineering field, and one of your family members is an engineer. You can then ask your family members for insights or what would be a good user experience for them on a redesigned website.\nSometimes, you won‚Äôt be so lucky as to align with a client in one of the Three Connection Paths, but you can still find ways to add a layered experience through other means, such as your skillset and research. In the last example, say you know nothing about engineering nor have a connection to someone who does, but you are an excellent copy editor outside of work. You can propose tweaking the verbiage on their hero section to emphasize their goals all the more. This shows care and thoughtfulness, giving the client an experience they are sure to appreciate.\nA real-life example in which I implemented a Direct Connection Path on a project was for Comics Kingdom‚Äôs website redesign. When I was younger, I wanted to be a manga creator, so this client being an intermediary between comic readers and creators resonated with me. Not only that, but I still practice illustration, so I knew I had to bring this skill set to the table, even though it was not part of the original scope of work.\nI allowed myself to lean into that spark I felt. I hand-sketched a few illustrations in Procreate for their website that felt personal and tied to the joy that comics evoke. Beyond that, I found a way to incorporate my knowledge of manga into a background pattern that pulled inspiration from nawa-ami (a traditional cross-hatching style to denote deep thought) and mixed it with the motif of fingerprints ‚Äî the idea of identity and the artist‚Äôs own mark on their work.\nDue to my deep passion, I was able to cultivate an excellent collaborative relationship with the client, which led to a very successful launch and being invited to speak on their podcast. This experience solidified my belief that through tapping into Connection Paths, you can forge not only amazing projects but also partnerships.\nLook at what projects you currently have and see which of the Three Connection Paths you could use to build that bond with the client or the subject matter. If you don‚Äôt see one of the Three Connection Paths aligning, then what skills or research could you bring to the table instead?\nThe last ‚Äî and arguably most important ‚Äî approach to leveling up your projects is taking up your own space. I‚Äôm not referring to physical space like strong-arming those around you. What I‚Äôm referring to is the space in which designers take to be vocal about their design decisions.\nA lot of designers find this practice uncomfortable. Whether it stems from having not been given that space to practice as a beginner designer, higher ranking designers not leaving the room for those less vocal, or even you yourself feeling like someone else might be better suited to talk to a particular point.\nSimilarly, some designers find themselves retreating when receiving feedback. Instead of standing behind the reasoning of their designs or asking follow-up questions, it seems easier to simply go along with the requested change in order to make the client or team member providing the feedback happy. Even if you disagree with the request, does it feel like you need to execute it just because the client ‚Äî or someone you feel outranks you ‚Äî told you to?\nThere is another option, one in which you can mark yourself as the design expert you are and get comfortable in the discomfort.\nIlluminating your opinions and reasoning in conversations is what will get those around you to trust in your decisions. Hiding them away or conceding to client whims isn‚Äôt going to show those around you that you have the knowledge to make the proper recommendations for a project.\nNow, I‚Äôm not saying that you will need to always disagree with the provided feedback to show that you have a backbone. Far from it. I think there is a time and place for when you need to lean into your expertise, and a time and place for when you need to find a middle ground and/or collaborate. Collaborating with coworkers and clients lets them peek into the ‚Äúwhy‚Äù behind the design decisions being made.\nA great example of this is a client questioning you on a particular font size, saying it feels too large and out of place.\nYou have two options:\nIf you have been paying attention thus far, you‚Äôd know that option 2. is the route I would suggest. So, instead of just changing the font size, you should ask for specifics. For example, is the type hierarchy feeling off ‚Äî the relationship of that heading to the body font it is paired with? You can ask if the size feels large in other instances since perhaps this is your H2 font, so it would need to be changed across the board. Calling attention to why you chose this size using data-informed UX design, accessibility, brand, or storytelling reasons all amplify your decision-making skills before the client, so including that information here helps.\nIf, after the discussion, the client still wants to go with changing the font size, at least you have given your reasoning and shown that you didn‚Äôt thoughtlessly make a decision ‚Äî you made the design choice after taking into consideration multiple factors and putting in a lot of thought. Over time, this will build trust in you as the design expert on projects.\nAn example in which I showcased taking up my own space was from a recent project I worked on for Hilton Stories in their collaboration with Wicked. After conceptualizing a grand takeover experience complete with a storytelling undertone, one of the clients wanted to remove the page-loading animation with the idea of having more branded elements elsewhere.\nWhile most of my team was ready to execute this, I read between the lines and realized that we could solve the issue by including clear verbiage of the collaboration on the loading animation as well as adding logos and a video spot to the interior pages. By sticking up for a key piece of my designs, I was able to show that I was aligned with not only my design decisions but the major goals of the project. This solution made the clients happy and allowed for a successful launch with the loading animation that the Fueled + 10up team and I worked so hard on.\nThe next time you receive feedback, pause for a moment. Take in carefully what is being said and ask questions before responding. Analyze if it makes sense to go against the design decisions you made. If it doesn‚Äôt, tell the client why. Have that open dialogue and see where you land. This will be uncomfortable at first, but over time, it will get easier.\nNow that you have learned all about the three approaches, there is nothing stopping you from trialing these on your next project. From unlearning previous experiences through Reframing to tapping into your background with Connection Paths, you can lay the groundwork for how your past can be used to shape your future interactions. When taking up your own space, start small as you begin to advocate for your designs, and always try to connect to the ‚Äúwhys‚Äù so you instill trust in your clients and members of your design team.\nAs Robin Williams so eloquently delivered in the Dead Poets Society, ‚ÄúNo matter what anybody tells you, words and ideas can change the world.‚Äù In this case, you don‚Äôt need to apply it so widely as the entire world, maybe just to your workplace for now."
  },
  {
    "url": "/2024/12/desktop-wallpaper-calendars-january-2025/",
    "title": "New Year, New Hopes, New Dreams (January 2025 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "Dec 31, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "Maybe 2025 has already started as you‚Äôre reading this, maybe you‚Äôre still waiting for the big countdown to begin ‚Äî either way, it‚Äôs never too late or too early for some New Year‚Äôs inspiration! Our new collection of desktop wallpapers has got you covered.",
    "content": "The new year is the perfect occasion to tidy up your desktops and start on a fresh, clean slate. No clutter, just the things you really need and plenty of space for what‚Äôs about to come. So how about some new desktop wallpapers to make the makeover complete and spark your inspiration this January?\nMore than thirteen years ago, we started our monthly wallpapers series to bring you a new collection of beautiful and unique desktop wallpapers every month. And, of course, this month is no exception.\nIn this post, you‚Äôll find January wallpapers to inspire, make you smile, or just to cater for some happy pops of color on a dark winter day. All of them are created with love by artists and designers from across the globe and can be downloaded for free. A big thank you to everyone who shared their designs with us ‚Äî you are truly smashing! Have a happy and healthy 2025, everyone!\nCelebrate Squirrel Appreciation Day!‚ÄúJoin us in honoring our furry little forest friends this Squirrel Appreciation Day! Whether they‚Äôre gathering nuts, building cozy homes, or brightening up winter days with their playful antics, squirrels remind us to treasure nature‚Äôs small wonders. Let‚Äôs show them some love today!‚Äù ‚Äî Designed by PopArt Studio from Serbia.\npreviewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nHappy New Year ‚Äô86Designed by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nWho Wants To Be KingDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nBird Bird Bird Bird‚ÄúJust four birds, ready for winter.‚Äù ‚Äî Designed by Vlad Gerasimov from Georgia.previewwithout calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880\nCheerful Chimes CityDesigned by Design Studio from India.previewwithout calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nA Fresh StartDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nCold‚Ä¶ Penguins!‚ÄúThe new year is here! We waited for it like penguins. We look at the snow and enjoy it! ‚Äî Designed by Veronica Valenzuela from Spain.previewwithout calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nOpen The Doors Of The New Year‚ÄúJanuary is the first month of the year and usually the coldest winter month in the Northern hemisphere. The name of the month of January comes from ‚Äòianua‚Äô, the Latin word for door, so this month denotes the door to the new year and a new beginning. Let‚Äôs open the doors of the new year together and hope it will be the best so far!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBoom!Designed by Elise Vanoorbeek from Belgium.previewwithout calendar: 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nWinter LeavesDesigned by Nathalie Ouederni from France.previewwithout calendar: 320x480, 1024x768, 1280x1024, 1440x900, 1600x1200, 1680x1200, 1920x1200, 2560x1440\nStart Somewhere‚ÄúIf we wait until we‚Äôre ready, we‚Äôll be waiting for the rest of our lives. Start today ‚Äî somewhere, anywhere.‚Äù ‚Äî Designed by Shawna Armstrong from the United States.previewwithout calendar: 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nPeaceful Mountains‚ÄúWhen all the festivities are over, all we want is some peace and rest. That‚Äôs why I made this simple flat art wallpaper with peaceful colors.‚Äù ‚Äî Designed by Jens Gilis from Belgium.previewwithout calendar: 640x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBe Awesome Today‚ÄúA little daily motivation to keep your cool during the month of January.‚Äù ‚Äî Designed by Amalia Van Bloom from the United States.previewwithout calendar: 640x960, 1024x768, 1280x800, 1280x1024, 1440x900, 1920x1200, 2560x1440\nYogabearDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nWinter Getaway‚ÄúWhat could be better, than a change of scene for a week? Even if you are too busy, just think about it.‚Äù ‚Äî Designed by Igor Izhik from Canada.previewwithout calendar: 1024x768, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600\nDon Quijote, Here We Go!‚ÄúThis year we are going to travel through books, and you couldn‚Äôt start with a better one than Don Quijote de la Mancha!‚Äù ‚Äî Designed by Veronica Valenzuela Jimenez from Spain.previewwithout calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nThe Little ParadoxDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nA New Beginning‚ÄúI wanted to do a lettering-based wallpaper because I love lettering. I chose January because for a lot of people the new year is perceived as a new beginning and I wish to make them feel as positive about it as possible! The idea is to make them feel like the new year is (just) the start of something really great.‚Äù ‚Äî Designed by Carolina Sequeira from Portugal.previewwithout calendar: 320x480, 1280x1024, 1680x1050, 2560x1440\nHappy Hot Tea Month‚ÄúYou wake me up to a beautiful day; lift my spirit when I‚Äôm feeling blue. When I‚Äôm home you relieve me of the long day‚Äôs stress. You help me have a good time with my loved ones; give me company when I‚Äôm all alone. You‚Äôre none other than my favourite cup of hot tea.‚Äù ‚Äî Designed by Acodez IT Solutions from India.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nDon‚Äôt Forget Your Vitamins‚ÄúDiscover the seasonal fruits and vegetables. In January: apple and banana enjoying the snow!‚Äù ‚Äî Designed by Vitaminas Design from Spain.previewwithout calendar: 320x480, 1280x800, 1280x1024, 1440x900, 1920x1080, 2560x1440\nDare To Be You‚ÄúThe new year brings new opportunities for each of us to become our true selves. I think that no matter what you are ‚Äî like this little monster ‚Äî you should dare to be the true you without caring what others may think. Happy New Year!‚Äù ‚Äî Designed by Maria Keller from Mexico.previewwithout calendar: 320x480, 640x480, 640x1136, 750x1334, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1242x2208, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1440, 2560x1440, 2880x1800\nAngel In SnowDesigned by Brainer from Ukraine.previewwithout calendar: 800x600, 1024x768, 1152x864, 1280x800, 1280x960, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1260, 1920x1200, 1920x1440\nSnowmanDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nOaken January‚ÄúIn our country, Christmas is celebrated in January when oak branches and leaves are burnt to symbolize the beginning of the new year and new life. It‚Äôs the time when we gather with our families and celebrate the arrival of the new year in a warm and cuddly atmosphere.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nRubber Ducky Day‚ÄúWinter can be such a gloomy time of the year. The sun sets earlier, the wind feels colder, and our heating bills skyrocket. I hope to brighten up your month with my wallpaper for Rubber Ducky Day!‚Äù ‚Äî Designed by Ilya Plyusnin from Belgium.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nThe Early January Bird‚ÄúJanuary is the month of a new beginning, hope, and inspiration. That‚Äôs why it reminds me of an early bird.‚Äù ‚Äî Designed by Zlatina Petrova from Bulgaria.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nA New Start‚ÄúThe new year brings hope, festivity, lots and lots of resolutions, and many more goals that need to be achieved.‚Äù ‚Äî Designed by Damn Perfect from India.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nWolf Month‚ÄúWolf-month (in Dutch ‚Äòwolfsmaand‚Äô) is another name for January.‚Äù ‚Äî Designed by Chiara Faes from Belgium.previewwithout calendar: 640x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2024/11/alternatives-typical-technical-illustrations-data-visualisations/",
    "title": "Alternatives To Typical Technical Illustrations And Data Visualisations",
    "author": "Thomas Bohm",
    "date": "Nov 8, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Data Visualization",
      "UX",
      "Design"
    ],
    "summary": "Thomas Bohm rethinks technical illustrations and data visualizations, sharing interesting and uncommon examples of how to present data and information. Bar graphs and pie charts are great, but there‚Äôs so much more to explore!",
    "content": "Good technical illustrations and data visualisations allow users and clients to, in a manner of speaking, take time out, ponder and look at the information in a really accessible and engaging way. It can obviously also help you communicate certain categories of information and data.\nThe aim of the article is to inspire and show you how, by using different technical illustrations and data visualisations, you can really engage and communicate with your users and do much more good for the surrounding content.\nBelow are interesting and not commonly seen examples of technical illustration and data visualisation, that show data and information. As you know, more commonly seen examples are bar graphs and pie charts, but there is so much more than that!\nSo, keep reading and looking at the following examples, and I will show you some really cool stuff.\nTypically, technical illustration and data visualisations were done using paper, pens, pencils, compasses, and rulers. But now everything is possible ‚Äî you can do analog and digital. Since the mainstream introduction of the internet, around 1997, data (text, numerical, symbol) has flourished, and it has become the current day gold currency. It is easy for anyone to learn who has the software or knows the coding language. And it is much easier to do technical illustrations and data visualisation than in previous years. But that does not always mean that what is done today is better than what was done before.\nThere are some common categories of audiences:\nSara Dholakia in her article ‚ÄúA Guide To Getting Data Visualization Right‚Äù points out the following considerations:\nJust look at what we are more often than not presented with.\nSo, let us dive into some cool examples that you can understand and start using today that will also give your work and content a really cool edge and help it stand out and communicate better.\nIt provides a great way to show relationships and connections between items and different components, and the 3D style adds a lot to the diagram.\nIt‚Äôs an effective way to highlight and select information or data in relation to its surrounding data and information.\nBeing great at showing two categories of information and comparing them horizontally, they are an alternative to typical horizontal or vertical bar graphs.\nThey are an excellent way to enliven overused 2D pie and bar graphs. 3D examples of common graphs give a real sense of quality and depth whilst enhancing the data and information much more than 2D versions.\nThis diagram is a good way to show the progression and the journey of information and data and how they are connected in relation to their data value. It‚Äôs not often seen, but it‚Äôs really cool.\nA stream graph is a great way to show the data and how it relates to the other data ‚Äî much more interesting than just using lines as is typically seen.\nIt provides an excellent way to show a map in a different and more interesting form than the typically seen 2D version. It really gives the map a sense of environment, depth, and atmosphere.\nIt‚Äôs a great way to show the data spatially and how the data value relates, in terms of size, to the rest of the data.\nA waterfall chart is helpful in showing the data and how it relates in a vertical manner to the range of data values.\nIt shows the data against the other data segments and also as a value within a range of data.\nA lollipop chart is an excellent method to demonstrate percentage values in a horizontal manner that also integrates the label and data value well.\nIt‚Äôs an effective way to illustrate data values in terms of size and sub-classification in relation to the surrounding data.\nThere are many options available, including specialized software like Flourish, Tableau, and Klipfolio; familiar tools like Microsoft Word, Excel, or PowerPoint (with redrawing in software like Adobe Illustrator, Affinity Designer, or CorelDRAW); or learning coding languages such as D3, Three.js, P5.js, WebGL, or the Web Audio API, as Frederick O‚ÄôBrien discusses in his article ‚ÄúWeb Design Done Well: Delightful Data Visualization Examples.‚Äù\nBut there is one essential ingredient that you will always need, and that is a mind and vision for technical illustration and data visualisation."
  },
  {
    "url": "/2024/11/bundle-up-and-save/",
    "title": "Bundle Up And Save On Smashing Books And Workshops",
    "author": "The Smashing Team",
    "date": "Nov 12, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Smashing Books",
      "Smashing Workshops"
    ],
    "summary": "It‚Äôs the end of the year, and as we look at our inventory, we thought, ‚ÄúLet‚Äôs help everyone in our community get ready for the year ahead!‚Äù Get friendly pricing on bundles of books and workshops to dive deep into the subjects you care about most. Let‚Äôs bundle up and save!",
    "content": "Earlier this month, we wrapped up our SmashingConfs 2024, and one subject that kept coming up over and over again ‚Äî among attendees, between speakers, and even within the staff ‚Äî was ‚Äúwhat would we like to get better at next year?‚Äù\nIt seems like everyone has a different answer, but one thing is for sure: Smashing can help you with that. üòâ\nGood news for people who love a good value for a friendly price: until Thursday, 5 December, you can save 30% off three or more books and eBooks, 30% off three or more workshops, or get the entire Smashing eBook library for $75. This is a perfect time to set yourself up for a year of learning in 2025.\nOur hardcover books are our editorial flagships. They deliver in-depth knowledge and expertise shared by experts from the industry. No fluff or theory, only practical tips and insights you can apply to your work right away.\nNo matter if you want to complete your existing Smashing book collection or start one from scratch, you can now pick and mix your favorite books and eBooks from our Smashing Books line-up to create a bundle tailored to your needs. Or take a look at our bundle recommendations below for some inspiration.\nBrowse all Smashing Books¬†‚ÜíSave 30% with 3 or more books. No ifs or buts!\nUntil Thursday, 5 December, the 30% book discount will automatically apply to your cart once you add three or more items. Please note that the discount can‚Äôt be combined with other discounts.\nOnce you‚Äôve decided which books should go into your bundle, we‚Äôll pack everything up safely and send the parcel right to your doorstep from our warehouse in Germany. Shipping is free worldwide. Check delivery times.\nWe know decisions can be hard, that‚Äôs why we collected some ideas for themed book bundles to make the choice at least a bit easier. These bundles are perfect if you want to enhance your skills in one particular field.\nYou can click on each book title to jump to the details and add the book to your cart. The discount will be applied during checkout.\nSave 30% on the complete bundle.Regular price (hardcover + PDF, ePUB, Kindle versions): $146.25Bundle price: $102.38\nFront-End Bundle dives deep into the challenges front-end developers face in their work every day ‚Äî whether it‚Äôs performance, TypeScript and Image Optimization. You‚Äôll learn practical strategies to make your workflow more efficient, but also gain precious insights into how teams at Instagram, Shopify, Netflix, eBay, Figma, Spotify tackle common challenges and frustrations.\nSave 30% on the complete bundle.Regular price (hardcover + PDF, ePUB, Kindle versions): $146.25Bundle price: $102.38\nDesign Best Practices Bundle is all about creating respectful, engaging experiences that put your users‚Äô well-being and privacy first. The practical and tactical tips help you encourage users to act ‚Äî without employing dark patterns and manipulative techniques ‚Äî and grow a sustainable digital business that becomes more profitable as a result.\nSave 30% on the complete bundle.Regular price (hardcover + PDF, ePUB, Kindle versions): $144.00Bundle price: $100.80\nA lot of websites these days look rather generic. Our Interface Design Bundle will make you think outside the box, exploring how you can create compelling, effective user experiences, with clear intent and purpose ‚Äî for both desktop and mobile.\nSave 30% on the complete bundle.Regular price (hardcover + PDF, ePUB, Kindle versions): $292.50Bundle price: $204.75\nThe Big Design Bundle shines a light on the fine little details that go into building cohesive, human-centered experiences. Covering everything from design systems to form design patterns, mobile design to UX, and data privacy to ethical design, it provides you with a solid foundation for designing products that stand out from the crowd.\nGet all eBooks for $75. You‚Äôre more of an eBook kind of person? The bundle-up discounts do apply to eBooks, too, of course. Or take a look at our Smashing Library to save even more: It includes 68 eBooks (including all our latest releases) for $75 (PDF, ePUB, and Kindle formats). Perfect to keep all your favorite books close when you‚Äôre on the go.\nReady to dig even deeper? Whether you want to explore design patterns for AI interfaces, learn how to plan a design system, or master the art of storytelling, our online workshops are a friendly way to boost your skills online and learn practical, actionable insights from experts, live.\nTo prepare for the challenges that 2025 might have in store for you, you can now bundle up 3 or more online workshops and save 30% on the total price with code BUNDLEUP. Please note that the discount can‚Äôt be combined with other discounts. Take a look at all our upcoming workshops and start your smashing learning journey this winter.\nCustom Bundles To Fit Your Needs!Do you need a custom bundle? At Smashing, we would love to know how we can help you and your team make the best of 2025. Let‚Äôs think big!\nWe‚Äôd be happy to craft custom bundles that work for you:\nWe are always looking for new ways to support our community. Please contact us if you‚Äôd like us to craft a custom bundle for your needs, or if you have any questions at all. Let‚Äôs have a great year!\nCommunity Matters ‚ù§Ô∏è\nProducing a book or a workshop takes quite a bit of time, and we couldn‚Äôt pull it off without the support of our wonderful community. A huge shout-out to Smashing Members for their kind, ongoing support. üëè Happy learning, everyone!"
  },
  {
    "url": "/2024/11/why-you-speak-events-early-career-professional/",
    "title": "Why You Should Speak At Events As An Early-Career Professional",
    "author": "Victoria Nduka",
    "date": "Nov 22, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Conferences",
      "Career",
      "Events",
      "Inspiration"
    ],
    "summary": "Many talented professionals hold back from speaking at tech events, believing they need years of experience or expert status first. Drawing from her experience as a first-time speaker at WordPress Accessibility Day 2024, Victoria Nduka discusses how speaking at events benefits both individuals and the tech community.",
    "content": "On Thursday, October 10, 2024, I gave my first talk at an international event, the WordPress Accessibility Day (WPAD) 2024. Just a few months before, I was a newcomer to the world of web accessibility. Yet here I was, speaking to an audience of accessibility specialists and advocates, and they were genuinely interested in what I had to share. How did I get here? Most importantly, how can you get here?\nI first learned about web accessibility from contributing to caMicroscope as an Outreachy intern. Outreachy offers internships in open source and open science to people underrepresented in tech within their home countries. caMicroscope is basically an open-source tool for studying and analyzing digital images of body tissues.\nDuring my three-month internship, I worked on enhancing the caMicroscope‚Äôs accessibility. I conducted accessibility audits to identify areas for improvement and fixed several technical issues to make the web app more accessible. Since this was my first exposure to accessibility, I spent a lot of time researching and learning, gradually building a knowledge base that would later inspire my first talk.\nThe more I learned about accessibility, the more I realized how important it is to digital product design and user experience, yet few people seemed to be talking about it. Just before my internship ended, I began searching for accessibility events that I could attend to connect with people in the field. That was how I stumbled on the Call for Proposals (CFP) for WordPress Accessibility Day 2024.\nInitially, I was hesitant to apply. I wondered,\nBut I also thought,\nThis was my experience, my story, and no one could tell it better than me. The CFP also encouraged first-time speakers to submit a proposal. That was an additional motivation. I figured,\nSo, I pushed through my doubts, did extensive research to choose a topic, and finally submitted my proposal.\nWhen I received the email that my proposal was accepted, I was thrilled. But then came the next hurdle ‚Äî preparing the presentation itself. Now, I had to think deeply about my audience: what message I wanted to convey and how to make it engaging and informative. After all, people were going to spend their time listening to me. I wanted to make it worth their while.\nI reworked my slides at least four times. Even the night before my talk, I was still making edits (something I don‚Äôt recommend!). Watching the sessions of speakers who presented before me helped me learn some last-minute tips, but it also led to comparing my slides to theirs, wondering if I was missing something. Up until my talk began, I struggled with imposter syndrome. What if I forgot what I was supposed to say? Or don‚Äôt know how to answer a question that an attendee asks?\nFinally, the moment came. I spent 40 minutes sharing with attendees the importance of manual accessibility testing. Not long into my presentation, I felt my initial anxiety melt away. I was calm and enthusiastic throughout the rest of my talk. It was an amazing experience, one that I‚Äôm grateful for.\nSince then, I‚Äôve submitted another talk proposal to speak at a different conference. While I still have some doubts, they‚Äôre no longer about whether or not I‚Äôm qualified to speak but rather about whether or not my talk will be accepted. I‚Äôve grown since my first talk, and if you‚Äôre considering a similar path, you can too.\nAt every tech event I attend, when the hosts introduce the speakers, the introductions typically go something like the following:\nImpressive. Inspiring. And for a newbie, maybe even intimidating.\nWhen they‚Äôre giving their talk, I often catch myself thinking:\nI was subconsciously beginning to associate ‚Äúspeaker‚Äù with ‚Äúexpert.‚Äù I started believing that to qualify as a speaker, I needed an impressive title, years of experience, or some remarkable achievement under my belt. And I know I‚Äôm not the only one who feels this way.\nWhen I first saw the call for speakers for WordPress Accessibility Day, my immediate reaction was to scroll past it. After all, I had only been working with web accessibility for a short time. Surely, they were looking for seasoned professionals with years of experience, right? Wrong. Had I given in to this misconception, I would have robbed myself of an incredible opportunity for growth.\nIf you‚Äôve ever held back from submitting a talk proposal because you feel you‚Äôre not qualified enough to talk on a subject, here are some tips to help you deal with the imposter syndrome:\nThe reason you feel like an imposter is probably because you‚Äôre cosplaying as an expert that you‚Äôre not (yet), and you‚Äôre afraid people might see through the facade. So, the fear of failing and the pressure to meet expectations weigh you down. Be proud of your novice status. And who said experts make the best speakers? Even the so-called experts get nervous to speak.\nAnother reason you may hold back is because you don‚Äôt have speaking experience. But how do you gain speaking experience? You guessed right ‚Äî by speaking. So, speak. Or at least practice speaking. The more prepared you are, the more confident you‚Äôll feel. Start by presenting to your rubber duck, your pet, a friend, or a family member. Each time you practice, you‚Äôll discover ways to explain concepts more clearly and identify areas where you need to strengthen your understanding. Record yourself and watch it back. Yes, it‚Äôs uncomfortable, but it‚Äôs one of the best ways to improve your delivery and body language.\nYour recent learning experience is actually an advantage. You still remember what it‚Äôs like to struggle with concepts that experts take for granted. This makes you qualified to help others who are just starting. Think about it: Who better to explain the challenges of learning a new technology than someone who just overcame them?\nShift your mindset from ‚ÄúI need to prove I‚Äôm an expert‚Äù to ‚ÄúI want to share what I‚Äôve learned.‚Äù This subtle change removes the pressure of perfection and places the focus where it belongs ‚Äî on helping others. Share your mistakes, your ‚Äúaha‚Äù moments, the resources that helped you. These are often more valuable than polished theory from someone who‚Äôs forgotten what it‚Äôs like to be a beginner.\nI‚Äôm not the first UX designer to dive into accessibility, but out of many contributors who applied to the project, I was the one selected to improve caMicroscope‚Äôs accessibility. That‚Äôs my unique angle. Your background and experience bring a perspective that others can learn from. Don‚Äôt try to compete with comprehensive tutorials or documentation. Instead, share your practical, real-world experience. Focus on sharing:\nConference attendees (and organizers) aren‚Äôt there to judge you or catch you making mistakes. They‚Äôre there to learn, and they want you to succeed. Many will be grateful to hear from someone who can relate to their current experience level. Your vulnerability and openness about being new to the field can actually make your talk more approachable and engaging.\nAs an early-career professional, you bring a fresh, unencumbered viewpoint to the table. The questions you ask and the solutions you propose aren‚Äôt constrained by the ‚Äúway things have always been done.‚Äù\nThis reminds me of the story about the truck that got stuck under a bridge. Experts spent hours trying complex maneuvers to free it until a schoolboy suggested a simple solution ‚Äî deflating the tires. Your recent learning experiences make you uniquely positioned to see solutions that seasoned professionals overlook.\nYou see, innovation often arises from those not bound by conventional thinking. As a newcomer, you‚Äôre more likely to draw parallels from other industries or suggest unconventional approaches that could lead to breakthroughs.\nWhenever I see a call for speakers for an event, I have a habit of checking the speakers‚Äô lineup from past events to see if there‚Äôs anyone like me ‚Äî Nigerian, female, relatively new to tech, young. If I don‚Äôt find anyone similar, I often feel hesitant about submitting a proposal. But if I do, I‚Äôm immediately encouraged to apply.\nYour story, your ideas, your fresh take ‚Äî they could be the solution to someone‚Äôs problem, ignite a new area of exploration, or simply give another budding professional the confidence to pursue their goals. Your journey could be exactly what someone in the audience needs to hear. So, don‚Äôt let imposter syndrome hold you back. The tech community needs your voice.\nBesides the anxiety that comes with speaking, are there benefits that you gain from being a first-time speaker at an event? Short answer: Yes. What are they?\nYou know what they say: If you want to master something, teach it.\nWhen I started preparing for my accessibility talk, I extensively researched not just my topic but also how best to deliver it. I read articles on creating accessible presentations. I was speaking at an accessibility event, after all, so my slides and delivery had to be accessible to all in the audience. The questions from the audience also challenged me to think about accessibility from angles I hadn‚Äôt considered before. Trust me, you‚Äôll learn more preparing for a 30-minute talk than you would in months of regular work.\nRemember that shaky feeling when you first pushed code to production? Speaking at an event is similar ‚Äî terrifying at first but incredibly empowering once you‚Äôve done it. After my first talk, I found that I became more confident in team meetings, more willing to share ideas, and more comfortable with challenging assumptions. There‚Äôs something powerful about standing in front of a room (virtual or physical) and sharing your knowledge that makes other professional challenges seem less daunting.\nNetworking hits differently when you‚Äôre a speaker. Before my talk, I was just another attendee sending connection requests. After? Industry leaders were reaching out to ME. I remember checking my LinkedIn notifications after my accessibility talk and seeing connection requests from people I‚Äôd only dreamed of connecting with.\nNow, instead of trying to start conversations at networking sessions (which, let‚Äôs be honest, can be awkward), your talk becomes the conversation starter. People approach you with genuine interest in your perspective, and suddenly, you‚Äôre having meaningful discussions about your passion with folks who share it.\nWant to know what sets you apart from other candidates with similar years of experience? Speaking credentials. Imagine listing ‚ÄúSpeaker at WordPress Accessibility Day‚Äù on my resume. It shows initiative and expertise that goes beyond day-to-day work activities.\nPlus, conferences often give speakers free or discounted tickets to future events; that‚Äôs premium access to learning and networking opportunities that might otherwise be out of reach for early-career professionals. That‚Äôs how you get to ‚Äúthat level‚Äù.\nOften, especially with virtual conferences, a recording of the event is uploaded on YouTube. That means anyone searching the web for a topic related to your talk will find your talk in the search results. Your 30-minute presentation becomes a permanent resource in the vast library of tech knowledge. I can‚Äôt count the number of times a conference video addressed a concern I had or served as a resource for a talk or an article I was working on. Now, I get to be on the other side, helping someone else figure things out.\nAnd here‚Äôs another bonus: those YouTube videos also work as a portfolio of sorts. So, not only are you contributing to the community, but you‚Äôre also building a body of work that showcases your expertise and speaking skills.\nHere‚Äôs something people don‚Äôt talk about enough: many conferences pay their speakers or at least cover travel expenses. Not only are you learning and growing, but you might also get paid for it! Even if the event doesn‚Äôt offer payment, the experience itself is invaluable for your portfolio.\nEvery time you speak, you‚Äôre building your personal brand. Your talks become content you can share on social media, add to your portfolio, and reference in job interviews. Imagine a recruiter saying to you, ‚ÄúI remember you from your talk at a so-and-so conference.‚Äù In an industry as competitive as tech, this kind of recognition is invaluable.\nI found this article by Andy Budd on how to become a better speaker at conferences very helpful when I was preparing for my talk. In addition to his expert advice, here are a few tips I‚Äôd like to share from my own experience as a first-time speaker:\nWhen selecting a topic, pick something you‚Äôre genuinely passionate about. Your enthusiasm will shine through your presentation and captivate the audience.\nTopics like these, drawn from your personal experiences, make for compelling talk ideas.\nHere‚Äôs a hack I‚Äôve used to uncover potential speaking ideas: instead of racking your brain when a call for proposals goes out, stay alert for inspiration in your day-to-day activities. As you go about your work or scroll through social media, jot down any concepts that pique your curiosity. That seemingly mundane task you were performing when the idea struck could serve as a fascinating hook for your presentation.\nOnce you‚Äôve settled on a topic, it‚Äôs time to dive deep into research and practice. Spend time mastering the subject matter from every angle so you can speak with authority. If you followed tip no. 1 (choose a topic you‚Äôre passionate about and are drawing from your personal experience), you are already halfway prepared.\nBut don‚Äôt stop there. Rehearse your talk multiple times, refining your delivery and transitions until you feel confident. Watch recordings of similar presentations and critically analyze what worked well and where there‚Äôs room for improvement. How did the speakers engage the audience? Were there any areas that could have been explained better? Studying successful talks will help you identify ways to elevate your own performance.\nA speaking engagement is a conversation, not a monologue. Encourage questions and discussion throughout your talk. Be responsive to the audience‚Äôs needs and interests. If you notice puzzled expressions or hesitant body language, pause to clarify or rephrase. Making that personal connection will keep people invested and eager to learn from you.\nIf the prospect of speaking in front of a live audience makes you nervous, consider starting with a virtual event. The online format can feel more approachable since you‚Äôll be delivering the talk from the comfort of your home, and you‚Äôll have the flexibility to reference notes or prompts without the audience noticing.\nWhen I was preparing my talk, I spent hours on YouTube searching for talks by people who shared my background. I was particularly interested in their early speaking appearances, so I‚Äôd scroll through their video history to find their first-ever talks.\nThese speakers weren‚Äôt polished professionals at the time, and that‚Äôs exactly what made their talks valuable to me. Watching them helped me realize that perfection isn‚Äôt the goal. I studied their presentations carefully, noted what worked well and what could be improved, and used these insights to strengthen my own talk.\nIf you‚Äôre more outgoing than I am, consider reaching out directly to other new speakers in your community. You can find them on Twitter, LinkedIn, or at local tech meetups. Building a support system of people who understand exactly what you‚Äôre going through can be incredibly reassuring. You can practice your talks together and provide feedback to each other.\nFinally, don‚Äôt be afraid to let your authentic self shine through. Share personal anecdotes, tell jokes, discuss the challenges you faced, and be vulnerable about your own learning journey.\nYour honesty and humility will resonate far more than a polished, impersonal presentation. Remember, the audience wants to connect with you, not just your expertise.\nIn retrospect, I‚Äôm glad that I pushed past my initial doubts and applied to speak at WordPress Accessibility Day. It was a transformative experience that has accelerated my growth in the field and connected me with an incredible community.\nTo all the newcomers reading this:\nSo, the next time you see a call for speakers, don‚Äôt scroll past it. Take that leap. Apply to speak. Share your knowledge. You never know who you might inspire or what doors you might open for yourself and for others.\nRemember, every expert was once a beginner. I hope you‚Äôre inspired to take the stage and let your voice be heard."
  },
  {
    "url": "/2024/11/the-hype-around-signals/",
    "title": "The Hype Around Signals",
    "author": "Atila Fassina",
    "date": "Nov 27, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Coding",
      "Techniques",
      "UI"
    ],
    "summary": "From KnockoutJS to modern UI libraries like SolidJS, Vue.js, and Svelte, signals revolutionized how we think about reactivity in UIs. Here‚Äôs a deep dive into their history and impact by Atila Fassina.",
    "content": "The groundwork for what we call today ‚Äúsignals‚Äù dates as early as the 1970s. Based on this work, they became popular with different fields of computer science, defining them more specifically around the 90s and the early 2000s.\nIn Web Development, they first made a run for it with KnockoutJS, and shortly after, signals took a backseat in (most of) our brains. Some years ago, multiple similar implementations came to be.\nWith different names and implementation details, those approaches are similar enough to be wrapped in a category we know today as Fine-Grained Reactivity, even if they have different levels of ‚Äúfine‚Äù x ‚Äúcoarse‚Äù updates ‚Äî we‚Äôll get more into what this means soon enough.\nTo summarize the history: Even being an older technology, signals started a revolution in how we thought about interactivity and data in our UIs at the time. And since then, every UI library (SolidJS, Marko, Vue.js, Qwik, Angular, Svelte, Wiz, Preact, etc) has adopted some kind of implementation of them (except for React).\nTypically, a signal is composed of an accessor (getter) and a setter. The setter establishes an update to the value held by the signal and triggers all dependent effects. While an accessor pulls the value from the source and is run by effects every time a change happens upstream.\nIn order to understand the reason for that, we need to dig a little deeper into what API Architectures and Fine-Grained Reactivity actually mean.\nThere are two basic ways of defining systems based on how they handle their data. Each of these approaches has its pros and cons.\nPull systems need to handle polling or some other way of maintaining their data up-to-date. They also need to guarantee that all consumers of the data get torn down and recreated once new data arrives to avoid state tearing.\nPush systems don‚Äôt need to worry about maintaining their data up-to-date. Nevertheless, the source is unaware of whether the consumer is ready to receive the updates. This can cause backpressure. A data source may send too many updates in a shorter amount of time than the consumer is capable of handling. If the update flux is too intense for the receiver, it can cause loss of data packages (leading to state tearing once again) and, in more serious cases, even crash the client.\nIn pull systems, the accepted tradeoff is that data is unaware of where it‚Äôs being used; this causes the receiving end to create precautions around maintaining all their components up-to-date. That‚Äôs how systems like React work with their teardown/re-render mechanism around updates and reconciliation.\nIn push systems, the accepted tradeoff is that the receiving end needs to be able to deal with the update stream in a way that won‚Äôt cause it to crash while maintaining all consuming nodes in a synchronized state. In web development, RxJS is the most popular example of a push system.\nThe attentive reader may have noticed the tradeoffs on each system are at the opposite ends of the spectrum: while pull systems are good at scheduling the updates efficiently, in push architectures, the data knows where it‚Äôs being used ‚Äî allows for more granular control. That‚Äôs what makes a great opportunity for a hybrid model.\nIn Push-Pull systems, the state has a list of subscribers, which can then trigger for re-fetching data once there is an update. The way it differs from traditional push is that the update itself isn‚Äôt sent to the subscribers ‚Äî just a notification that they‚Äôre now stale.\nOnce the subscriber is aware its current state has become stale, it will then fetch the new data at a proper time, avoiding any kind of backpressure and behaving similarly to the pull mechanism. The difference is that this only happens when the subscriber is certain there is new data to be fetched.\nWe call these data signals, and the way those subscribers are triggered to update are called effects. Not to confuse with useEffect, which is a similar name for a completely different thing.\nOnce we establish the two-way interaction between the data source and data consumer, we will have a reactive system.\nNow, to make it fine-grained there are two fundamental requirements that need to be met:\nTo really understand how signals can achieve high levels of efficiency, one needs to understand what it means to have an accessor. In broad strokes, they behave as getter functions. Having an accessor means the value does not exist within the boundaries of our component ‚Äî what our templates receive is a getter for that value, and every time their effects run, they will bring an up-to-date new value. This is why signals are functions and not simple variables. For example, in Solid:\nThe part that is relevant to performance (and efficiency) in the snippet above is that considering signal() is a getter, it does not need to re-run the whole ReactiveComponent() function to update the rendered artifact; only the signal is re-run, guaranteeing no extra computation will run.\nNon-reactive systems avoid intermediary states by having a teardown/re-render mechanism. They toss away the artifacts with possibly stale data and recreate everything from scratch. That works well and consistently but at the expense of efficiency.\nIn order to understand how reactive systems handle this problem, we need to talk about the Diamond Challenge. This is a quick problem to describe but a tough one to solve. Take a look at the diagram below:\nPay attention to the E node. It depends on D and B, but only D depends on C.\nIf your reactive system is too eager to update, it can receive the update from B while D is still stale. That will cause E to show an intermediary state that should not exist.\nIt‚Äôs easy and intuitive to have A trigger its children for updates as soon as new data arrives and let it cascade down. But if this happens, E receives the data from B while D is stale. If B is able to trigger an update from E, E will show an intermediate state.\nEach implementation adopts different update strategies to solve this challenge. They can be grouped into two categories:\nAfter this dive into what fine-grained reactivity means, it‚Äôs time to take a step back and look at our websites and apps. Let‚Äôs analyze what it means to our daily work.\nWhen the code we wrote is easier to reason about, we can then focus on the things that really matter: the features we deliver to our users. Naturally, tools that require less work to operate will deliver less maintenance and overhead for the craftsperson.\nA system that is glitch-free and efficient by default will get out of the developer‚Äôs way when it‚Äôs time to build with it. It will also enforce a higher connection to the platform via a thinner abstraction layer.\nWhen it comes to Developer Experience, there is also something to be said about known territory. People are more productive within the mental models and paradigms they are used to. Naturally, solutions that have been around for longer and have solved a larger quantity of challenges are easier to work with, but that is at odds with innovation. It was a cognitive exercise when JSX came around and replaced imperative DOM updates with jQuery. In the same way, a new paradigm to handle rendering will cause a similar discomfort until it becomes common.\nWe will talk further about this in the next article, where we‚Äôre looking more closely into different implementations of signals (lazy, eager, hybrid), scheduled updates, interacting with the DOM, and debugging your own code!\nMeanwhile, you can find me in the comments section below, on ùïè (Twitter), LinkedIn, BlueSky, or even youtube. I‚Äôm always happy to chat, and if you tell me what you want to know, I‚Äôll make sure to include it in the next article! See ya!"
  },
  {
    "url": "/2024/11/why-optimizing-lighthouse-score-not-enough-fast-website/",
    "title": "Why Optimizing Your Lighthouse Score Is Not Enough For A Fast Website",
    "author": "Geoff Graham",
    "date": "Nov 5, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Performance",
      "Optimization",
      "Core Web Vitals",
      "Tools"
    ],
    "summary": "Feeling good with your Lighthouse score of 100%? You should! But you should also know that you‚Äôre only looking at part of the performance picture. Learn how Lighthouse scores are measured differently than other tools, the impact that has on measuring performance metrics, and why you need real-user monitoring for a complete picture.",
    "content": "We‚Äôve all had that moment. You‚Äôre optimizing the performance of some website, scrutinizing every millisecond it takes for the current page to load. You‚Äôve fired up Google Lighthouse from Chrome‚Äôs DevTools because everyone and their uncle uses it to evaluate performance.\nAfter running your 151st report and completing all of the recommended improvements, you experience nirvana: a perfect 100% performance score!\nTime to pat yourself on the back for a job well done. Maybe you can use this to get that pay raise you‚Äôve been wanting! Except, don‚Äôt ‚Äî at least not using Google Lighthouse as your sole proof. I know a perfect score produces all kinds of good feelings. That‚Äôs what we‚Äôre aiming for, after all!\nGoogle Lighthouse is merely one tool in a complete performance toolkit. What it‚Äôs not is a complete picture of how your website performs in the real world. Sure, we can glean plenty of insights about a site‚Äôs performance and even spot issues that ought to be addressed to speed things up. But again, it‚Äôs an incomplete picture.\nI hear other developers boasting about perfect Lighthouse scores and see the screenshots published all over socials. Hey, I just did that myself in the introduction of this article!\nOpen DevTools, click the Lighthouse tab, and generate the report! There are even many ways we can configure Lighthouse to measure performance in simulated situations, such as slow internet connection speeds or creating separate reports for mobile and desktop. It‚Äôs a very powerful tool for something that comes baked into a free browser. It‚Äôs also baked right into Google‚Äôs PageSpeed Insights tool!\nAnd it‚Äôs fast. Run a report in Lighthouse, and you‚Äôll get something back in about 10-15 seconds. Try running reports with other tools, and you‚Äôll find yourself refilling your coffee, hitting the bathroom, and maybe checking your email (in varying order) while waiting for the results. There‚Äôs a good reason for that, but all I want to call out is that Google Lighthouse is lightning fast as far as performance reporting goes.\nTo recap: Lighthouse is great at many things!\nAnd what about that bright and lovely animated green score ‚Äî who doesn‚Äôt love that?!\nOK, that‚Äôs the rosy side of Lighthouse reports. It‚Äôs only fair to highlight its limitations as well. This isn‚Äôt to dissuade you or anyone else from using Lighthouse, but more of a heads-up that your score may not perfectly reflect reality ‚Äî or even match the scores you‚Äôd get in other tools, including Google‚Äôs own PageSpeed Insights.\nNot all data is created equal in capital Web Performance. It‚Äôs important to know this because data represents assumptions that reporting tools make when evaluating performance metrics.\nThe data Lighthouse relies on for its reporting is called simulated data. You might already have a solid guess at what that means: it‚Äôs synthetic data. Now, before kicking simulated data in the knees for not being ‚Äúreal‚Äù data, know that it‚Äôs the reason Lighthouse is super fast.\nYou know how there‚Äôs a setting to ‚Äúthrottle‚Äù the internet connection speed? That simulates different conditions that either slow down or speed up the connection speed, something that you configure directly in Lighthouse. By default, Lighthouse collects data on a fast connection, but we can configure it to something slower to gain insights on slow page loads. But beware! Lighthouse then estimates how quickly the page would have loaded on a different connection.\nDebugBear founder Matt Zeunert outlines how data runs in a simulated throttling environment, explaining how Lighthouse uses ‚Äúoptimistic‚Äù and ‚Äúpessimistic‚Äù averages for making conclusions:\nAnd again, the environment is a configuration, not reality. It‚Äôs unlikely that your throttled conditions match the connection speeds of an average real user on the website, as they may have a faster network connection or run on a slower CPU. What Lighthouse provides is more like ‚Äúon-demand‚Äù testing that‚Äôs immediately available.\nThat makes simulated data great for running tests quickly and under certain artificially sweetened conditions. However, it sacrifices accuracy by making assumptions about the connection speeds of site visitors and averages things in a way that divorces it from reality.\nWhile simulated throttling is the default in Lighthouse, it also supports more realistic throttling methods. Running those tests will take more time but give you more accurate data. The easiest way to run Lighthouse with more realistic settings is using an online tool like the DebugBear website speed test or WebPageTest.\nThese Core Web Vitals everyone talks about are Google‚Äôs standard metrics for measuring performance. They go beyond simple ‚ÄúYour page loaded in X seconds‚Äù reports by looking at a slew of more pertinent details that are diagnostic of how the page loads, resources that might be blocking other resources, slow user interactions, and how much the page shifts around from loading resources and content. Zeunert has another great post here on Smashing Magazine that discusses each metric in detail.\nThe main point here is that the simulated data Lighthouse produces may (and often does) differ from performance metrics from other tools. I spent a good deal explaining this in another article. The gist of it is that Lighthouse scores do not impact Core Web Vitals data. The reason for that is Core Web Vitals relies on data about real users pulled from the monthly-updated Chrome User Experience (CrUX) report. While CrUX data may be limited by how recently the data was pulled, it is a more accurate reflection of user behaviors and browsing conditions than the simulated data in Lighthouse.\nThe ultimate point I‚Äôm getting at is that Lighthouse is simply ineffective at measuring Core Web Vitals performance metrics. Here‚Äôs how I explain it in my bespoke article:\nI emphasized the important part. In real life, users are likely to have more than one experience on a particular page. It‚Äôs not as though you navigate to a site, let it load, sit there, and then close the page; you‚Äôre more likely to do something on that page. And for a Core Web Vital metric that looks for slow paint in response to user input ‚Äî namely, Interaction to Next Paint (INP) ‚Äî there‚Äôs no way for Lighthouse to measure that at all!\nIt‚Äôs the same deal for a metric like Cumulative Layout Shift (CLS) that measures the ‚Äúvisible stability‚Äù of a page layout because layout shifts often happen lower on the page after a user has scrolled down. If Lighthouse relied on CrUX data (which it doesn‚Äôt), then it would be able to make assumptions based on real users who interact with the page and can experience CLS. Instead, Lighthouse waits patiently for the full page load and never interacts with parts of the page, thus having no way of knowing anything about CLS.\nThat‚Äôs what I want you to walk away with at the end of the day. A Lighthouse report is incredibly good at producing reports quickly, thanks to the simulated data it uses. In that sense, I‚Äôd say that Lighthouse is a handy ‚Äúgut check‚Äù and maybe even a first step to identifying opportunities to optimize performance.\nBut a complete picture, it‚Äôs not. For that, what we‚Äôd want is a tool that leans on real user data. Tools that integrate CrUX data are pretty good there. But again, that data is pulled every month (28 days to be exact) so it may not reflect the most recent user behaviors and interactions, although it is updated daily on a rolling basis and it is indeed possible to query historical records for larger sample sizes.\nEven better is using a tool that monitors users in real-time.\nI‚Äôve written about using the Performance API in JavaScript to evaluate custom and Core Web Vitals metrics, so it‚Äôs possible to roll that on your own. But there are plenty of existing services out there that do this for you, complete with visualizations, historical records, and true real-time user monitoring (often abbreviated as RUM). What services? Well, DebugBear is a great place to start. I cited Matt Zeunert earlier, and DebugBear is his product.\nSo, if what you want is a complete picture of your site‚Äôs performance, go ahead and start with Lighthouse. But don‚Äôt stop there because you‚Äôre only seeing part of the picture. You‚Äôll want to augment your findings and diagnose performance with real-user monitoring for the most complete, accurate picture."
  },
  {
    "url": "/2024/10/css-min-all-the-things/",
    "title": "CSS min() All The Things",
    "author": "Victor Ayomipo",
    "date": "Oct 17, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS",
      "Tools",
      "Techniques"
    ],
    "summary": "Victor Ayomipo experiments with the CSS min() function, exploring its flexibility with different units to determine if it is the be-all, end-all for responsiveness. Discover the cautions he highlights against dogmatic approaches to web design based on his findings.",
    "content": "Did you see this post that Chris Coyier published back in August? He experimented with CSS container query units, going all in and using them for every single numeric value in a demo he put together. And the result was‚Ä¶ not too bad, actually.\nWhat I found interesting about this is how it demonstrates the complexity of sizing things. We‚Äôre constrained to absolute and relative units in CSS, so we‚Äôre either stuck at a specific size (e.g., px) or computing the size based on sizing declared on another element (e.g., %, em, rem, vw, vh, and so on). Both come with compromises, so it‚Äôs not like there is a ‚Äúcorrect‚Äù way to go about things ‚Äî it‚Äôs about the element‚Äôs context ‚Äî and leaning heavily in any one direction doesn‚Äôt remedy that.\nI thought I‚Äôd try my own experiment but with the CSS min() function instead of container query units. Why? Well, first off, we can supply the function with any type of length unit we want, which makes the approach a little more flexible than working with one type of unit. But the real reason I wanted to do this is personal interest more than anything else.\nI won‚Äôt make you wait for the end to see how my min() experiment went:\nTaking website responsiveness to a whole new level üåê pic.twitter.com/pKmHl5d0Dy‚Äî Vayo (@vayospot) March 1, 2023\n\nWe‚Äôll talk about that more after we walk through the details.\nThe min() function takes two values and applies the smallest one, whichever one happens to be in the element‚Äôs context. For example, we can say we want an element to be as wide as 50% of whatever container it is in. And if 50% is greater than, say 200px, cap the width there instead.\nSo, min() is sort of like container query units in the sense that it is aware of how much available space it has in its container. But it‚Äôs different in that min() isn‚Äôt querying its container dimensions to compute the final value. We supply it with two acceptable lengths, and it determines which is best given the context. That makes min() (and max() for that matter) a useful tool for responsive layouts that adapt to the viewport‚Äôs size. It uses conditional logic to determine the ‚Äúbest‚Äù match, which means it can help adapt layouts without needing to reach for CSS media queries.\nThe difference between min() and @media in that example is that we‚Äôre telling the browser to set the element‚Äôs width to 50% at a specific breakpoint of 600px. With min(), it switches things up automatically as the amount of available space changes, whatever viewport size that happens to be.\nWhen I use the min(), I think of it as having the ability to make smart decisions based on context. We don‚Äôt have to do the thinking or calculations to determine which value is used. However, using min() coupled with just any CSS unit isn‚Äôt enough. For instance, relative units work better for responsiveness than absolute units. You might even think of min() as setting a maximum value in that it never goes below the first value but also caps itself at the second value.\nI mentioned earlier that we could use any type of unit in min(). Let‚Äôs take the same approach that Chris did and lean heavily into a type of unit to see how min() behaves when it is used exclusively for a responsive layout. Specifically, we‚Äôll use viewport units as they are directly relative to the size of the viewport.\nNow, there are different flavors of viewport units. We can use the viewport‚Äôs width (vw) and height (vh). We also have the vmin and vmax units that are slightly more intelligent in that they evaluate an element‚Äôs width and height and apply either the smaller (vmin) or larger (vmax) of the two. So, if we declare 100vmax on an element, and that element is 500px wide by 250px tall, the unit computes to 500px.\nThat is how I am approaching this experiment. What happens if we eschew media queries in favor of only using min() to establish a responsive layout and lean into viewport units to make it happen? We‚Äôll take it one piece at a time.\nThere are various approaches for responsive type. Media queries are quickly becoming the ‚Äúold school‚Äù way of doing it:\nSure, this works, but what happens when the user uses a 4K monitor? Or a foldable phone? There are other tried and true approaches; in fact, clamp() is the prevailing go-to. But we‚Äôre leaning all-in on min(). As it happens, just one line of code is all we need to wipe out all of those media queries, substantially reducing our code:\nI‚Äôll walk you through those values‚Ä¶\nAnd speaking of how flexible the min() approach is, it can restrict how far the text grows. For example, we can cap this at a maximum font-size equal to 2rem as a third function parameter:\nThis isn‚Äôt a silver bullet tactic. I‚Äôd say it‚Äôs probably best used for body text, like paragraphs. We might want to adjust things a smidge for headings, e.g., <h1>:\nWe‚Äôve bumped up the minimum size from 6vmin to 7.5vmin so that it stays larger than the body text at any viewport size. Also, in the calc(), the base size is now 2rem, which is smaller than the default UA styles for <h1>. We‚Äôre using 1.2vmax as the multiplier this time, meaning it grows more than the body text, which is multiplied by a smaller value, .023vmax.\nThis works for me. You can always tweak these values and see which works best for your use. Whatever the case, the font-size for this experiment is completely fluid and completely based on the min() function, adhering to my self-imposed constraint.\nSpacing is a big part of layout, responsive or not. We need margin and padding to properly situate elements alongside other elements and give them breathing room, both inside and outside their box.\nWe‚Äôre going all-in with min() for this, too. We could use absolute units, like pixels, but those aren‚Äôt exactly responsive.\nmin() can combine relative and absolute units so they are more effective. Let‚Äôs pair vmin with px this time:\n10vmin is likely to be smaller than 30px when viewed on a small viewport. That‚Äôs why I‚Äôm allowing the margin to shrink dynamically this time around. As the viewport size increases, whereby 10vmin exceeds 30px, min() caps the value at 30px, going no higher than that.\nNotice, too, that I didn‚Äôt reach for calc() this time. Margins don‚Äôt really need to grow indefinitely with screen size, as too much spacing between containers or elements generally looks awkward on larger screens. This concept also works extremely well for padding, but we don‚Äôt have to go there. Instead, it might be better to stick with a single unit, preferably em, since it is relative to the element‚Äôs font-size. We can essentially ‚Äúpass‚Äù the work that min() is doing on the font-size to the margin and padding properties because of that.\nNow, padding scales with the font-size, which is powered by min().\nSetting width for a responsive design doesn‚Äôt have to be complicated, right? We could simply use a single percentage or viewport unit value to specify how much available horizontal space we want to take up, and the element will adjust accordingly. Though, container query units could be a happy path outside of this experiment.\nBut we‚Äôre min() all the way!\nmin() comes in handy when setting constraints on how much an element responds to changes. We can set an upper limit of 650px and, if the computed width tries to go larger, have the element settle at a full width of 100%:\nThings get interesting with text width. When the width of a text box is too long, it becomes uncomfortable to read through the texts. There are competing theories about how many characters per line of text is best for an optimal reading experience. For the sake of argument, let‚Äôs say that number should be between 50-75 characters. In other words, we ought to pack no more than 75 characters on a line, and we can do that with the ch unit, which is based on the 0 character‚Äôs size for whatever font is in use.\nThis code basically says: get as wide as needed but never wider than 75 characters.\nOver time, with a lot of tweaking and modifying of values, I have drafted a list of pre-defined values that I find work well for responsively styling different properties:\nThis is how I approached my experiment because it helps me know what to reach for in a given situation:\nThere we go! We have a heading that scales flawlessly, a container that‚Äôs responsive and never too wide, and a grid with dynamic spacing ‚Äî all without a single media query. The --size- properties declared in the variable list are the most versatile, as they can be used for properties that require scaling, e.g., margins, paddings, and so on.\nI shared a video of the result, but here‚Äôs a link to the demo.\nSo, is min() the be-all, end-all for responsiveness? Absolutely not. Neither is a diet consisting entirely of container query units. I mean, it‚Äôs cool that we can scale an entire webpage like this, but the web is never a one-size-fits-all beanie.\nIf anything, I think this and what Chris demoed are warnings against dogmatic approaches to web design as a whole, not solely unique to responsive design. CSS features, including length units and functions, are tools in a larger virtual toolshed. Rather than getting too cozy with one feature or technique, explore the shed because you might find a better tool for the job."
  },
  {
    "url": "/2024/11/open-source-meets-design-tooling-penpot/",
    "title": "Open-Source Meets Design Tooling With Penpot",
    "author": "Atila Fassina",
    "date": "Nov 14, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Workflow",
      "Plugins",
      "Tools",
      "UI"
    ],
    "summary": "Penpot helps designers and developers work better together by offering a free, open-source design tool based on open web standards. Today, let‚Äôs explore its newly released Penpot Plugin System. So now, if there‚Äôs a functionality missing, you don‚Äôt need to jump into the code base straight away; you can create a plugin to achieve what you need. And you can even serve it from localhost!",
    "content": "Penpot is a free, open-source design tool that allows true collaboration between designers and developers. Designers can create interactive prototypes and design systems at scale, while developers enjoy ready-to-use code and make their workflow easy and fast because it‚Äôs built with web technologies, works in the browser, and has already passed 33K starts on GitHub.\nThe UI feels intuitive and makes it easy to get things done, even for someone who‚Äôs not a designer (guilty as charged!). You can get things done in the same way and with the same quality as with other more popular and closed-source tools like Figma.\nAs someone who works with commercial open-source on my day-to-day, I strongly believe in it as a way to be closer to your users and unlock the next level of delivery. Being open-source creates a whole new level of accountability and flexibility for a tool.\nDevelopers are a different breed of user. When we hit a quirk or a gap in the UX, our first instinct is to play detective and figure out why that pattern stuck out as a sore thumb to what we‚Äôve been doing. When the code is open-source, it‚Äôs not unusual for us to jump into the source and create an issue with a proposal on how to solve it already. At least, that‚Äôs the dream.\nOn top of that, being open-source allows you and your team to self-host, giving you that extra layer of privacy and control, or at least a more cost-effective solution if you have the time and skills to DYI it all.\nWhen the cards are played right, and the team is able to afford the long-term benefits, commercial open-source is a win-win strategy.\nTalking about the extensibility of open-source, Penpot has the PenpotHub the home for open-source templates and the newly released plugin gallery. So now, if there‚Äôs a functionality missing, you don‚Äôt need to jump into the code-base straightaway ‚Äî you can create a plugin to achieve what you need. And you can even serve it from localhost!\nWhen it comes to the plugins, creating one is extremely ergonomic. First, there are already set templates for a few frameworks, and I created one for SolidJS in this PR ‚Äî the power of open-source!\nWhen using Vite, plugins are Single-Page Applications; if you have ever built a Hello World app with Vite, you have what it takes to create a plugin. On top of that, the Penpot team has a few packages that can give you a headstart in the process:\nThat will allow you to import with a CSS loader or a CSS import from @penpot/plugin-styles/styles.css. The JavaScript API is available through the window object, but if your plugin is in TypeScript, you need to teach it:\nWith those types in your node_modules, you can pop-up the tsconfig.json and add the types to the compilerOptions.\nAnd there you are, now, the Language Service Provider in your editor and the TypeScript Compiler will accept that penpot is a valid namespace, and you‚Äôll have auto-completion for the Penpot APIs throughout your entire project. For example, defining your plugin will look like the following:\nThe last step is to define a plugin manifest in a manifest.json file and make sure it‚Äôs in the outpot directory from Vite. The manifest will indicate where each asset is and what permissions your plugin requires to work:\nOnce the initial setup is done, the communication between the Penpot API and the plugin interface is done with a bidirectional messaging system, not so different than what you‚Äôd do with a Web-Worker.\nSo, to send a message from your plugin to the Penpot API, you can do the following:\nAnd to receive it back, you need to add an event listener to the window object (the top-level scope) of your plugin:\nA quick performance tip: If you‚Äôre creating a more complex plugin with different views and perhaps even routes, you need to have a cleanup logic. Most frameworks provide decent ergonomics to do that; for example, React does it via their return statements.\nAnd Solid has onMount and onCleanup helpers for it:\nOr with the @solid-primitive/event-listener helper library, so it will be automatically disposed:\nIn the official documentation, there‚Äôs a step-by-step guide that will walk you through the process of creating, testing, and publishing your plugin. It will even help you out.\nSo, what are you waiting for?\nWell, maybe you‚Äôre waiting for a push of motivation. The Penpot team thought of that, which is why they‚Äôre starting a Plugin Contest!\nFor this contest, they want a fully functional plugin; it must be open-source and include comprehensive documentation. Detailing its features, installation, and usage. The first prize is US$ 1000, and the criteria are innovation, functionality, usability, performance, and code quality. The contest will run from November 15th to December 15th.\nIf you decide to build a plugin, I‚Äôd love to know what you‚Äôre building and what stack you chose. Please let me know in the comments below or on BlueSky!"
  },
  {
    "url": "/2024/10/designing-for-gen-z/",
    "title": "Designing For Gen Z: Expectations And UX Guidelines",
    "author": "Vitaly Friedman",
    "date": "Oct 30, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Design",
      "UX"
    ],
    "summary": "There are many myths revolving around Gen Z and how they use tech. Time to take a look at actual behavior patterns that go beyond heavy use of social media. Part of Smart Interface Design Patterns by yours truly.",
    "content": "Every generation is different in very unique ways, with different habits, views, standards, and expectations. So when designing for Gen Z, what do we need to keep in mind? Let‚Äôs take a closer look at Gen Z, how they use tech, and why it might be a good idea to ignore common design advice and do the opposite of what is usually recommended instead.\nThis article is part of our ongoing series on UX. You can find more details on design patterns and UX strategy in Smart Interface Design Patterns¬†üç£ ‚Äî with live UX training coming up soon. Free preview.\nWhen we talk about Generation Z, we usually refer to people born between 1995 and 2010. Of course making universal statements about a cohort where some are adults in their late 20s and others are school students is at best ineffective and at worst wrong ‚Äî yet there are some attributes that stand out compared to earlier generations.\nGen Z is the most diverse generation in terms of race, ethnicity, and identity. Research shows that young people today are caring and proactive, and far from being ‚Äúslow, passive and mindless‚Äù as they are often described. In fact, they are willing to take a stand and break their habits if they deeply believe in a specific purpose and goal. Surely there are many distractions along that way, but the belief in fairness and sense of purpose has enormous value.\nTheir values reflect that: accessibility, inclusivity, sustainability, and work/life balance are top priorities for Gen Zs, and they value experiences, principles, and social stand over possessions.\nGen Z grew up with technology, so unsurprisingly digital experiences are very familiar and understood by them. On the other hand, digital experiences are often suboptimal at best ‚Äî slow, inaccessible, confusing, and frustrating. Plus, the web is filled with exaggerations and generic but fluffy statements. So it‚Äôs not a big revelation that Gen Zs are highly skeptical of brands and advertising by default (rightfully so!), and rely almost exclusively on social circles, influencers, and peers as main research channels.\nThey might sometimes struggle to spot what‚Äôs real and what‚Äôs not, but they are highly selective about their sources. They are always connected and used to following events live as they unfold, so unsurprisingly, Gen Z tends to have little patience.\nAnd sure enough, Gen Z loves short-form content, but that doesn‚Äôt necessarily equate to a short attention span. Attention span is context-dependent, as documentaries and literature are among Gen Z‚Äôs favorites.\nMost design advice on Gen Z focuses on producing ‚Äúshort form, snackable, bite-sized‚Äù content. That content is optimized for very short attention spans, TikTok-alike content consumption, and simplified to the core messaging. I would strongly encourage us to do the opposite.\nWe shouldn‚Äôt discount Gen Z as a generation with poor attention spans and urgent needs for instant gratification. Gen Zs have very strong beliefs and values, but they are also inherently curious and want to reshape the world. We can tell a damn good story. Captivate and engage. Make people think. Many Gen Zs are highly ambitious and motivated, and they want to be challenged and to succeed. So let‚Äôs support that. And to do that, we need to remain genuine and authentic.\nAs Michelle Winchester noted, Gen Zs have very diverse perspectives and opinions, and they possess a discerning ability to detect disingenuous content. That‚Äôs also where mistrust towards AI comes into play, along with AI fatigue. As Nilay Patel mentioned on Ezra Klein Show, today when somebody says that something is ‚ÄúAI-generated‚Äù, usually it‚Äôs not a praise, but rather a testament how poor and untrustworthy it actually is.\nGen Z expects better. Hence brands that value sincerity, honesty, and authenticity are perceived as more trustworthy compared to brands that don‚Äôt have an opinion, don‚Äôt take a stand, don‚Äôt act for their beliefs and principles. For example, the ‚ÄúKeep Beauty Real‚Äù campaign by Dove (shown below) showcases the value of genuine human beauty, which is so often missed and so often exaggerated to extremes by AI.\nSo whenever you can, aim for the opposite of perfect. Say what you think and do what you promise. Reflect the real world with real people using real products, however imperfect they are. That‚Äôs how you build a strong relationship and trust with Gen Z.\nBecause Gen Z are so incredibly diverse, their needs are extremely diverse and demanding as well. This doesn‚Äôt necessarily mean customization of features or adapting the layout entirely based on custom settings or preferences. But it does mean providing an accessible experience out of the box.\nSimple things matter. High enough color contrast. Links that look like links. Buttons that look like buttons. Forms that are broken down into simple steps to follow. Diverse gender and identity options. Proper tab order. Keyboard accessibility. Reduced motion for people who opt in for reduced motion sickness. Dark mode and light mode.\nIt‚Äôs nothing groundbreaking really. Just basic things that help focus and get things done. In fact, accessibility is better for everyone ‚Äî not just for Gen Z (who expect and demand it) but also for absolutely everybody around the world.\nMany design mock-ups that we are creating today are typically designed and presented on large screens first. However, depending on your user base, a vast majority of users (and that‚Äôs especially true for Gen Zs), will use almost exclusively mobile devices to access your products and services. This surely will be different for enterprise software, but consumer products are much less likely to be used on desktop devices by younger Gen Zs.\nGet into the habit of presenting your design mock-ups in mobile views only first. Help people read better. Content design has never been more important ‚Äî especially when designing for mobile screens. Here are a few guidelines to keep in mind:\nMany people, and especially Gen Z, turn on closed captioning by default these days. Perhaps the spoken language isn‚Äôt their native language, or perhaps they aren‚Äôt quite familiar with the accent of some speakers, or maybe they don‚Äôt have headphones nearby, don‚Äôt want to use them, or can‚Äôt use them. In short, closed captions are better for everybody and they increase ROI and audience.\nGareth Ford Williams has put together a visual language of closed captions and has kindly provided a PDF cheatsheet that is commonly used by professional captioners. There are some generally established rules about captioning, and here are some that I found quite useful when working on captioning for my own video course:\nOn YouTube, users can select a font used for subtitles and choose between monospaced and proportional serif and sans-serif, casual, cursive, and small-caps. But perhaps, in addition to stylistic details, we could provide a careful selection of fonts to help audiences with different needs. This could include a dyslexic font or a hyper-legible font, for example.\nAdditionally, we could display presets for various high contrast options for subtitles. This gives users a faster selection, requiring less effort to configure just the right combination of colors and transparency. Still, it would be useful to provide more sophisticated options just in case users need them.\nOn the other hand, in times of instant gratification with likes, reposts, and leaderboards, people often learn that a feeling of achievement comes from extrinsic signals, like reach or attention from other people. The more important it is to support intrinsic motivation.\nAs Paula Gomes noted, intrinsic motivation is characterized by engaging in behaviors just for their own sake. People do something because they enjoy it. It is when they care deeply for an activity and enjoy it without needing any external rewards or pressure to do it.\nTypically this requires 3 components:\nIn practical terms, that means setting people up for success. Preparing the knowledge and documents and skills they need ahead of time. Building knowledge up without necessarily rewarding them with points. It also means allowing people to have a strong sense of ownership of the decisions and the work they are doing. And adding collaborative goals that would require cooperation with team members and colleagues.\nThe younger people are, the more difficult it is to distinguish between what‚Äôs real and what isn‚Äôt. Whenever possible, show sources or at least explain where to find specific details that back up claims that you are making. Encourage people to make up their mind, and design content to support that ‚Äî with scientific papers, trustworthy reviews, vetted feedback, and diverse opinions.\nAnd: you don‚Äôt have to shy away from technical details. Don‚Äôt make them mandatory to read and understand, but make them accessible and available in case readers or viewers are interested.\nIn times where there is so much fake, exaggerated, dishonest, and AI-generated content, it might be just enough to be perceived as authentic, trustworthy, and attention-worthy by the highly selective and very demanding Gen Z.\nI keep repeating myself like a broken record, but better accessibility is better for everyone. As you hopefully have noticed, many attributes and expectations that we see in Gen Z are beneficial for all other generations, too. It‚Äôs just good, honest, authentic design. And that‚Äôs the very heart of good UX.\nWhat I haven‚Äôt mentioned is that Gen Z genuinely appreciates feedback and values platforms that listen to their opinions and make changes based on their feedback. So the best thing we can do, as designers, is to actively involve Gen Z in the design process. Designing with them, rather than designing for them.\nAnd, most importantly: with Gen Z, perhaps for the first time ever, inclusion and accessibility is becoming a default expectation for all digital products. With it comes the sense of fairness, diversity, and respect. And, personally, I strongly believe that it‚Äôs a great thing ‚Äî and a testament how remarkable Gen Zs actually are.\nI‚Äôve just launched ‚ÄúHow To Measure UX and Design Impact‚Äù üöÄ (8h), a new practical guide for UX leads to measure UX impact on business. Use the code üéü IMPACT to save 20% off today. And thank you for your kind and ongoing support, everyone! Jump to details."
  },
  {
    "url": "/2024/11/desktop-wallpaper-calendars-december-2024/",
    "title": "Dreaming Of Miracles (December 2024 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "Nov 30, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "December is almost here, and that means: It‚Äôs time for some new desktop wallpapers! Created with love by creatives from all around the world, they are bound to lighten up the last few weeks of the year and, who knows, maybe even spark new ideas. Enjoy!",
    "content": "As the year is coming to a close, many of us feel rushed, meeting deadlines, finishing off projects, or preparing for the upcoming holiday season. So how about some beautiful, wintery desktop wallpapers to sweeten up the month and get you in the mood for December ‚Äî and the holidays, if you‚Äôre celebrating?\nMore than thirteen years ago, we started our monthly wallpapers series here at Smashing Magazine. It‚Äôs the perfect opportunity to put your creative skills to the test but also to find just the right wallpaper to accompany you through the new month. This month is no exception, of course, so following our cozy little tradition, we have a new collection of December wallpapers for you to choose from. All of them were created with love by artists and designers from across the globe and can be downloaded for free.\nA huge thank you to everyone who tickled their creativity and shared their designs with us. This post wouldn‚Äôt exist without you. ‚ù§Ô∏è Happy December!\nPaws-itively Festive!‚ÄúThis holiday season, even our furry friends are getting in the spirit! Our mischievous little tree-topper has found the purr-fect perch to keep an eye on all the festivities. May your days be merry, bright, and filled with joyful surprises just like this one!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMerry Christmmm‚Ä¶Designed by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nDung BeetleDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nDear Moon, Merry ChristmasDesigned by Vlad Gerasimov from Georgia.previewwithout calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880\nCardinals In Snowfall‚ÄúDuring Christmas season, in the cold, colorless days of winter, Cardinal birds are seen as symbols of faith and warmth. In the part of America I live in, there is snowfall every December. While the snow is falling, I can see gorgeous Cardinals flying in and out of my patio. The intriguing color palette of the bright red of the Cardinals, the white of the flurries and the brown/black of dry twigs and fallen leaves on the snow-laden ground fascinates me a lot, and inspired me to create this quaint and sweet, hand-illustrated surface pattern design as I wait for the snowfall in my town!‚Äù ‚Äî Designed by Gyaneshwari Dave from the United States.previewwithout calendar: 640x960, 768x1024, 1280x720, 1280x1024, 1366x768, 1920x1080, 2560x1440\nThe House On The River Drina‚ÄúSince we often yearn for a peaceful and quiet place to work, we have found inspiration in the famous house on the River Drina in Bajina Ba≈°ta, Serbia. Wouldn‚Äôt it be great being in nature, away from civilization, swaying in the wind and listening to the waves of the river smashing your house, having no neighbors to bother you? Not sure about the Internet, though‚Ä¶‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 640x480, 800x600, 1024x1024, 1152x864, 1280x720, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nEnchanted Blizzard‚ÄúA seemingly forgotten world under the shade of winter glaze hides a moment where architecture meets fashion and change encounters steadiness.‚Äù ‚Äî Designed by Ana Masnikosa from Belgrade, Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nChristmas Cookies‚ÄúChristmas is coming and a great way to share our love is by baking cookies.‚Äù ‚Äî Designed by Maria Keller from Mexico.previewwithout calendar: 320x480, 640x480, 640x1136, 750x1334, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1242x2208, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2880x1800\nSweet Snowy Tenderness‚ÄúYou know that warm feeling when you get to spend cold winter days in a snug, homey, relaxed atmosphere? Oh, yes, we love it, too! It is the sentiment we set our hearts on for the holiday season, and this sweet snowy tenderness is for all of us who adore watching the snowfall from our windows. Isn‚Äôt it romantic?‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nGetting Hygge‚ÄúThere‚Äôs no more special time for a fire than in the winter. Cozy blankets, warm beverages, and good company can make all the difference when the sun goes down. We‚Äôre all looking forward to generating some hygge this winter, so snuggle up and make some memories.‚Äù ‚Äî Designed by The Hannon Group from Washington D.C.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1280x960, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1440, 2560x1440\nAnonymooseDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nJoy To The World‚ÄúJoy to the world, all the boys and girls now, joy to the fishes in the deep blue sea, joy to you and me.‚Äù ‚Äî Designed by Morgan Newnham from Boulder, Colorado.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nKing Of PopDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nChristmas WoodlandDesigned by Mel Armstrong from Australia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nCatch Your Perfect Snowflake‚ÄúThis time of year, people tend to dream big and expect miracles. Let your dreams come true!‚Äù Designed by Igor Izhik from Canada.previewwithout calendar: 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600\nTrailer Santa‚ÄúA mid-century modern Christmas scene outside the norm of snowflakes and winter landscapes.‚Äù Designed by Houndstooth from the United States.previewwithout calendar: 1024x1024, 1280x800, 1280x1024, 1440x900, 1680x1050, 2560x1440\nSilver WinterDesigned by Violeta Dabija from Moldova.previewwithout calendar: 1024x768, 1280x800, 1440x900, 1680x1050, 1920x1200, 2560x1440\nGifts LoverDesigned by Elise Vanoorbeek from Belgium.previewwithout calendar: 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nOn To The Next One‚ÄúEndings intertwined with new beginnings, challenges we rose to and the ones we weren‚Äôt up to, dreams fulfilled and opportunities missed. The year we say goodbye to leaves a bitter-sweet taste, but we‚Äôre thankful for the lessons, friendships, and experiences it gave us. We look forward to seeing what the new year has in store, but, whatever comes, we will welcome it with a smile, vigor, and zeal.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nThe Matterhorn‚ÄúChristmas is always such a magical time of year so we created this wallpaper to blend the majestry of the mountains with a little bit of magic.‚Äù ‚Äî Designed by Dominic Leonard from the United Kingdom.previewwithout calendar: 320x480, 800x600, 1024x768, 1280x720, 1400x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nNinja SantaDesigned by Elise Vanoorbeek from Belgium.previewwithout calendar: 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1440, 2560x1440\nIt‚Äôs In The Little ThingsDesigned by Tha√Øs Lenglez from Belgium.previewwithout calendar: 640x480, 800x600, 1024x768, 1280x1024, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 2560x1440\nIce Flowers‚ÄúI took some photos during a very frosty and cold week before Christmas.‚Äù Designed by Anca Varsandan from Romania.previewwithout calendar: 1024x768, 1280x800, 1440x900, 1680x1050, 1920x1200\nSurprise‚ÄúSurprise is the greatest gift which life can grant us.‚Äù ‚Äî Designed by PlusCharts from India.previewwithout calendar: 360x640, 1024x768, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x900, 1680x1200, 1920x1080\nSeason‚Äôs Greetings From AustraliaDesigned by Tazi Designs from Australia.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x960, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nChristmas SelfieDesigned by Emanuela Carta from Italy.previewwithout calendar: 320x480, 800x600, 1280x800, 1280x1024, 1440x900, 1680x1050, 2560x1440\nWinter Wonderland‚Äú‚ÄòWinter is the time for comfort, for good food and warmth, for the touch of a friendly hand and for a talk beside the fire: it is the time for home.‚Äô (Edith Sitwell) ‚Äî Designed by Dipanjan Karmakar from India.previewwithout calendar: 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1440, 2560x1440\nWinter Morning‚ÄúEarly walks in the fields when the owls still sit on the fences and stare funny at you.‚Äù ‚Äî Designed by Bo Dockx from Belgium.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nDream What You Want To Do‚ÄúThe year will end, hope the last month, you can do what you want to do, seize the time, cherish yourself, expect next year we will be better!‚Äù ‚Äî Designed by Hong Zi-Qing from Taiwan.previewwithout calendar: 1024x768, 1152x864, 1280x720, 1280x960, 1366x768, 1400x1050, 1530x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nHappy HolidaysDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2024/10/new-video-course-how-to-measure-ux-design-impact/",
    "title": "It‚Äôs Here! How To Measure UX & Design Impact, With Vitaly Friedman",
    "author": "Vitaly Friedman",
    "date": "Oct 15, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX",
      "Design"
    ],
    "summary": "Design decisions shouldn‚Äôt be a matter of personal preference. We can use reliable design KPIs and UX metrics to guide and shape our design work and measure its impact on business. Meet How To Measure UX and Design Impact, our new video course that helps with just that.",
    "content": "Finally! After so many years, we‚Äôre very happy to launch ‚ÄúHow To Measure UX and Design Impact‚Äù, our new practical guide for designers and managers on how to set up and track design success in your company ‚Äî with UX scorecards, UX metrics, the entire workflow and Design KPI trees. Neatly put together by yours truly, Vitaly Friedman. Jump to details.\nIn many companies, designers are perceived as disruptors, rather than enablers. Designers challenge established ways of working. They ask a lot of questions ‚Äî much needed ones but also uncomfortable ones. They focus ‚Äútoo much‚Äù on user needs, pushing revenue projections back, often with long-winded commitment to testing and research and planning and scoping.\nAlmost every department in almost every company has their own clearly defined objectives, metrics and KPIs. In fact, most departments ‚Äî from finance to marketing to HR to sales ‚Äî are remarkably good at visualizing their impact and making it visible throughout the entire organization.\nBut as designers, we rarely have a set of established Design KPIs that we regularly report to senior management. We don‚Äôt have a clear definition of design success. And we rarely measure the impact of our work once it‚Äôs launched. So it‚Äôs not surprising that moste parts of the business barely know what we actually do all day long.\nBusiness wants results. It also wants to do more of what has worked in the past. But it doesn‚Äôt want to be disrupted ‚Äî it wants to disrupt. It wants to reduce time to market and minimize expenses; increase revenue and existing business, find new markets. This requires fast delivery and good execution.\nAnd that‚Äôs what we are often supposed to be ‚Äî good ‚Äúexecutors‚Äù. Or to put differently, ‚Äúpixel pushers‚Äù.\nOver years, I‚Äôve been searching for a way to change that. This brought me to Design KPIs and UX scorecards, and a workflow to translate business goals into actionable and measurable design initiatives. I had to find a way to explain, visualize and track that incredible impact that designers have on all parts of business ‚Äî from revenue to loyalty to support to delivery.\nThe results of that journey are now public in our new video course: ‚ÄúHow To Measure UX and Design Impact‚Äù ‚Äî a practical guide for designers, researchers and UX leads to measure and visualize UX impact on business.\nThe course dives deep into establishing team-specific design KPIs, how to track them effectively, how to set up ownership and integrate metrics in design process. You‚Äôll discover how to translate ambiguous objectives into practical design goals, and how to measure design systems and UX research.\nAlso, we‚Äôll make sense of OKRs, Top Task Analysis, SUS, UMUX-Lite, UEQ, TPI, KPI trees, feedback scoring, gap analysis, and Kano model ‚Äî and what UX research methods to choose to get better results. Jump to the table of contents or get your early-bird.\nA practical guide to UX metrics and Design KPIs8h-video course + live UX training. Free preview.25 chapters (8h), with videos added/updated yearlyFree preview, examples, templates, workflowsNo subscription: get once, access foreverLife-time access to all videos, slides, checklists.Add-on: live UX training, running 2√ó a yearUse the code SMASHING to get 20% off todayJump to the details¬†‚ÜíTable of Contents25 chapters, 8 hours, with practical examples, exercises, and everything you need to master the art of measuring UX and design impact. Don‚Äôt worry, even if it might seem overwhelming at first, we‚Äôll explore things slowly and thoroughly. Taking 1‚Äì2 sessions per week is a perfectly good goal to aim for.We can‚Äôt improve without measuring. That‚Äôs why our new video course gives you the tools you need to make sense of it all: user needs, just like business needs. (View large version)1. Welcome+So, how do we measure UX? Well, let‚Äôs find out! Meet a friendly welcome message to the video course, outlining all the fine details we‚Äôll be going through: design impact, business metrics, design metrics, surveys, target times and states, measuring UX in B2B and enterprises, design KPI trees, Kano model, event storming, choosing metrics, reporting design success ‚Äî and how to measure design systems and UX research efforts.Keywords:Design impact, UX metrics, business goals, articulating design value, real-world examples, showcasing impact, evidence-driven design.2. Design Impact+In this segment, we‚Äôll explore how and where we, as UX designers, make an impact within organizations. We‚Äôll explore where we fit in the company structure, how to build strong relationships with colleagues, and how to communicate design value in business terms.Keywords:Design impact, design ROI, orgcharts, stakeholder engagement, business language vs. UX language, Double Diamond vs. Reverse Double Diamond, risk mitigation.3. OKRs and Business Metrics+We‚Äôll explore the key business terms and concepts related to measuring business performance. We‚Äôll dive into business strategy and tactics, and unpack the components of OKRs (Objectives and Key Results), KPIs, SMART goals, and metrics.Keywords:OKRs, objectives, key results, initiatives, SMART goals, measurable goals, time-bound metrics, goal-setting framework, business objectives.4. Leading And Lagging Indicators+Businesses often speak of leading and lagging indicators ‚Äî predictive and retrospective measures of success. Let‚Äôs explore what they are and how they are different ‚Äî and how we can use them to understand the immediate and long-term impact of our UX work.Keywords:Leading vs. lagging indicators, cause-and-effect relationship, backwards-looking and forward-looking indicators, signals for future success.5. Business Metrics, NPS+We dive into the world of business metrics, from Monthly Active Users (MAU) to Monthly Recurring Revenue (MRR) to Customer Lifetime Value (CLV), and many other metrics that often find their way to dashboards of senior management.Also, almost every business measures NPS. Yet NPS has many limitations, requires a large sample size to be statistically reliable, and what people say and what people do are often very different things. Let‚Äôs see what we as designers can do with NPS, and how it relates to our UX work.Keywords:Business metrics, MAU, MRR, ARR, CLV, ACV, Net Promoter Score, customer loyalty.6. Business Metrics, CSAT, CES+We‚Äôll explore the broader context of business metrics, including revenue-related measures like Monthly Recurring Revenue (MRR) and Annual Recurring Revenue (ARR), Customer Lifetime Value (CLV), and churn rate.We‚Äôll also dive into Customer Satisfaction Score (CSAT) and Customer Effort Score (CES). We‚Äôll discuss how these metrics are calculated, their importance in measuring customer experience, and how they complement other well-known (but not necessarily helpful) business metrics like NPS.Keywords:Customer Lifetime Value (CLV), churn rate, Customer Satisfaction Score (CSAT), Customer Effort Score (CES), Net Promoter Score (NPS), Monthly Recurring Revenue (MRR), Annual Recurring Revenue (ARR).7. Feedback Scoring and Gap Analysis+If you are looking for a simple alternative to NPS, feedback scoring and gap analysis might be a neat little helper. It transforms qualitative user feedback into quantifiable data, allowing us to track UX improvements over time. Unlike NPS, which focuses on future behavior, feedback scoring looks at past actions and current perceptions.Keywords:Feedback scoring, gap analysis, qualitative feedback, quantitative data.8. Design Metrics (TPI, SUS, SUPR-Q)+We‚Äôll explore the landscape of established and reliable design metrics for tracking and capturing UX in digital products. From task success rate and time on task to System Usability Scale (SUS) to Standardized User Experience Percentile Rank Questionnaire (SUPR-Q) to Accessible Usability Scale (AUS), with an overview of when and how to use each, the drawbacks, and things to keep in mind.Keywords:UX metrics, KPIs, task success rate, time on task, error rates, error recovery, SUS, SUPR-Q.9. Design Metrics (UMUX-Lite, SEQ, UEQ)+We‚Äôll continue with slightly shorter alternatives to SUS and SUPR-Q that could be used in a quick email survey or an in-app prompt ‚Äî UMUX-Lite and Single Ease Question (SEQ). We‚Äôll also explore the ‚Äúbig behemoths‚Äù of UX measurements ‚Äî User Experience Questionnaire (UEQ), Google‚Äôs HEART framework, and custom UX measurement surveys ‚Äî and how to bring key metrics together in one simple UX scorecard tailored to your product‚Äôs unique needs.Keywords:UX metrics, UMUX-Lite, Single Ease Question (SEQ), User Experience Questionnaire (UEQ), HEART framework, UEQ, UX scorecards.10. Top Tasks Analysis+The most impactful way to measure UX is to study how successful users are in completing their tasks in their common customer journeys. With top tasks analysis, we focus on what matters, and explore task success rates and time on task. We need to identify representative tasks and bring 15‚Äì18 users in for testing. Let‚Äôs dive into how it all works and some of the important gotchas and takeaways to consider.Keywords:Top task analysis, UX metrics, task success rate, time on task, qualitative testing, 80% success, statistical reliability, baseline testing.11. Surveys and Sample Sizes+Designing good surveys is hard! We need to be careful on how we shape our questions to avoid biases, how to find the right segment of audience and large enough sample size, how to provide high confidence levels and low margins of errors. In this chapter, we review best practices and a cheat sheet for better survey design ‚Äî along with do‚Äôs and don‚Äôts on question types, rating scales, and survey pre-testing.Keywords:Survey design, question types, rating scales, survey length, pre-testing, response rates, statistical significance, sample quality, mean vs. median scores.12. Measuring UX in B2B and Enterprise+Best measurements come from testing with actual users. But what if you don‚Äôt have access to any users? Perhaps because of NDA, IP concerns, lack of clearance, poor availability, and high costs of customers and just lack of users? Let‚Äôs explore how we can find a way around such restrictive environments, how to engage with stakeholders, and how we can measure efficiency, failures ‚Äî and set up UX KPI programs.Keywords:B2B, enterprise UX, limited access to users, compliance, legacy systems, compliance, desk research, stakeholder engagement, testing proxies, employee‚Äôs UX.13. Design KPI Trees+To visualize design impact, we need to connect high-level business objectives with specific design initiatives. To do that, we can build up and present Design KPI trees. From the bottom up, the tree captures user needs, pain points, and insights from research, which inform design initiatives. For each, we define UX metrics to track the impact of these initiatives, and they roll up to higher-level design and business KPIs. Let‚Äôs explore how it all works in action and how you can use it in your work.Keywords:User needs, UX metrics, KPI trees, sub-trees, design initiatives, setting up metrics, measuring and reporting design impact, design workflow, UX metrics graphs, UX planes.14. Event Storming+How do we choose the right metrics? Well, we don‚Äôt start with metrics. We start by identifying most critical user needs and assess the impact of meeting user needs well. To do that, we apply event storming by mapping critical user‚Äôs success moments as they interact with a digital product. Our job, then, is to maximize success, remove frustrations, and pave a clear path towards a successful outcome ‚Äî with event storming.Keywords:UX mapping, customer journey maps, service blueprints, event storming, stakeholder alignment, collaborative mapping, UX lanes, critical events, user needs vs. business goals.15. Kano Model and Survey+Once we have a business objective in front of us, we need to choose design initiatives that are most likely to drive the impact that we need to enable with our UX work. To test how effective our design ideas are, we can map them against a Kano model und run a concept testing survey. It gives us a user‚Äôs sentiment that we then need to weigh against business priorities. Let‚Äôs see how to do just that.Keywords:Feature prioritization, threshold attributes, performance attributes, excitement attributes, user‚Äôs sentiment, mapping design ideas, boosting user‚Äôs satisfaction.16. Design Process+How do we design a KPI tree from scratch? We start by running a collaborative event storming to identify key success moments. Then we prioritize key events and explore how we can amplify and streamline them. Then we ideate and come up with design initiatives. These initiatives are stress tested in an impact-effort matrix for viability and impact. Eventually, we define and assign metrics and KPIs, and pull them together in a KPI tree. Here‚Äôs how it works from start till the end.Keywords:Uncovering user needs, impact-effort matrix, concept testing, event storming, stakeholder collaboration, traversing the KPI tree.17. Choosing The Right Metrics+Should we rely on established UX metrics such as SUS, UMUX-Lite, and SUPR-Q, or should we define custom metrics tailored to product and user needs? We need to find a balance between the two. It depends on what we want to measure, what we actually can measure, and whether we want to track local impact for a specific change or global impact for the entire customer journey. Let‚Äôs figure out how to define and establish metrics that actually will help us track our UX success.Keywords:Local vs. global KPIs, time spans, percentage vs. absolute values, A/B testing, mapping between metrics and KPIs, task breakdown, UX lanes, naming design KPIs.18. Design KPIs Examples+Different contexts will require different design KPIs. In this chapter, we explore a diverse set of UX metrics related to search quality (quality of search for top 100 search queries), form design (error frequency, accuracy), e-commerce (time to final price), subscription-based services (time to tier boundaries), customer support (service desk inquiries) and many others. This should give you a good starting point to build upon for your own product and user needs.Keywords:Time to first success, search results quality, form error recovery, password recovery rate, accessibility coverage, time to tier boundaries, service desk inquiries, fake email frequency, early drop-off rate, carbon emissions per page view, presets and templates usage, default settings adoption, design system health.19. UX Strategy+Establishing UX metrics doesn‚Äôt happen over night. You need to discuss and decide what you want to measure and how often it should happen. But also how to integrate metrics, evaluate data, and report findings. And how to embed them into an existing design workflow. For that, you will need time ‚Äî and green lights from your stakeholders and managers. To achieve that, we need to tap into the uncharted waters of UX strategy. Let‚Äôs see what it involves for us and how to make progress there.Keywords:Stakeholder engagement, UX maturity, governance, risk mitigation, integration, ownership, accountability, viability.20. Reporting Design Success+Once you‚Äôve established UX metrics, you will need to report them repeatedly to the senior management. How exactly would you do that? In this chapter, we explore the process of selecting representative tasks, recruiting participants, facilitating testing sessions, and analyzing the resulting data to create a compelling report and presentation that will highlight the value of your UX efforts to stakeholders.Keywords:Data analysis, reporting, facilitation, observation notes, video clips, guidelines and recommendations, definition of design success, targets, alignment, and stakeholder‚Äôs buy-in.21. Target Times and States+To show the impact of our design work, we need to track UX snapshots. Basically, it‚Äôs four states, mapped against touch points in a customer journey: baseline (threshold not to cross), current state (how we are currently doing), target state (objective we are aiming for), and industry benchmark (to stay competitive). Let‚Äôs see how it would work in an actual project.Keywords:Competitive benchmarking, baseline measurement, local and global design KPIs, cross-teams metrics, setting realistic goals.22. Measuring Design Systems+How do we measure the health of a design system? Surely it‚Äôs not just a roll-out speed for newly designed UI components or flows. Most teams track productivity and coverage, but we can also go beyond that by measuring relative adoption, efficiency gains (time saved, faster time-to-market, satisfaction score, and product quality). But the best metric is how early designers involve the design system in a conversation during their design work.Keywords:Component coverage, decision trees, adoption, efficiency, time to market, user satisfaction, usage analytics, design system ROI, relative adoption.23. Measuring UX Research+Research insights often end up gaining dust in PDF reports stored on remote fringes of Sharepoint. To track the impact of UX research, we need to track outcomes and research-specific metrics. The way to do that is to track UX research impact for UX and business, through organisational learning and engagement, through make-up of research efforts and their reach. And most importantly: amplifying research where we expect the most significant impact. Let‚Äôs see what it involves.Keywords:Outcome metrics, organizational influence, research-specific metrics, research references, study observers, research formalization, tracking research-initiated product changes.24. Getting Started+So you‚Äôve made it so far! Now, how do you get your UX metrics initiative off the ground? By following small steps heading in the right direction. Small commitments, pilot projects, and design guilds will support and enable your efforts. We just need to define realistic goals and turn UX metrics in a culture of measurement, or simply a way of working. Let‚Äôs see how we can do just that.Keywords:Pilot projects, UX integration, resource assessment, evidence-driven design, establishing a baseline, culture of measurement.25. Next Steps+Let‚Äôs wrap up our journey into UX metrics and Design KPIs and reflect what we have learned. What remains is the first next step: and that would be starting where you are and growing incrementally, by continuously visualizing and explaining your UX impact ‚Äî however limited it might be ‚Äî to your stakeholders. This is the last chapter of the course, but the first chapter of your incredible journey that‚Äôs ahead of you.Keywords:Stakeholder engagement, incremental growth, risk mitigation, user satisfaction, business success.Who Is The Course For?This course is tailored for advanced UX practitioners, design leaders, product managers, and UX researchers who are looking for a practical guide to define, establish and track design KPIs, translate business goals into actionable design tasks, and connect business needs with user needs.What You‚Äôll LearnBy the end of the video course, you‚Äôll have a packed toolbox of practical techniques and strategies on how to define, establish, sell, and measure design KPIs from start to finish ‚Äî and how to make sure that your design work is always on the right trajectory. You‚Äôll learn:How to translate business goals to UX initiatives,The difference between OKRs, KPIs, and metrics,How to define design success for your company,Metrics and KPIs that businesses typically measure,How to choose the right set of metrics and KPIs,How to establish design KPIs focused on user needs,How to build a comprehensive design KPI tree,How to combine qualitative and quantitative insights,How to choose and prioritize design work,How to track the impact of design work on business goals,How to explain, visualize, and defend design work,How companies define and track design KPIs,How to make a strong case for UX metrics.Community Matters ‚ù§Ô∏èProducing a video course takes quite a bit of time, and we couldn‚Äôt pull it off without the support of our wonderful community. So thank you from the bottom of our hearts! We hope you‚Äôll find the course useful for your work. Happy watching, everyone! üéâü•≥\nVideo + UX TrainingVideo onlyVideo + UX Training$¬†495.00 $¬†799.00\nGet Video + UX Training25 video lessons (8h) + Live UX Training.100 days money-back-guarantee.Video only$¬†250.00$¬†395.00Get the video course25 video lessons (8h). Updated yearly.Also available as a UX Bundle with 2 video courses.\n(cm, il)Explore more onUXDesign"
  },
  {
    "url": "/2024/10/using-multimodal-ai-models-applications-part3/",
    "title": "Using Multimodal AI Models For Your Applications (Part 3)",
    "author": "Joas Pambou",
    "date": "Oct 11, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "AI",
      "LLM",
      "Techniques",
      "Tools"
    ],
    "summary": "You‚Äôve covered a lot with Joas Pambou so far in this series. In Part 1, you built a system using a vision-language model (VLM) and a text-to-speech (TTS) model to create audio descriptions of images. In Part 2, you improved the system by using LLaVA and Whisper, which provided audio descriptions of images. In this third and final installment, you are looking at two models that handle all three modalities ‚Äî text, images or videos, and audio ‚Äî without needing a second model for text-to-speech or speech recognition.",
    "content": "In this third and final part of a three-part series, we‚Äôre taking a more streamlined approach to an application that supports vision-language (VLM) and text-to-speech (TTS). This time, we‚Äôll use different models that are designed for all three modalities ‚Äî images or videos, text, and audio (including speech-to-text) ‚Äî in one model. These ‚Äúany-to-any‚Äù models make things easier by allowing us to avoid switching between models.\nSpecifically, we‚Äôll focus on two powerful models: Reka and Gemini 1.5 Pro.\nBoth models take things to the next level compared to the tools we used earlier. They eliminate the need for separate speech recognition models, providing a unified solution for multimodal tasks. With this in mind, our goal in this article is to explore how Reka and Gemini simplify building advanced applications that handle images, text, and audio all at once.\nThe architecture of multimodal models has evolved to enable seamless handling of various inputs, including text, images, and audio, among others. Traditional models often require separate components for each modality, but recent advancements in ‚Äúany-to-any‚Äù models like Next-GPT or 4M allow developers to build systems that process multiple modalities within a unified architecture.\nGato, for instance, utilizes a 1.2 billion parameter decoder-only transformer architecture with 24 layers, embedding sizes of 2048 and a hidden size of 8196 in its feed-forward layers. This structure is optimized for general tasks across various inputs, but it still relies on extensive task-specific fine-tuning.\nGPT-4o, on the other hand, takes a different approach with training on multiple media types within a single architecture. This means it‚Äôs a single model trained to handle a variety of inputs (e.g., text, images, code) without the need for separate systems for each. This training method allows for smoother task-switching and better generalization across tasks.\nSimilarly, CoDi employs a multistage training scheme to handle a linear number of tasks while supporting input-output combinations across different modalities. CoDi‚Äôs architecture builds a shared multimodal space, enabling synchronized generation for intertwined modalities like video and audio, making it ideal for more dynamic multimedia tasks.\nMost ‚Äúany-to-any‚Äù models, including the ones we‚Äôve discussed, rely on a few key concepts to handle different tasks and inputs smoothly:\nReka is an AI research company that helps developers build powerful applications by offering models for a range of tasks. These tasks include generating text from videos and images, translating speech, and answering complex questions from long multimodal documents. Reka‚Äôs models can even write and execute code, providing flexible, real-world solutions for developers.\nThese are the three main models Reka offers:\nReka‚Äôs models can be fine-tuned and deployed securely, whether on the cloud, on-premises, or even on-device. Let‚Äôs start by testing Reka‚Äôs capabilities directly through its playground. This allows us to experiment with its multimodal features without writing any code, providing a hands-on way to see how the models handle various tasks, such as image and video comprehension.\nAlright, we‚Äôll kick things off by uploading an image of a diagram outline of the PaliGemma architecture and ask Reka for a detailed explanation.\nHere‚Äôs what we get from Reka Core:\nIt‚Äôs a clear and detailed breakdown of the PaliGemma architecture. The model accurately identifies image and text inputs, the SigLIP image encoder, and the linear projection step. It also grasps how the image and text inputs are combined and processed to generate text output. I should admit that the response is quite neat, offering a solid explanation of the architecture.\nLet‚Äôs try a video input instead. We‚Äôll upload the video about Genny, a software, and ask a question to see how well Reka Core handles video comprehension.\nWell, it‚Äôs not a good answer compared to what LLaVA gave us in the previous article. Now let‚Äôs try a longer video, but with the Reka Flash model. The video is about a TTS model called Parler TTS. Instead of asking what the video is about, let‚Äôs prompt it like this:\nReka Flash generates a solid answer this time:\nIt‚Äôs a good answer that‚Äôs informative and quite practical for developers. Let‚Äôs compare what happens when we try the Reka Edge model with a PDF input titled ‚ÄúMeta AI ‚Äî Responsible Use Guide‚Äù (PDF).\nReka Edge‚Äôs answer is quite thorough and detailed, too!\nIf you want to dive into coding, start by creating a Reka account and getting an API key. Then you can follow along with this notebook. Try out their Python SDK, and make sure to explore the different models available. It‚Äôs a great way to see how these tools work under the hood!\nGemini 1.5, developed by Google DeepMind, is designed to handle complex tasks efficiently, thanks to the new Mixture-of-Experts (MoE) system. MoE is like packing several specialized models inside one big model. Instead of using the whole network for every task, Gemini 1.5 activates only the parts (or what they call ‚Äúexperts‚Äù) that are most relevant. This means Gemini 1.5 can tackle complex tasks with less processing power than a typical monolithic model.\nWe can explore Gemini‚Äôs features in Google AI Studio since it‚Äôs already baked right in. We‚Äôll begin by uploading the following image illustrating VLM capabilities.\nWe‚Äôll ask Gemini to analyze the image and extract details or concepts:\nWell, Gemini nailed it ‚Äî it clearly understood the image and recognized the tasks a VLM handles. This is exactly what you‚Äôd expect from a model designed for advanced image analysis.\nNow, we‚Äôll upload another image ‚Äî this time of an Italian dish ‚Äî and ask Gemini if it can recognize the dishes and list the ingredients needed for them. This type of ‚Äúfood recognition task‚Äù will help us test its ability to identify foods and ingredients.\nWell, the model did a good job recognizing the dishes, but it also didn‚Äôt give me all the necessary ingredients. Let‚Äôs see how it does with videos instead, using the same video we used earlier with the Reka models. This time, the task will focus on action recognition.\nWell, Gemini gave a clear breakdown of the video, identifying it as a tutorial demonstrating the Genmy video editing software to highlight how it‚Äôs used for recording voice, adding text-to-speech, editing video timelines, and allowing voice-over. Impressive!\nLet‚Äôs upload one more video, the same one we used for Reka about the Parler TTS model, and ask Gemini to analyze and summarize the contents.\nNicely done! I can go with that answer. Gemini explains adjusting voice settings, like pitch and speed, and how having different voices can be useful. Gemini also emphasizes the importance of natural, high-quality speech, which is handy for developers working with TTS systems!\nAlright, for coding, you can grab the code from Google AI Studio by clicking the Get Code button. You can choose between formatting the code in Python, Swift, and Java, among other languages.\nBoth Reka and Gemini are strong multimodal models for AI applications, but there are key differences between them to consider. Here‚Äôs a table that breaks those down:\nReka stands out for on-device deployment, which is super useful for apps requiring offline capabilities or low-latency processing.\nOn the other hand, Gemini 1.5 Pro shines with its long context windows, making it a great option for handling large documents or complex queries in the cloud."
  },
  {
    "url": "/2024/10/how-bottom-up-design-approach-enhances-site-accessibility/",
    "title": "How A Bottom-Up Design Approach Enhances Site Accessibility",
    "author": "Eleanor Hecks",
    "date": "Oct 4, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Accessibility",
      "Web Design",
      "UX"
    ],
    "summary": "You can‚Äôt overstate the importance of accessible website design. By the same token, bottom-up philosophies are crucial in modern site-building. A detail-oriented approach makes it easier to serve a more diverse audience along several fronts. Making the most of this opportunity will both extend your reach to new niches and make the web a more equitable place.",
    "content": "Accessibility is key in modern web design. A site that doesn‚Äôt consider how its user experience may differ for various audiences ‚Äî especially those with disabilities ‚Äî will fail to engage and serve everyone equally. One of the best ways to prevent this is to approach your site from a bottom-up perspective.\nConventional, top-down design approaches start with the big picture before breaking these goals and concepts into smaller details. Bottom-up philosophies, by contrast, consider the minute details first, eventually achieving the broader goal piece by piece.\nThis alternative way of thinking is important for accessibility in general because it reflects how neurodivergent people commonly think. While non-autistic people tend to think from a top-down perspective, those with autism often employ a bottom-up way of thinking.\nOf course, there is considerable variation, and researchers have identified at least three specialist thinking types within the autism spectrum:\nStill, research shows that people with autism and ADHD show a bias toward bottom-up thinking rather than the top-down approach you often see in neurotypical users. Consequently, a top-down strategy means you may miss details your audience may notice, and your site may not feel easily usable for all users.\nAs a real-world example, consider the task of writing an essay. Many students are instructed to start an essay assignment by thinking about the main point they want to convey and then create an outline with points that support the main argument. This is top-down thinking ‚Äî starting with the big picture of the topic and then gradually breaking down the topic into points and then later into words that articulate these points.\nIn contrast, someone who uses a bottom-up thinking approach might start an essay with no outline but rather just by freely jotting down every idea that comes to mind as it comes to mind ‚Äî perhaps starting with one particular idea or example that the writer finds interesting and wants to explore further and branching off from there. Then, once all the ideas have been written out, the writer goes back to group related ideas together and arrange them into a logical outline. This writer starts with the small details of the essay and then works these details into the big picture of the final form.\nIn web design, in particular, a bottom-up approach means starting with the specifics of the user experience instead of the desired effect. You may determine a readable layout for a single blog post, then ask how that page relates to others and slowly build on these decisions until you have several well-organized website categories.\nYou may even get more granular. Say you start your site design by placing a menu at the bottom of a mobile site to make it easier to tap with one hand, improving ease of use. Then, you build a drop-down menu around that choice ‚Äî placing the most popular or needed options at the bottom instead of the top for easy tapping. From there, you may have to rethink larger-scale layouts to work around those interactive elements being lower on the screen, slowly addressing larger categories until you have a finished site design.\nIn either case, the idea of bottom-up design is to begin with the most specific problems someone might have. You then address them in sequence instead of determining the big picture first.\nWhile neither bottom-up nor top-down approaches dominate the industry, some web engineers prefer the bottom-up approach due to the various accessibility benefits this process provides. This strategy has several accessibility benefits.\nThe biggest benefit of bottom-up methods is that they prioritize the user‚Äôs needs.\nConsider some of the complaints that social media users have made over the years related to usability and accessibility for the everyday user. For example, many users complain that their Facebook feed will randomly refresh as they scroll for the sake of providing users with the most up-to-date content. However, the feature makes it virtually impossible to get back to a post a user viewed that they didn‚Äôt think to save. Likewise, TikTok‚Äôs watch history feature has come and gone over the years and still today is difficult for many users to find without viewing an outside tutorial on the subject.\nThis is a common problem: 95.9% of the largest one million homepages have Web Content Accessibility Guidelines (WCAG) errors. While a bottom-up alternative doesn‚Äôt mean you won‚Äôt make any mistakes, it may make them less likely, as bottom-up thinking often improves your awareness of new stimuli so you can catch things you‚Äôd otherwise overlook. It‚Äôs easier to meet user‚Äôs needs when you build your entire site around their experience instead of looking at UX as an afterthought.\nConsider this example from Berkshire Hathaway, a multi-billion-dollar holding company. The overall design philosophy is understandable: It‚Äôs simple and direct, choosing to focus on information instead of fancy aesthetics that may not suit the company image. However, you could argue it loses itself in this big picture.\nWhile it is simple, the lack of menus or color contrast and the small font make it harder to read and a little overwhelming. This confusion can counteract any accessibility benefits of its simplicity.\nAlternatively, even a simple website redesign could include intuitive menus, additional contrast, and accessible font for easy navigation across the site.\nThe homepage for U.K. charity Scope offers a better example of web design centered around users‚Äô needs. Concise, clear menus line the top of the page to aid quicker, easier navigation. The color scheme is simple enough to avoid confusion but provides enough contrast to make everything easy to read ‚Äî something the sans-serif font further helps.\nA top-down method also makes catering to a diverse audience difficult because you may need to shoehorn features into an existing design.\nFor example, say, a local government agency creates a website focused on providing information and services to a general audience of residents. The site originally featured high-resolution images, bright colors, and interactive charts.\nHowever, they realize the images are not accessible to people navigating the site with screen readers, while multiple layers of submenus are difficult for keyboard-only users. Further, the bright colors make it hard for visually impaired users to read the site‚Äôs information.\nThe agency, realizing these accessibility concerns, adds captions to each image. However, the captions disrupt the originally intended visual aesthetics and user flow. Further, adjusting the bright colors would involve completely rethinking the site‚Äôs entire color palette. If these considerations had been made before the site was built, the site build could have specifically accommodated these elements while still creating an aesthetically pleasing and user-friendly result.\nAlternatively, a site initially built with high contrast, a calm color scheme, clear typography, simple menus, and reduced imagery would make this site much more accessible to a wide user base from the get-go.\nAs a real-world example, consider the Awwwards website. There are plenty of menus to condense information and ease navigation without overloading the screen ‚Äî a solid accessibility choice. However, there does not seem to be consistent thought in these menus‚Äô placement or organization.\nThere are far too many menus; some are at the top while others are at the bottom, and a scrolling top bar adds further distractions. It seems like Awwwards may have added additional menus as an afterthought to improve navigation. This leads to inconsistencies and crowding because they did not begin with this thought.\nIn contrast,\nRedesigning a system to address a usability issue it didn‚Äôt originally make room for is challenging. It can lead to errors like broken links and other unintended consequences that may hinder access for other visitors. Some sites have even claimed to lose 90% of their traffic after a redesign. While bottom-up approaches won‚Äôt eliminate those possibilities, they make them less likely by centering everything around usage from the start.\nThe website for the Vasa Museum in Stockholm, Sweden, showcases a more cohesive approach to ensuring accessibility. Like Awwwards, it uses menus to aid navigation and organization, but there seems to be more forethought into these features. All menus are at the top, and there are fewer of them, resulting in less clutter and a faster way to find what you‚Äôre looking for. The overall design complements this by keeping things simple and neat so that the menus stand out.\nSimilarly, bottom-up design ensures you don‚Äôt miss as many accessibility concerns. When you start at the top, before determining what details fit within it, you may not consider all the factors that influence it. Beginning with the specifics instead makes it easier to spot and address problems you would‚Äôve missed otherwise.\nThis awareness is particularly important for serving a diverse population. An estimated 16% of the global population ‚Äî 1.6 billion people ‚Äî have a significant disability. That means there‚Äôs a huge range of varying needs to account for, but most people lack firsthand experience living with these conditions. Consequently, it‚Äôs easy to miss things impacting others‚Äô UX. You can overcome that knowledge gap by asking how everyone can use your site first.\nAs these benefits show, a bottom-up design philosophy can be helpful when building an accessible site. Still, top-down methods can be advantageous at times, too. Which is best depends on your situation.\nTop-down approaches are a good way to ensure a consistent brand image, as you start with the overall idea and base future decisions on this concept. It also makes it easier to create a design hierarchy to facilitate decision-making within your team. When anyone has a question, they can turn to whoever is above them or refer to the broader goals. Such organization can also mean faster design processes.\nBottom-up methods, by contrast, are better when accessibility for a diverse audience is your main concern. It may be harder to keep everyone on the same overall design philosophy page, but it usually produces a more functional website. You can catch and solve problems early and pay great attention to detail. However, this can mean longer design cycles, which can incur extra costs.\nIt may come down to what your team is most comfortable with. People think and work differently, with some preferring a top-down approach while others find bottom-up more natural. Combining the two ‚Äî starting with a top-down model before tackling updates from a bottom-up perspective ‚Äî can be beneficial, too.\nShould you decide a bottom-up design method is best for your goals, here are some ways you can embrace this philosophy.\nOne of the most important factors in bottom-up web design is to center everything around your users. As a result, your existing user base ‚Äî whether from a separate part of your business or another site you run ‚Äî is the perfect place to start.\nSurvey customers and web visitors about their experience on your sites and others. Ask what pain points they have and what features they‚Äôd appreciate. Any commonalities between responses deserve attention. You can also turn to WCAG standards for inspiration on accessible functionality, but first-hand user feedback should form the core of your mission.\nPast sites and business projects can also reveal what specifics you should start with. Look for any accessibility gaps by combing through old customer feedback and update histories and using these sites yourself to find issues. Take note of any barriers or usability concerns to address in your next website.\nRemember to document everything you find as you go. Up to 90% of organizations‚Äô data is unstructured, making it difficult to analyze later. Reversing that trend by organizing your findings and recording your accessible design process will streamline future accessibility optimization efforts.\nKeep in mind that a bottom-up strategy can be time-consuming. One of the reasons why top-down alternatives are popular is because they‚Äôre efficient. You can overcome this gap by splitting tasks between smaller teams. However, these groups must communicate frequently to ensure separate design considerations work as a cohesive whole.\nA DevOps approach is helpful here. DevOps has helped 49% of its adopters achieve a faster time to market, and 61% report higher-quality deliverables. It also includes space for both detailed work and team-wide meetings to keep everyone on track. Such benefits ensure you can remain productive in a bottom-up strategy.\nYou can‚Äôt overstate the importance of accessible website design. By the same token, bottom-up philosophies are crucial in modern site-building. A detail-oriented approach makes it easier to serve a more diverse audience along several fronts. Making the most of this opportunity will both extend your reach to new niches and make the web a more equitable place.\nThe Web Accessibility Initiative‚Äôs WCAG standards are a good place to start. While these guidelines don‚Äôt necessarily describe how to apply a bottom-up approach, they do outline critical user needs and accessibility concerns your design should consider. The site also offers a free and comprehensive Digital Accessibility Foundations course for designers and developers.\nFamiliarizing yourself with these standards and best practices will make it easier to understand your audience before you begin designing your site. You can then build a more accessible platform from the ground up.\nAdditionally, the following are some valuable related reads that can act as inspiration in accessibility-centered and user-centric design.\nBy employing bottom-up thinking as well as resources like these in your design approach, you can create websites that not only meet current accessibility standards but actively encourage site use among users of all backgrounds and abilities."
  },
  {
    "url": "/2024/10/build-static-rss-reader-fight-fomo/",
    "title": "Build A Static RSS Reader To Fight Your Inner FOMO",
    "author": "Karin Hendrikse",
    "date": "Oct 7, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "RSS",
      "JavaScript",
      "Techniques"
    ],
    "summary": "RSS is a classic technology that fetches content from websites and feeds it to anyone who subscribes to it with a URL. It‚Äôs based on XML, and we can use it to consume the feeds in our own apps. Karin Hendrikse demonstrates how to do exactly that with a static site you can use as your personal RSS reader.",
    "content": "In a fast-paced industry like tech, it can be hard to deal with the fear of missing out on important news. But, as many of us know, there‚Äôs an absolutely huge amount of information coming in daily, and finding the right time and balance to keep up can be difficult, if not stressful. A classic piece of technology like an RSS feed is a delightful way of taking back ownership of our own time. In this article, we will create a static Really Simple Syndication (RSS) reader that will bring you the latest curated news only once (yes: once) a day.\nWe‚Äôll obviously work with RSS technology in the process, but we‚Äôre also going to combine it with some things that maybe you haven‚Äôt tried before, including Astro (the static site framework), TypeScript (for JavaScript goodies), a package called rss-parser (for connecting things together), as well as scheduled functions and build hooks provided by Netlify (although there are other services that do this).\nI chose these technologies purely because I really, really enjoy them! There may be other solutions out there that are more performant, come with more features, or are simply more comfortable to you ‚Äî and in those cases, I encourage you to swap in whatever you‚Äôd like. The most important thing is getting the end result!\nHere‚Äôs how this will go. Astro generates the website. I made the intentional decision to use a static site because I want the different RSS feeds to be fetched only once during build time, and that‚Äôs something we can control each time the site is ‚Äúrebuilt‚Äù and redeployed with updates. That‚Äôs where Netlify‚Äôs scheduled functions come into play, as they let us trigger rebuilds automatically at specific times. There is no need to manually check for updates and deploy them! Cron jobs can just as readily do this if you prefer a server-side solution.\nDuring the triggered rebuild, we‚Äôll let the rss-parser package do exactly what it says it does: parse a list of RSS feeds that are contained in an array. The package also allows us to set a filter for the fetched results so that we only get ones from the past day, week, and so on. Personally, I only render the news from the last seven days to prevent content overload. We‚Äôll get there!\nBut first‚Ä¶\nRSS is a web feed technology that you can feed into a reader or news aggregator. Because RSS is standardized, you know what to expect when it comes to the feed‚Äôs format. That means we have a ton of fun possibilities when it comes to handling the data that the feed provides. Most news websites have their own RSS feed that you can subscribe to (this is Smashing Magazine‚Äôs RSS feed: https://www.smashingmagazine.com/feed/). An RSS feed is capable of updating every time a site publishes new content, which means it can be a quick source of the latest news, but we can tailor that frequency as well.\nRSS feeds are written in an Extensible Markup Language (XML) format and have specific elements that can be used within it. Instead of focusing too much on the technicalities here, I‚Äôll give you a link to the RSS specification. Don‚Äôt worry; that page should be scannable enough for you to find the most pertinent information you need, like the kinds of elements that are supported and what they represent. For this tutorial, we‚Äôre only using the following elements: <title>, <link>, <description>, <item>, and <pubDate>. We‚Äôll also let our RSS parser package do some of the work for us.\nWe‚Äôll start by creating our Astro site! In your terminal run pnpm create astro@latest. You can use any package manager you want ‚Äî I‚Äôm simply trying out pnpm for myself.\nAfter running the command, Astro‚Äôs chat-based helper, Houston, walks through some setup questions to get things started.\nI like to use Astro‚Äôs sample files so I can get started quickly, but we‚Äôre going to clean them up a bit in the process. Let‚Äôs clean up the src/pages/index.astro file by removing everything inside of the <main></main> tags. Then we‚Äôre good to go!\nFrom there, we can spin things by running pnpm start. Your terminal will tell you which localhost address you can find your site at.\nThe src/pages/index.astro file is where we will make an array of RSS feeds we want to follow. We will be using Astro‚Äôs template syntax, so between the two code fences (‚Äî), create an array of feedSources and add some feeds. If you need inspiration, you can copy this:\nNow we‚Äôll install the rss-parser package in our project by running pnpm install rss-parser. This package is a small library that turns the XML that we get from fetching an RSS feed into JavaScript objects. This makes it easy for us to read our RSS feeds and manipulate the data any way we want.\nOnce the package is installed, open the src/pages/index.astro file, and at the top, we‚Äôll import the rss-parser and instantiate the Partner class.\nWe use this parser to read our RSS feeds and (surprise!) parse them to JavaScript. We‚Äôre going to be dealing with a list of promises here. Normally, I would probably use Promise.all(), but the thing is, this is supposed to be a complicated experience. If one of the feeds doesn‚Äôt work for some reason, I‚Äôd prefer to simply ignore it.\nWhy? Well, because Promise.all() rejects everything even if only one of its promises is rejected. That might mean that if one feed doesn‚Äôt behave the way I‚Äôd expect it to, my entire page would be blank when I grab my hot beverage to read the news in the morning. I do not want to start my day confronted by an error.\nInstead, I‚Äôll opt to use Promise.allSettled(). This method will actually let all promises complete even if one of them fails. In our case, this means any feed that errors will just be ignored, which is perfect.\nLet‚Äôs add this to the src/pages/index.astro file:\nThis creates an array (or more) named feedItems. For each URL in the feedSources array we created earlier, the rss-parser retrieves the items and, yes, parses them into JavaScript. Then, we return whatever data we want! We‚Äôll keep it simple for now and only return the following:\nThe next step is to ensure that all items are sorted by date so we‚Äôll truly get the ‚Äúlatest‚Äù news. Add this small piece of code to our work:\nOh, and‚Ä¶ remember when I said I didn‚Äôt want this RSS reader to render anything older than seven days? Let‚Äôs tackle that right now since we‚Äôre already in this code.\nWe‚Äôll make a new variable called sevenDaysAgo and assign it a date. We‚Äôll then set that date to seven days ago and use that logic before we add a new item to our feedItems array.\nThis is what the src/pages/index.astro file should now look like at this point:\nIt‚Äôs time to show our news articles on the Astro site! To keep this simple, we‚Äôll format the items in an unordered list rather than some other fancy layout.\nAll we need to do is update the <Layout> element in the file with the XML objects sprinkled in for a feed item‚Äôs title, URL, and publish date.\nGo ahead and run pnpm start from the terminal. The page should display an unordered list of feed items. Of course, everything is styled at the moment, but luckily for you, you can make it look exactly like you want with CSS!\nAnd remember that there are even more fields available in the XML for each item if you want to display more information. If you run the following snippet in your DevTools console, you‚Äôll see all of the fields you have at your disposal:\nWe‚Äôre nearly done! The feeds are being fetched, and they are returning data back to us in JavaScript for use in our Astro page template. Since feeds are updated whenever new content is published, we need a way to fetch the latest items from it.\nWe want to avoid doing any of this manually. So, let‚Äôs set this site on Netlify to gain access to their scheduled functions that trigger a rebuild and their build hooks that do the building. Again, other services do this, and you‚Äôre welcome to roll this work with another provider ‚Äî I‚Äôm just partial to Netlify since I work there. In any case, you can follow Netlify‚Äôs documentation for setting up a new site.\nOnce your site is hosted and live, you are ready to schedule your rebuilds. A build hook gives you a URL to use to trigger the new build, looking something like this:\nLet‚Äôs trigger builds every day at midnight. We‚Äôll use Netlify‚Äôs scheduled functions. That‚Äôs really why I‚Äôm using Netlify to host this in the first place. Having them at the ready via the host greatly simplifies things since there‚Äôs no server work or complicated configurations to get this going. Set it and forget it!\nWe‚Äôll install @netlify/functions (instructions) to the project and then create the following file in the project‚Äôs root directory: netlify/functions/deploy.ts.\nThis is what we want to add to that file:\nIf you commit your code and push it, your site should re-deploy automatically. From that point on, it follows a schedule that rebuilds the site every day at midnight, ready for you to take your morning brew and catch up on everything that you think is important."
  },
  {
    "url": "/2024/09/timeless-power-of-spreadsheets/",
    "title": "The Timeless Power Of Spreadsheets",
    "author": "Frederick O‚ÄôBrien",
    "date": "Sep 23, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Data Visualization",
      "Research",
      "Tools"
    ],
    "summary": "In this age of endless newfangled organizational tools, the spreadsheet holds firm. Frederick O‚ÄôBrien explains how, from engineering to design, they can still provide a rock-solid foundation for your work.",
    "content": "Part of me can‚Äôt believe I‚Äôm writing this article. Applying the insights of Leonardo da Vinci or Saul Bass to web design is more my groove, but sometimes you simply have to write about spreadsheets. You have to advocate for them. Because someone should.\nIn a checkered career spanning copywriting, journalism, engineering, and teaching, I‚Äôve seen time and time again how powerful and useful spreadsheets are in all walks of life. The cold, hard truth is that you ‚Äî yes, you ‚Äî likely have an enormous amount to gain by understanding how spreadsheets work. And, more importantly, how they can work for you.\nThat‚Äôs what this piece is about. It‚Äôs a rallying cry, with examples of spreadsheets‚Äô myriad uses and how they can actually, in the right circumstances, be the bedrock of altogether inspiring, lovely things.\nSpreadsheets have been around for thousands of years. Papyrus remnants have been discovered from as far back as 4,600 BC. Their going digital in the late ‚Äò70s was a major factor in the rise of personal computing. Much is (rightly) made of the cultural transformation brought about by the printing press. The digital spreadsheet, not so much.\nFor as long as people have had projects and data to organize, spreadsheets have been indispensable. They were the original databases.\nSpreadsheets don‚Äôt always get a lot of attention these days. For organization and workflow, we usually find ourselves in the worlds of Trello, Jira, or GitHub Projects. Datasets live in Oracle, MongoDB, and the like. There are good reasons for these services emerging ‚Äî everything has its place ‚Äî but\nThis is especially true for smaller projects and ones in their early stages. Yes, sometimes only a huge database will do, but often spreadsheets are more than fit for purpose.\nWhat makes spreadsheets so great? We‚Äôll get into a few real-world examples in a second, but several qualities hold true. They include the following:\nSuch is the flexibility and power of spreadsheets, and what‚Äôs listed here is scratching the surface. Their fundamental strength of organizing data has made them useful for thousands of years, while contemporary enhancements have taken them to the next level.\nBelow are a few examples from my own experiences that showcase these benefits in the real world. They‚Äôre obviously slanted towards my interests, but hopefully, they illustrate the usefulness of spreadsheets in different contexts.\nI work as a software engineer at Guardian News & Media, a place where 10% of the time, i.e., one work day every two weeks, is yours to spend on independent learning, side projects, and so on, is part of the working culture. An ongoing project of mine has been Galaxies (of the Guardian), a D3-powered org chart that represents departments as a series of interrelated people, teams, and streams.\nWhat you see above is powered by information stored and edited in spreadsheets. A lambda scraps departmental information using the aforementioned Google Sheets API, then reformats into a shape Galaxies plays nicely with.\nThis approach has had several benefits. The earliest iterations of Galaxies were only possible because there was already a spreadsheet being maintained by those who needed to keep track of who worked where. Techies and non-techies alike are able to update information easily, and it is transparent to anyone who works inside the organization.\nFor anyone interested, I wrote a piece about how Galaxies works on the Guardian engineering blog. Suffice it to say here, spreadsheets were ‚Äî and remain ‚Äî the engine of the whole thing.\nMy background is in journalism, and I still freelance in my own time. As my coding skills have improved, I‚Äôve naturally gravitated towards data journalism, even teaching it for a year at my old journalism school.\nSpreadsheets are inseparable from a lot of modern journalism ‚Äî and, indeed, copyrighting in general. The digital world is awash with data, and good luck making sense of it without a working knowledge of spreadsheets.\nFor example, a piece I wrote for the Byline Times about foodbanks earlier this year simply wouldn‚Äôt have been possible without spreadsheets. It was by collating data from the Trussell Trust, the Independent Food Aid Network, and national census reports that I was able to map out the sheer scale of the UK‚Äôs food bank network.\nGranted, the map is more visually engaging. But then that‚Äôs the idea. It‚Äôs the same information, just presented more pointedly.\nThere are plenty of other instances of spreadsheets being instrumental at the Guardian alone. Typerighter, the newspaper‚Äôs automated house style checker, began life as a subeditor‚Äôs spreadsheet. User research and bug tracking for the new Feast cooking app, which I worked on during its formative stages, was tracked and discussed in spreadsheets.\nAnd, of course, countless pieces of quality journalism at the Guardian and beyond continue to be powered by them.\nIf this piece has got you to at least consider learning more about spreadsheets and spreadsheet editors, you‚Äôre in luck. There are countless free learning resources available on the web. Here are a few excellent beginner videos to help you on your way:\nAs for spreadsheet editors, the big three these days are probably Google Sheets, Microsoft Excel, and LibreOffice Calc (for the open source devotees out there). They all work much the same way. And as you get comfortable with their functionality, new avenues will open.\nData is the lifeblood of the modern web, and spreadsheets remain one of the most accessible, flexible ways to organize, analyze, and share it. As I hope the examples I‚Äôve shared with you show, spreadsheets aren‚Äôt inherently boring. They can be, but when used in the right ways, they become the engines of dynamic, impactful work.\nThe way they go is up to you."
  },
  {
    "url": "/2024/10/interview-bjorn-ottosson-creator-oklab-color-space/",
    "title": "Interview With Bj√∂rn Ottosson, Creator Of The Oklab Color Space",
    "author": "Philip J√§genstedt",
    "date": "Oct 2, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Colors",
      "Interviews",
      "Design"
    ],
    "summary": "Go behind the scenes with Bj√∂rn Ottosson, the Swedish engineer who created Oklab color space, and discover how he developed a simple yet effective model with good hue uniformity while also handling lightness and saturation well ‚Äî and is ‚Äúokay‚Äù to use.",
    "content": "Oklab is a new perceptual color space supported in all major browsers created by the Swedish engineer Bj√∂rn Ottosson. In this interview, Philip J√§genstedt explores how and why Bj√∂rn created Oklab and how it spread across the ecosystem.\nNote: The original interview was conducted in Swedish and is available to watch.\nPhilip J√§genstedt: Tell me a little about yourself, Bj√∂rn.\nBj√∂rn Ottosson: I worked for many years in the game industry on game engines and games like FIFA, Battlefield, and Need for Speed. I‚Äôve always been interested in technology and its interaction with the arts. I‚Äôm an engineer, but I‚Äôve always held both of these interests.On Working With ColorPhilip: For someone who hasn‚Äôt dug into colors much, what‚Äôs so hard about working with them?Bj√∂rn: Intuitively, colors can seem quite simple. A color can be lighter or darker, it can be more blue or more green, and so on. Everyone with typical color vision has a fairly similar experience of color, and this can be modeled.However, the way we manipulate colors in software usually doesn‚Äôt align with human perception of colors. The most common color space is sRGB. There‚Äôs also HSL, which is common for choosing colors, but it‚Äôs also based on sRGB.One problem with sRGB is that in a gradient between blue and white, it becomes a bit purple in the middle of the transition. That‚Äôs because sRGB really isn‚Äôt created to mimic how the eye sees colors; rather, it is based on how CRT monitors work. That means it works with certain frequencies of red, green, and blue, and also the non-linear coding called gamma. It‚Äôs a miracle it works as well as it does, but it‚Äôs not connected to color perception. When using those tools, you sometimes get surprising results, like purple in the gradient.Image source: How software gets color wrong. (Large preview)Meet Smashing Email Newsletter with useful tips on front-end, design & UX. Subscribe and get ‚ÄúSmart Interface Design Checklists‚Äù ‚Äî a free PDF deck with 150+ questions to ask yourself when designing and building almost anything.Your (smashing) email\nOnce a week. Useful tips on front-end & UX. Trusted by 207.000 friendly folks.\nPhilip: How do humans perceive color?\nBj√∂rn: When light enters the eye and hits the retina, it‚Äôs processed in many layers of neurons and creates a mental impression. It‚Äôs unlikely that the process would be simple and linear, and it‚Äôs not. But incredibly enough, most people still perceive colors similarly.\nPeople have been trying to understand colors and have created color wheels and similar visualizations for hundreds of years. During the 20th century, a lot of research and modeling went into color vision. For example, the CIE XYZ model is based on how sensitive our photoreceptor cells are to different frequencies of light. CIE XYZ is still a foundational color space on which all other color spaces are based.\nThere were also attempts to create simple models matching human perception based on XYZ, but as it turned out, it‚Äôs not possible to model all color vision that way. Perception of color is incredibly complex and depends, among other things, on whether it is dark or light in the room and the background color it is against. When you look at a photograph, it also depends on what you think the color of the light source is. The dress is a typical example of color vision being very context-dependent. It is almost impossible to model this perfectly.\nModels that try to take all of this complexity into account are called color appearance models. Although they have many applications, they‚Äôre not that useful if you don‚Äôt know if the viewer is in a light or bright room or other viewing conditions.\nThe odd thing is that there‚Äôs a gap between the tools we typically use ‚Äî such as sRGB and HSL ‚Äî and the findings of this much older research. To an extent, this makes sense because when HSL was developed in the 1970s, we didn‚Äôt have much computing power, so it‚Äôs a fairly simple translation of RGB. However, not much has changed since then.\nDisplay technology has also improved. Many displays now have different RGB primaries, i.e., a redder red, greener green, or bluer blue. sRGB cannot reach all colors available on these displays. The new P3 color space can, but it‚Äôs very similar to sRGB, just a little wider.\nPhilip: What, then, is Oklab, and how did you create it?\nBj√∂rn: When working in the game industry, sometimes I wanted to do simple color manipulations like making a color darker or changing the hue. I researched existing color spaces and how good they are at these simple tasks and concluded that all of them are problematic in some way.\nMany people know about CIE Lab. It‚Äôs quite close to human perception of color, but the handling of hue is not great. For example, a gradient between blue and white turns out purple in CIE Lab, similar to in sRGB. Some color spaces handle hue well but have other issues to consider.\nWhen I left my job in gaming to pursue education and consulting, I had a bit of time to tackle this problem. Oklab is my attempt to find a better balance, something Lab-like but ‚Äúokay‚Äù.\nI based Oklab on two other color spaces, CIECAM16 and IPT. I used the lightness and saturation prediction from CIECAM16, which is a color appearance model, as a target. I actually wanted to use the datasets used to create CIECAM16, but I couldn‚Äôt find them.\nIPT was designed to have better hue uniformity. In experiments, they asked people to match light and dark colors, saturated and unsaturated colors, which resulted in a dataset for which colors, subjectively, have the same hue. IPT has a few other issues but is the basis for hue in Oklab.\nUsing these three datasets, I set out to create a simple color space that would be ‚Äúokay‚Äù. I used an approach quite similar to IPT but combined it with the lightness and saturation estimates from CIECAM16. The resulting Oklab still has good hue uniformity but also handles lightness and saturation well.\nPhilip: How about the name Oklab? Why is it just okay?\nBj√∂rn: This is a bit tongue-in-cheek and some amount of humility.\nFor the tasks I had in mind, existing color spaces weren‚Äôt okay, and my goal was to make one that is. At the same time, it is possible to delve deeper. If a university had worked on this, they could have run studies with many participants. For a color space intended mainly for use on computer and phone screens, you could run studies in typical environments where they are used. It‚Äôs possible to go deeper.\nNevertheless, I took the datasets I could find and made the best of what I had. The objective was to make a very simple model that‚Äôs okay to use. And I think it is okay, and I couldn‚Äôt come up with anything better. I didn‚Äôt want to call it Bj√∂rn Ottosson Lab or something like that, so I went with Oklab.\nPhilip: Does the name follow a tradition of calling things okay? I know there‚Äôs also a Quite OK Image format.\nBj√∂rn: No, I didn‚Äôt follow any tradition here. Oklab was just the name I came up with.\nPhilip: I discovered Oklab when it suddenly appeared in all browsers. Things often move slowly on the web, but in this case, things moved very quickly. How did it happen?\nBj√∂rn: I was surprised, too! I wrote a blog post and shared it on Twitter.\nI have a lot of contacts in the gaming industry and some contacts in the Visual Effects (VFX) industry. I expected that people working with shaders or visual effects might try this out, and maybe it would be used in some games, perhaps as an effect for a smooth color transition.\nBut the blog post was spread much more widely than I thought. It was on Hacker News, and many people read it.\nThe code for Oklab is only 10 lines long, so many open-source libraries have adopted it. This all happened very quickly.\nChris Lilley from the W3C got in touch and asked me some questions about Oklab. We discussed it a bit, and I explained how it works and why I created it. He gave a presentation at a conference about it, and then he pushed for it to be added to CSS.\nPhotoshop also changed its gradients to use Oklab. All of this happened organically without me having to cheer it on.\nPhilip: In another blog post, you introduced two other color spaces, Okhsv and Okhsl. You‚Äôve already talked about HSL, so what is Okhsl?\nBj√∂rn: When picking colors, HSL has a big advantage, which is that the parameter space is simple. Any value 0-360 for hue (H) together with any values 0-1 for saturation (S) and lightness (L) are valid combinations and result in different colors on screen. The geometry of HSL is a cylinder, and there‚Äôs no way to end up outside that cylinder accidentally.\nBy contrast, Oklab contains all physically possible colors, but there are combinations of values that don‚Äôt work where you reach colors that don‚Äôt exist. For example, starting from light and saturated yellow in Oklab and rotating the hue to blue, that blue color does not exist in sRGB; there are only darker and less saturated blues. That‚Äôs because sRGB in Oklab has a strange shape, so it‚Äôs easy to end up going outside it. This makes it difficult to select and manipulate colors with Oklab or Oklch.\nOkhsl was an attempt at compromise. It maintains Oklab‚Äôs behavior for colors that are not very saturated, close to gray, and beyond that, stretches out to a cylinder that contains all of sRGB. Another way to put it is that the strange shape of sRGB in Oklab has been stretched into a cylinder with reasonably smooth transitions.\nThe result is similar to HSL, where all parameters can be changed independently without ending up outside sRGB. It also makes Okhsl more complicated than Oklab. There are unavoidable compromises to get something with the characteristics that HSL has.\nThis is an area where I wish there were more research. If I have a white background and want to pick some nice colors to put on it, then you can make a lot of assumptions. Okhsl solves many things, but is it possible to do even better?\nPhilip: Some people who have tried Oklab say there are too many dark shades. You changed that in Okhsl with a new lightness estimate.\nBj√∂rn: This is because Oklab is exposure invariant and doesn‚Äôt account for viewing conditions, such as the background color. On the web, there‚Äôs usually a white background, which makes it harder to see the difference between black and other dark colors. But if you look at the same gradient on a black background, the difference is more apparent.\nCIE Lab handles this, and I tried to handle it in Okhsl, too. So, gradients in Okhsl look better on a white background, but there will be other issues on a black background. It‚Äôs always a compromise.\nPhilip: Final question: What‚Äôs your favorite color?\nBj√∂rn: I would have to say Burgundy. Burgundy, dark greens, and navy blues are favorites.\nPhilip: Thank you for your time, Bj√∂rn. I hope our readers have learned something, and I‚Äôll remind them of your excellent blog, where you go into more depth about Oklab and Okhsl.\nBj√∂rn: Thank you!"
  },
  {
    "url": "/2024/10/desktop-wallpaper-calendars-november-2024/",
    "title": "Ingredients For A Cozy November (2024 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "Oct 31, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "November is just around the corner and that means: It‚Äôs time for some new desktop wallpapers! Created with love by the community for the community, they are available in versions with and without a calendar. Enjoy!",
    "content": "When the days are gray and misty as they are in many parts of the world in November, there‚Äôs no better remedy than a bit of colorful inspiration. To bring some good vibes to your desktops this month, artists and designers from across the globe once again tickled their creative ideas and designed unique and inspiring wallpapers that are bound to sweeten up your November.\nThe wallpapers in this post come in versions with and without a calendar for November 2024 and can be downloaded for free ‚Äî as it has been a monthly tradition here at Smashing Magazine for more than 13 years already. As a little bonus goodie, we also added a selection of November favorites from our wallpapers archives to the post. Maybe you‚Äôll spot one of your almost-forgotten favorites in here, too?\nA huge thank-you to everyone who shared their wallpapers with us this month ‚Äî this post wouldn‚Äôt exist without you. Happy November!\nHonoring the Sound of Jazz And Soul‚ÄúToday, we celebrate the saxophone, an instrument that has added its signature sound to jazz, rock, classical, and so much more. From smooth solos to bold brass harmonies, the sax has shaped the soundtrack of our lives. Whether you‚Äôre a seasoned player or just love its iconic sound, let‚Äôs show some love to this musical marvel!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSnow Falls In The Alps‚ÄúThe end of the year is approaching, and winter is just around the corner, so we‚Äôll spend this month in the Alps. The snow has arrived in the mountains, and we can take advantage of it to ski or have a hot coffee while we watch the flakes fall.‚Äù ‚Äî Designed by Veronica Valenzuela from Spain.previewwith calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440without calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nThe Secret CaveDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nHappy Thanksgiving DayDesigned by Cronix from the United States.previewwith calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 4096x2304without calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 4096x2304\nSpace Explorer‚ÄúA peaceful, minimalist wallpaper of a lone cartoon astronaut floating in space surrounded by planets and stars.‚Äù ‚Äî Designed by Reethu from London.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nThe SailorDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nHappy DiwaliDesigned by Cronix from the United States.previewwith calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 4096x2304without calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 4096x2304\nElimination Of Violence Against Women‚ÄúNovember 25th is the ‚ÄúInternational Day for the Elimination of Violence Against Women.‚Äù We wanted to create a wallpaper that can hopefully contribute to building awareness and support.‚Äù ‚Äî Designed by Friendlystock from Greece.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nSquare Isn‚Äôt It‚ÄúWhen playing with lines, which were at the beginning displaying a square, I finally arrived to this drawing, and I was surprised. I thought it would make a nice wallpaper for one‚Äôs desktop, doesn‚Äôt it?‚Äù ‚Äî Designed by Philippe Brouard from France.previewwith calendar: 1024x768, 1366x768, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3840x2160without calendar: 1024x768, 1366x768, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3840x2160\nTransition‚ÄúInspired by the transition from autumn to winter.‚Äù ‚Äî Designed by Tecxology from India.previewwithout calendar: 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSunset Or Sunrise‚ÄúNovember is autumn in all its splendor. Earthy colors, falling leaves, and afternoons in the warmth of the home. But it is also adventurous and exciting and why not, different. We sit in Bali contemplating Pura Ulun Danu Bratan. We don‚Äôt know if it‚Äôs sunset or dusk, but‚Ä¶ does that really matter?‚Äù ‚Äî Designed by Veronica Valenzuela Jimenez from Spain.previewwithout calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nCozy Autumn Cups And Cute Pumpkins‚ÄúAutumn coziness, which is created by fallen leaves, pumpkins, and cups of cocoa, inspired our designers for this wallpaper. ‚Äî Designed by MasterBundles from Ukraine.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nA Jelly November‚ÄúBeen looking for a mysterious, gloomy, yet beautiful desktop wallpaper for this winter season? We‚Äôve got you, as this month‚Äôs calendar marks Jellyfish Day. On November 3rd, we celebrate these unique, bewildering, and stunning marine animals. Besides adorning your screen, we‚Äôve got you covered with some jellyfish fun facts: they aren‚Äôt really fish, they need very little oxygen, eat a broad diet, and shrink in size when food is scarce. Now that‚Äôs some tenacity to look up to.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x960, 1280x1024, 1366x768, 1440x900, 1440x1050, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nColorful Autumn‚ÄúAutumn can be dreary, especially in November, when rain starts pouring every day. We wanted to summon better days, so that‚Äôs how this colourful November calendar was created. Open your umbrella and let‚Äôs roll!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nWinter Is HereDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nMoonlight Bats‚ÄúI designed some Halloween characters and then this idea came to my mind ‚Äî a bat family hanging around in the moonlight. A cute and scary mood is just perfect for autumn.‚Äù ‚Äî Designed by Carmen Eisendle from Germany.previewwithout calendar: 640x480, 800x600, 1024x768, 1280x800, 1280x960, 1440x900, 1600x1200, 1680x1050, 1680x1260, 1920x1200, 1920x1440, 2560x1440, 2560x1600\nTime To Give ThanksDesigned by Glynnis Owen from Australia.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x960, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nThe Kind Soul‚ÄúKindness drives humanity. Be kind. Be humble. Be humane. Be the best of yourself!‚Äù ‚Äî Designed by Color Mean Creative Studio from Dubai.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nAnbani‚ÄúAnbani means alphabet in Georgian. The letters that grow on that tree are the Georgian alphabet. It‚Äôs very unique!‚Äù ‚Äî Designed by Vlad Gerasimov from Georgia.previewwithout calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880\nTempestuous November‚ÄúBy the end of autumn, ferocious Poseidon will part from tinted clouds and timid breeze. After this uneven clash, the sky once more becomes pellucid just in time for imminent luminous snow.‚Äù ‚Äî Designed by Ana Masnikosa from Belgrade, Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMe And The Key ThreeDesigned by Bart Bonte from Belgium.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMushroom Season‚ÄúIt is autumn! It is raining and thus‚Ä¶ it is mushroom season! It is the perfect moment to go to the forest and get the best mushrooms to do the best recipe.‚Äù ‚Äî Designed by Ver√≥nica Valenzuela from Spain.previewwithout calendar: 800x480, 1024x768, 1152x864, 1280x800, 1280x960, 1440x900, 1680x1200, 1920x1080, 2560x1440\nWelcome Home Dear Winter‚ÄúThe smell of winter is lingering in the air. The time to be home! Winter reminds us of good food, of the warmth, the touch of a friendly hand, and a talk beside the fire. Keep calm and let us welcome winter.‚Äù ‚Äî Designed by Acodez IT Solutions from India.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nOuter Space‚ÄúWe were inspired by the nature around us and the universe above us, so we created an out-of-this-world calendar. Now, let us all stop for a second and contemplate on preserving our forests, let us send birds of passage off to warmer places, and let us think to ourselves ‚Äî if not on Earth, could we find a home somewhere else in outer space?‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nCaptain‚Äôs HomeDesigned by Elise Vanoorbeek from Belgium.previewwithout calendar: 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nHoliday Season Is ApproachingDesigned by ActiveCollab from the United States.previewwithout calendar: 1080x1920, 1400x1050, 1440x900, 1600x1200, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nDeer Fall, I Love YouDesigned by Maria Porter from the United States.previewwithout calendar: 320x480, 800x600, 1280x800, 1280x1024, 1440x900, 1680x1050, 2560x1440\nPeanut Butter Jelly Time‚ÄúNovember is the Peanut Butter Month so I decided to make a wallpaper around that. As everyone knows peanut butter goes really well with some jelly so I made two sandwiches, one with peanut butter and one with jelly. Together they make the best combination.‚Äù ‚Äî Designed by Senne Mommens from Belgium.previewwithout calendar: 320x480, 1280x720, 1280x800, 1280x1024, 1920x1080, 2560x1440\nInternational Civil Aviation Day‚ÄúOn December 7, we mark International Civil Aviation Day, celebrating those who prove day by day that the sky really is the limit. As the engine of global connectivity, civil aviation is now, more than ever, a symbol of social and economic progress and a vehicle of international understanding. This monthly calendar is our sign of gratitude to those who dedicate their lives to enabling everyone to reach their dreams.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nNovember Nights On Mountains‚ÄúThose chill November nights when you see mountain tops covered with the first snow sparkling in the moonlight.‚Äù ‚Äî Designed by Jovana Djokic from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nNovember FunDesigned by Xenia Latii from Germany.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nNovember Ingredients‚ÄúWhether or not you celebrate Thanksgiving, there‚Äôs certain things that always make the harvest season special. As a Floridian, I‚Äôm a big fan of any signs that the weather might be cooling down soon, too!‚Äù ‚Äî Designed by Dorothy Timmer from the United States.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nUniversal Children‚Äôs Day‚ÄúUniversal Children‚Äôs Day, November 20. It feels like a dream world, it invites you to let your imagination flow, see the details, and find the child inside you.‚Äù ‚Äî Designed by Luis Costa from Portugal.previewwithout calendar: 1366x768, 1440x900, 1920x1080, 2560x1440\nA Gentleman‚Äôs NovemberDesigned by Cedric Bloem from Belgium.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2024/09/how-manage-dangerous-actions-user-interfaces/",
    "title": "How To Manage Dangerous Actions In User Interfaces",
    "author": "Victor Ponamariov",
    "date": "Sep 27, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "User Interface",
      "User Experience",
      "Design"
    ],
    "summary": "One of the main laws that applies to almost everything in our lives, including building digital products, is Murphy‚Äôs Law: ‚ÄúAnything that can go wrong will go wrong.‚Äù Our goal is to prevent things from going wrong and, if they do, mitigate the consequences. In this article, Victor Ponamarev explores different strategies for preventing users from making mistakes.",
    "content": "By definition, an interface is a layer between the user and a system, serving the purpose of communication between them. Interacting with the interface usually requires users to perform certain actions.\nDifferent actions can lead to various outcomes, some of which might be critical.\nWhile we often need to provide additional protection in case users attempt to perform dangerous or irreversible actions, It‚Äôs good to remember that one of the ten usability heuristics called ‚ÄúError Prevention‚Äù says:\nSurprisingly, when we talk about dangerous actions, it doesn‚Äôt necessarily mean that something is being deleted.\nHere‚Äôs an example of a dangerous action from the banking application I use:\nThe bank approved a loan for me, and as soon as I clicked ‚ÄúGet Money,‚Äù it meant that I had signed the necessary documents and accepted the loan. All I have to do is tap the yellow button, and I‚Äôll get the money.\nAs a result of an accidental tap, you might end up taking a loan when you didn‚Äôt intend to, which is why this action can be considered significant and dangerous.\nTherefore, a dangerous action does not necessarily mean deleting something.\nSome examples may include the following:\nThere are many methods to prevent users from losing their data or taking irreversible actions unintentionally. One approach is to ask users to explicitly confirm their actions.\nThere are several ways to implement this, each with its own pros and cons.\nFirst of all, we should understand the difference between modal and non-modal dialogs. It‚Äôs better to think about modality state since dialogs, popups, alerts ‚Äî all of these might be presented either in the modal state or not. I will use the term dialogs as a general reference, but the keyword here is modality.\nModal dialogs require immediate user action. In other words, you cannot continue working with an application until you respond in some way.\nNon-modal dialogs, on the other hand, allow you to keep using the application without interruption. A common example of a non-modal element is a toast message that appears in the corner of the screen and does not require you to do anything to continue using the app.\nWhen used properly, modal dialogs are an effective way to prevent accidental clicks on dangerous actions.\nThe main problem with them is that if they are used to confirm routine actions (such as marking a task as done), they can cause irritation and create a habit of mindlessly confirming them on autopilot.\nHowever, this is one of the most popular methods. Besides, it can be combined with other methods, so let‚Äôs dive into it deeper.\nUse modal dialogs when a user action will have serious consequences, especially if the result of the action is irreversible. Typical cases include deleting a post or project, confirming a transaction, and so on.\nIt depends on what kind of action users want to take, but the main thing to keep in mind is how serious the consequences are and whether the action is reversible or not.\nHowever, this might not be enough.\nIn some cases, you may require an extra action. A typical solution is to ask users to type something (e.g., a project name) to unblock the CTA button.\nHere are a few examples:\nConvertKit asks users to type ‚ÄúDO IT‚Äù when removing subscribers.\nPro tip: Note that they placed the buttons on the left side! This is a nice example of applying proximity law. It seems reasonable since the submit button is closer to the form (even if it consists of only one input).\nResend asks users to type ‚ÄúDELETE‚Äù if they want to delete an API key, which could have very serious consequences. The API key might be used in many of your apps, and you don‚Äôt want to break anything.\nThis modal is one of the best examples of following the best practices:\nNotice that Resend also places buttons on the left side, just as ConvertKit does.\nNote: While generally disabling submit buttons is considered bad practice, this is one of the cases where it is acceptable. The dialog‚Äôs request is clear and straightforward both in ConvertKit and Resend examples.\nMoreover, we can even skip the submit button altogether. This applies to cases where users are asked to input an OTP, PIN, or 2FA code. For example, the bank app I use does not even have a log in button.\nOn the one hand, we still ask users to perform an extra action (input the code). On the other hand, it eliminates the need for an additional click.\nThere is ongoing debate about whether or not to include a submit button when entering a simple OTP. By ‚Äúsimple,‚Äù I mean one that consists of 4-6 digits.\nWhile I am not an accessibility expert, I don‚Äôt see any major downsides to omitting the submit button in straightforward cases like this.\nFirst, the OTP step is typically an intermediate part of the user flow, meaning a form with four inputs appears during some process. The first input is automatically focused, and users can navigate through them using the Tab key.\nThe key point is that, due to the small amount of information required (four digits), it is generally acceptable to auto-submit the form as soon as the digits are entered, even if a mistake is made.\nOn the one hand, if we care about accessibility, nothing stops us from providing users control over the inputs. On the other hand, auto-submission streamlines the process in most cases, and in the rare event of an error, the user can easily re-enter the digits.\nFor the most critical actions, you may use the so-called ‚ÄúDanger zone‚Äù pattern.\nA common way to implement this is to either have a dedicated page or place the set of actions at the bottom of the settings/account page.\nIt might contain one or more actions and is usually combined with other methods, e.g., a modal dialog. The more actions you have, the more likely you‚Äôll need a dedicated page.\nUse a Danger Zone to group actions that are irreversible or have a high potential for data loss or significant outcomes for users.\nThese actions typically include things like account deletion, data wiping, or permission changes that could affect the user‚Äôs access or data.\nRecently, I discovered that some apps have started using inline confirmation. This means that when you click on a dangerous action, it changes its label and asks you to click again.\nThis pattern is used by apps like Zapier and Typefully. While at first it seems convenient, it has sparked a lot of discussion and questions on X and Linkedin.\nThis is for non-critical actions that might be accidentally executed, usually due to a misclick.\nThere was a concern mentioned by the community of designers regarding the case of users still being able to execute the action by double-clicking.\nHowever, there are three things to consider:\nEven though the Jakob‚Äôs law says that\nIt doesn‚Äôt mean that you cannot facilitate the usage of an app by introducing new patterns. Otherwise, the web wouldn‚Äôt evolve at all.\nI‚Äôve seen attempts to try to fix accidental double-clicking by changing the position of the inline confirmation label that appears after the first click.\nBut this creates layout shifts. When users work with the app daily, it may cause more irritation than help.\nAs an option, we can solve this issue by adding a tiny delay, e.g., 100-200ms, to prevent double-clicking.\nIt also matters who your users are. Remember the good old days when we used to click a dozen times to launch Internet Explorer and ended up with dozens of open instances?\nIf your target audience is likely to do this, apparently, the pattern will not work.\nHowever, for apps like Zapier or Typefully, my assumption is that the target audience might benefit from the pattern.\nThis method involves sending a confirmation request, with or without some kind of verification code, to another place, such as:\nNotice: I‚Äôm not talking about authentication (namely, login process), but rather a confirmation action.\nAn example that I personally face a lot is an app for sending cryptocurrency. Since this is a sensitive request, apart from submitting the requisition from a website, I should also approve it via email.\nIt can be used for such operations as money transfers, ownership transfers, and account deletion (even if you have a danger zone). Most of us use this method quite often when we pay online, and our banks send us OTP (one-time password or one-time code).\nIt may go after the first initial protection method, e.g., a confirmation dialog.\nAs you can see, the methods are often combined and used together. We should not consider each of them in isolation but rather in the context of the whole business process.\nPasskeys are a modern, password-less authentication method designed to enhance both security and user experience.\nThere are a few pros of using passkeys over 2FA, both in terms of security and UX:\nThe passkeys are widely supported and more and more companies adopt it.\nThis is a mechanism when two users are involved in the process. We may call them initiator and approver.\nIn this case, the initiator makes a request to take some action while the approver decides whether to confirm it or not.\nIn both roles, a confirmation dialog or other UI patterns may be used. However, the main idea is to separate responsibilities and decrease the probability of a bad decision.\nActually, you have likely encountered this method many times before. For example, a developer submits a pull request, while a code reviewer decides whether to confirm it or decline.\nIt is best suited for situations when the seriousness of decisions requires few people involved.\nThere is a direct analogy from real life. Take a look at the picture below:\nThe Council of Physicians reminds us that in medicine, seeking a second opinion is crucial, as collaboration and diverse perspectives often result in more informed decisions and better patient care. This is a perfect example of when a second opinion or an approver is essential.\nHere, you will find some apps that use this method:\nBut here is the thing: We can consider it a separate method or rather an approach for implementing business logic because even if another person confirms an action, it is still a dangerous action, with the only difference being that now it‚Äôs another person who should approve it.\nSo, all of the examples mentioned above are not exactly a standalone specific way to protect users from making wrong decisions from the UI point of view. It‚Äôs rather an approach that helps us to reduce the number of critical mistakes.\nWhen you ask users to take action, you should be aware of its original purpose.\nThere are many behavioral phenomena that come from psychology, to name a few:\nA reasonable question that may arise: What are the alternatives?\nEven though we cannot entirely affect users‚Äô behavior, there are a few tactics we can use.\nIn some scenarios, we can artificially delay the task execution in a graceful way.\nOne of my favorite examples is an app called Glovo, which is a food delivery app. Let‚Äôs have a look at the three screens you will see when you order something.\nThe first screen is a cart with items you chose to buy (and an annoying promotion of subscription that takes ‚Öì of the screen).\nAfter you tap the ‚Äúconfirm order‚Äù button, you‚Äôll see the second screen, which asks you whether everything is correct. However, the information appears gradually with fade-in animation. Also, you can see there is a progress bar, which is a fake one.\nAfter a few seconds, you‚Äôll see another screen that shows that the app is trying to charge your card; this time, it‚Äôs a real process. After the transaction proceeds, you‚Äôll see the status of the order and approximate delivery time.\nPro tip: When you show the status of the order and visually highlight or animate the first step, it makes users more confident that the order will be completed. Because of the trick that is called Goal-Gradient Effect.\nYou‚Äôve just paid, and ‚Äúsomething starts happening‚Äù (at least visually), which is a sign that ‚ÄúOh, they should have already started preparing my order. That‚Äôs nice!‚Äù\nThe purpose of the screen with a fake progress bar is to let users verify the order details and confirm them.\nBut this is done in a very exquisite way:\nIn the previous version of the app, you couldn‚Äôt even skip the process; you could only cancel it. Now they added the ‚ÄúContinue‚Äù button, which is essentially ‚ÄúYes, I‚Äôm sure‚Äù confirmation.\nThis means that we return back again to the drawbacks of classic confirmation modals since users can skip the process. But the approach is different: it‚Äôs a combination of a feedback loop from the app and skipping the process.\nThis combination makes users pay attention to the address, order, and price at least sometimes, and it gives them time to cancel the order, while in the classic approach, the confirmation is ‚Äúyes or no?‚Äù which is more likely to be confirmed right away.\nThe undo pattern allows users to reverse an action they have just performed, providing a safety net that reduces anxiety around making mistakes.\nUnlike confirmation modals that interrupt the workflow to ask for user confirmation, the undo pattern provides a smoother experience by allowing actions to be completed with the option to reverse them if needed.\nIt works perfectly fine for non-destructive, reversible actions &mdashl actions that don‚Äôt have significant and immediate consequences:\nCombined with a timer, you can extend the number of options since such tasks as sending an email or making a money transfer could be undone.\nIt‚Äôs not suitable for actions that have serious consequences, such as the following:\nThe undo option is tightly related to the concept called soft deleting, which is widely used in backend frameworks such as Laravel.\nThe concept means that when users delete something via the UI, it looks like it has been deleted, but in the database, we keep the data but mark it as deleted. The data is not lost, which is why the undo option is possible since we don‚Äôt actually delete anything but rather mark it as deleted.\nThis is a good technique to ensure that data is never lost. However, not every table needs this.\nFor example, if you delete an account and don‚Äôt want users to restore it (perhaps due to legal regulations), then you should erase the data completely. But in many cases, it might be a good idea to consider soft deleting. In the worst case, you‚Äôll be able to manually restore user data if it cannot be done via the UI for some reason.\nThere‚Äôs something I want everyone to keep in mind, regardless of who you are or what you do.\nEvery situation is unique. A certain approach might work or fail for a variety of reasons. You might sometimes wonder why a specific decision was made, but you may not realize how many times the interface was revised based on real user feedback.\nUser behavior is affected by many factors, including country, age, culture, education, familiarity with certain patterns, disabilities, and more.\nWhat‚Äôs crucial is to stay in control of your data and users and be prepared to respond when something goes wrong. Following best practices is important, but you must still verify if they work in your specific case.\nJust like in chess, there are many rules ‚Äî and even more exceptions."
  },
  {
    "url": "/2024/09/creating-custom-lottie-animations-svgator/",
    "title": "Creating Custom Lottie Animations With SVGator",
    "author": "Mihai Cora",
    "date": "Sep 17, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "SVG",
      "Animation",
      "Design"
    ],
    "summary": "Creating ready-to-implement Lottie animations with a single tool is now possible thanks to SVGator‚Äôs latest feature updates. In this article, you will learn how to create and animate a Lottie using SVGator, an online animation tool that has zero learning curve if you‚Äôre familiar with at least one design tool. Have a closer look at the tool‚Äôs main functionalities and the straightforward creation process.",
    "content": "SVGator has gone through a series of updates since our last article, which was published in 2021, when it was already considered to be the most advanced web-based tool for vector animation. The first step toward more versatile software came with the mobile export feature that made it possible to implement the animations in iOS and Android applications.\nThe animation tool continued its upgrade with a series of new export options: video formats including MP4, AVI, MKV, MOV, and WebM, as well as image formats such as GIF, Animated PNG, WebP, and image sequence. By covering a larger area of users‚Äô needs, the app now enables anyone to create animated stickers, social media, and newsletter animations, video assets, and many more types of visual content on demand.\nThe goal of becoming a ‚Äúone tool for all‚Äù still lacked the last piece of the puzzle, namely full support for Lottie files. Lottie, just like SVG, is a vector-based format, but it has even better comprehensive multi-platform support, a fact that makes it super popular among developers and design professionals. It is built for use across various platforms, enabling smooth integration into both web and mobile applications. Its file size is minimal, it is infinitely scalable, and developers find it straightforward to implement once they get familiar with the format. Lottie can incorporate raster graphics and also supports interactivity.\nSVGator‚Äôs latest version has everything you need for your various applications without the need for any third-party apps or plug-ins.\nNote: You can test all of SVGator‚Äôs functionalities free of charge before committing to the Pro plan. However, you can export up to three watermarked files, with videos and GIFs limited to basic quality.\nIn this article, we will follow a creation process made of these steps:\nThe sign-up process is simple, fast, and straightforward, and no credit card is required. Sign up either with Google or Facebook or, alternatively, by providing your name, email address, and password. Start a project either with a Lottie animation or a static SVG. If you don‚Äôt have an existing file, you can design and animate everything starting from a blank canvas.\nNow that you‚Äôve created your account, let‚Äôs dive right into the fun part. Here‚Äôs a preview of how your animation is going to look by the time you‚Äôre done following this guide. Neat, right?\nAfter logging in and clicking on the New Project option, you will be taken to the New Project Panel, where you can choose between starting from a blank project or uploading a file. Let‚Äôs start this project with an existing Lottie JSON.\nNote: Make sure to hit Save after each step to make sure you don‚Äôt lose any of your progress while working on this project alongside our guide.\nIn this step, you will learn how to use the Library to import new assets to your project. You can easily choose from a variety of ready-made SVGs stored in different categories, load new files from your computer (Lottie, static SVG, and images), or save animations from other SVGator projects and reuse them.\nIn this case, let‚Äôs use an animated message bubble previously created and saved to the Uploads section of the Library.\nLearn how to create and save animated assets with this short video tutorial.\nAt this point, you should have the first Position keyframe automatically added at the second 0, and you are ready to start animating.\nFor the concept behind this animation to be complete, let‚Äôs create (and later animate) a ‚Äúnew email‚Äù notification as a response to the character sending that message.\nOnce again, SVGator‚Äôs asset library comes in handy for this step:\nLet‚Äôs animate the new email popping out of the laptop right after the character has finished texting his message:\nLet‚Äôs animate the notification dot separately. We‚Äôll make it pop in while the email group shows up.\nMake the character smile while looking at the email that just popped out. For this, you need to animate the stroke offset of the mouth:\nYou can still make all kinds of adjustments to your animation before exporting it. In this case, let‚Äôs change the color of the initial Lottie animation we used to start this project:\nOnce you‚Äôre done editing, you can export the animation by clicking on the top right Export button and selecting the Lottie format. Alternatively, you can press Command or Ctrl + E on your keyboard to jump directly to the export panel, from where you can still select the animation you want to export.\nNow that you‚Äôre done with your animation don‚Äôt forget that you have plenty of export options available besides Lottie. You can post the same project on social media in video format, export it as an SVG animation for the web, or turn it into a GIF sticker or any other type of visual you can think of. GIF animations can also be used in Figma presentations and prototypes as a high-fidelity preview of the production-ready Lottie file.\nWe hope you enjoyed this article and that it will inspire you to create amazing Lottie animations in your next project.\nBelow, you can find a few useful resources to continue your journey with SVG and SVGator:"
  },
  {
    "url": "/2024/09/desktop-wallpaper-calendars-october-2024/",
    "title": "Crows, Ghosts, And Autumn Bliss (October 2024 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "Sep 30, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "Could there be a better way to celebrate the beginning of a new month than with a collection of desktop wallpapers? We‚Äôve got some eye-catching designs to sweeten up your October. Enjoy!",
    "content": "The leaves are shining in the most beautiful colors and pumpkins are taking over the front porches. It‚Äôs time to welcome the spookiest of all months: October! To get your desktop ready for fall and the upcoming Halloween season, artists and designers from across the globe once again got their ideas flowing and designed inspiring wallpapers for you to indulge in.\nThe wallpapers in this post come in versions with and without a calendar for October 2024 and can be downloaded for free. And since so many beautiful and unique designs evolve around our little wallpapers challenge every month (we‚Äôve been running it for more than 13 years already, can you believe it?!), we also added some timeless October treasures from our wallpapers archives to the collection. Maybe you‚Äôll spot one of your almost-forgotten favorites in here, too?\nA huge thank you to everyone who shared their wallpapers with us this month ‚Äî this post wouldn‚Äôt exist without you. Happy October!\nHappy HalloweenDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nReptile Awareness Day‚ÄúLet‚Äôs celebrate reptiles and raise awareness of their vital role in ecosystems. Many species face threats, so let‚Äôs learn, appreciate, and protect these incredible creatures and their habitats!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMake Today A Good Day‚Äú‚ÄòMake today a good day‚Äô is a simple yet powerful reminder to take control of the present moment. It emphasizes that our attitude and actions shape our experience, encouraging positivity and purpose. Each day brings new opportunities, and by choosing to make it good, we invite growth, joy, and fulfilment into our lives.‚Äù ‚Äî Designed by Hitesh Puri from Delhi, India.previewwith calendar: 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nThe Dungeon MasterDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nHappy Dussehra‚ÄúI was inspired by Dussehra‚Äôs rich symbolism and cultural significance while creating this design. The festival celebrates the triumph of good over evil. The bow and arrow become the central focus, while the bold red background, golden accents, and the temple‚Äôs silhouette add a sense of grandeur and spirituality.‚Äù ‚Äî Designed by Cronix from the United States.previewwith calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880without calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880\nThe Crow And The Ghosts‚ÄúIf my heart were a season, it would be autumn.‚Äù ‚Äî Designed by L√≠via L√©n√°rt from Hungary.previewwithout calendar: 320x480, 1024x1024, 1280x1024, 1600x1200, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nThe Night DriveDesigned by Vlad Gerasimov from Georgia.previewwithout calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1440x900, 1440x960, 1400x1050, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880\nAutumn‚Äôs Splendor‚ÄúThe transition to autumn brings forth a rich visual tapestry of warm colors and falling leaves, making it a natural choice for a wallpaper theme.‚Äù ‚Äî Designed by Farhan Srambiyan from India.previewwithout calendar: 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nNational Fossil Day‚ÄúJoin us in commemorating National Fossil Day, a day dedicated to honoring the wonders of Earth‚Äôs prehistoric past. On this special day, we invite you to step back in time and explore the remarkable world of fossils. These ancient remnants of life on our planet offer a glimpse into the evolution of life, from the tiniest microorganisms to the towering giants that once roamed the Earth.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMagical October‚Äú‚ÄòI‚Äôm so glad I live in a world where there are Octobers.‚Äô (L. M. Montgomery, Anne of Green Gables)‚Äù ‚Äî Designed by L√≠vi L√©n√°rt from Hungary.previewwithout calendar: 320x480, 640x480, 1024x768, 1024x1024, 1280x1024, 1400x1050, 1680x1200, 1920x1080, 1920x1200, 2560x1440\nBird Migration Portal‚ÄúOctober is a significant month for me because it is when my favorite type of bird travels south. For that reason I have chosen to write about the swallow. When I was young, I had a bird‚Äôs nest not so far from my room window. I watched the birds almost every day; because those swallows always left their nests in October. As a child, I dreamt that they all flew together to a nicer place, where they were not so cold.‚Äù ‚Äî Designed by Eline Claeys from Belgium.previewwithout calendar: 1280x1024, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nGhostbustersDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSpooky TownDesigned by Xenia Latii from Germany.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nHello Autumn‚ÄúDid you know that squirrels don‚Äôt just eat nuts? They really like to eat fruit, too. Since apples are the seasonal fruit of October, I decided to combine both things into a beautiful image.‚Äù ‚Äî Designed by Erin Troch from Belgium.previewwithout calendar: 320x480, 800x480, 1024x1024, 1280x800, 1366x768, 1600x1200, 1680x1050, 1680x1200, 1920x1440, 2560x1440\nHanlu‚ÄúThe term ‚ÄòHanlu‚Äô literally translates as ‚ÄòCold Dew.‚Äô The cold dew brings brisk mornings and evenings. Eventually the briskness will turn cold, as winter is coming soon. And chrysanthemum is the iconic flower of Cold Dew.‚Äù ‚Äî Designed by Hong, ZI-Qing from Taiwan.previewwithout calendar: 640x480, 800x600, 1024x768, 1080x1920, 1152x864, 1280x720, 1280x960, 1366x768, 1400x1050, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nDiscovering The Universe‚ÄúAutumn is the best moment for discovering the universe. I am looking for a new galaxy or maybe‚Ä¶ a UFO!‚Äù ‚Äî Designed by Ver√≥nica Valenzuela from Spain.previewwithout calendar: 800x480, 1024x768, 1152x864, 1280x800, 1280x960, 1440x900, 1680x1200, 1920x1080, 2560x1440\nKing Of The PiratesDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nGoddess Makosh‚ÄúAt the end of the kolodar, as everything begins to ripen, the village sets out to harvesting. Together with the farmers goes Makosh, the Goddess of fields and crops, ensuring a prosperous harvest. What she gave her life and health all year round is now mature and rich, thus, as a sign of gratitude, the girls bring her bread and wine. The beautiful game of the goddess makes the hard harvest easier, while the song of the farmer permeates the field.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nGame Night And Hot Chocolate‚ÄúTo me, October is all about cozy evenings with hot chocolate, freshly baked cookies, and a game night with friends or family.‚Äù ‚Äî Designed by Lieselot Geirnaert from Belgium.previewwithout calendar: 320x480, 1024x1024, 1280x1024, 2560x1440\nStrange October Journey‚ÄúOctober makes the leaves fall to cover the land with lovely auburn colors and brings out all types of weird with them.‚Äù ‚Äî Designed by Mi Ni Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nAutumn DeerDesigned by Amy Hamilton from Canada.previewwithout calendar: 1024x768, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 2048x1536, 2560x1440, 2880x1800\nDope Code‚ÄúOctober is the month when the weather in Poland starts to get colder, and it gets very rainy, too. You can‚Äôt always spend your free time outside, so it‚Äôs the perfect opportunity to get some hot coffee and work on your next cool web project!‚Äù ‚Äî Designed by Robert Brodziak from Poland.previewwithout calendar: 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nTransitions‚ÄúTo me, October is a transitional month. We gradually slide from summer to autumn. That‚Äôs why I chose to use a lot of gradients. I also wanted to work with simple shapes, because I think of October as the ‚Äòback to nature/back to basics month‚Äô.‚Äù ‚Äî Designed by Jelle Denturck from Belgium.previewwithout calendar: 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2880x1800\nAutumn In The Forest‚ÄúAutumn is a wonderful time to go for walks in the forest!‚Äù ‚Äî Designed by Hilda Rytteke from Sweden.previewwithout calendar: 1280x800, 1280x1024, 1440x900, 1680x1050, 1920x1080, 1920x1200, 2560x1440\nShades Of Gold‚ÄúWe are about to experience the magical imagery of nature, with all the yellows, ochers, oranges, and reds coming our way this fall. With all the subtle sunrises and the burning sunsets before us, we feel so joyful that we are going to shout it out to the world from the top of the mountains.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nHappy Fall!‚ÄúFall is my favorite season!‚Äù ‚Äî Designed by Thuy Truong from the United States.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1366x768, 1440x900, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nGhostoberDesigned by Ricardo Delgado from Mexico City.previewwithout calendar: 1024x768, 1024x1024, 1280x800, 1280x1024, 2560x1440\nFirst Scarf And The Beach‚ÄúWhen I was little, my parents always took me and my sister for a walk at the beach in Nieuwpoort. We didn‚Äôt really do those beach walks in the summer but always when the sky started to turn gray and the days became colder. My sister and I always took out our warmest scarfs and played in the sand while my parents walked behind us. I really loved those Saturday or Sunday mornings where we were all together. I think October (when it‚Äôs not raining) is the perfect month to go to the beach for ‚Äòuitwaaien‚Äô (to blow out), to walk in the wind and take a break and clear your head, relieve the stress or forget one‚Äôs problems.‚Äù ‚Äî Designed by Gwen Bogaert from Belgium.previewwithout calendar: 320x480, 1280x1024, 2560x1440, 2880x1800\nTurtles In Space‚ÄúFinished September, with October comes the month of routines. This year we share it with turtles that explore space.‚Äù ‚Äî Designed by Veronica Valenzuela from Spain.previewwithout calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nRoger That Rogue Rover‚ÄúThe story is a mash-up of retro science fiction and zombie infection. What would happen if a Mars rover came into contact with an unknown Martian material and got infected with a virus? What if it reversed its intended purpose of research and exploration? Instead choosing a life of chaos and evil. What if they all ran rogue on Mars? Would humans ever dare to voyage to the red planet?‚Äù Designed by Frank Candamil from the United States.previewwithout calendar: 1024√ó768, 1024√ó1024, 1280√ó800, 1680√ó1050, 1920√ó1080, 1920√ó1200, 2560√ó1440\nSummer, Don‚Äôt Go!‚ÄúIt would be nice if we could bring summer back, wouldn‚Äôt it?‚Äù ‚Äî Designed by Terezija Katona from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2650x1440\nEmbracing Autumn‚Äôs Beauty‚ÄúWe were inspired by the breathtaking beauty of autumn, with its colorful foliage and the symbolic pumpkin, which epitomizes the season. Incorporating typography allows us to blend aesthetics and functionality, making the calendar not only visually appealing but also useful.‚Äù ‚Äî Designed by WPclerks from India.previewwithout calendar: 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nA Positive Fall‚ÄúOctober is the month when fall truly begins, and many people feel tired and depressed in this season. The jumping fox wants you to be happy! Also, foxes always have reminded me of fall because of their beautiful fur colors.‚Äù ‚Äî Designed by Elena Sanchez from Spain.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2024/09/how-build-custom-data-visualizations-luzmo-flex/",
    "title": "How To Build Custom Data Visualizations Using Luzmo Flex",
    "author": "Paul Scanlon",
    "date": "Sep 12, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Data Visualization",
      "Workflow",
      "UX",
      "Design"
    ],
    "summary": "Bringing data to life in your application can be done without the usual headaches. Paul Scanlon shows you how you can build beautiful data visualizations using the Google Analytics API, and you won‚Äôt have to spend any time ‚Äúmassaging‚Äù the data.",
    "content": "In this article, I‚Äôll introduce you to Luzmo Flex, a new feature from the Luzmo team who have been working hard making developer tooling to flatten the on-ramp for analytics reporting and data visualization.\nWith Luzmo Flex, you can hook up a dataset and create beautifully crafted, fully customizable interactive charts that meet your reporting needs. They easily integrate and interact with other components of your web app, allowing you to move away from a traditional ‚Äúdashboard‚Äù interface and build more bespoke data products.\nWhile many charting libraries offer similar features, I often found it challenging to get the data into the right shape that the library needed. In this article, I‚Äôll show you how you can build beautiful data visualizations using the Google Analytics API, and you won‚Äôt have to spend any time ‚Äúmassaging‚Äù the data!\nWell, it‚Äôs two things, really. First of all, Luzmo is a low-code platform for embedded analytics. You can create datasets from just about anything, connect them to APIs like Google Analytics or your PostgreSQL database, or even upload static data in a .csv file and start creating data visualizations with drag and drop.\nSecondly, Luzmo Flex is their new React component that can be configured to create custom data visualizations. Everything from the way you query your data to the way you display it can be achieved through code using the LuzmoVizItemComponent.\nThat means, besides creating ready-to-use datasets, you can set up functions like the following out-of-the-box:\nBy combining these off-the-shelf functions with flexibility through code, Luzmo Flex makes a great solution for building bespoke data products that go beyond the limits of a traditional dashboard interface. Below are a few examples of what that could look like.\nA custom report builder that lets users search and filter a dataset and render it out using a number of different charts.\nEnable powerful filtering using HTML Select inputs, which will update each chart shown on the page.\nOr how about a sleep tracker hooked up to your phone to track all those important snoozes?\nWhen building data-intensive applications, using something like Recharts, a well-known React charting library, you‚Äôll likely need to reformat the data to fit the required shape. For instance, if I request the top 3 page views from the last seven days for my site, paulie.dev, I would have to use the Google Analytics API using the following query.\nThe response would look something like this:\nTo make that data work with Recharts, I‚Äôd need to reformat it so it conforms to the following data shape.\nTo accomplish this, I‚Äôd need to use an Array.prototype.map() to iterate over each item, destructure the relevant data and return a key-value pair for the name and value for each.\nAnd naturally, if you‚Äôre reformatting data this way in your application, you‚Äôd also want to write unit tests to ensure the data is always formatted correctly to avoid breaking your application‚Ä¶ and all of this before you even get on to creating your charts!\nWith Luzmo Flex, all of this goes away, leaving you more time to focus on which data to display and how best to display it.\nTypically, when building user interfaces that display data insights, your first job will be to figure out how to query the data source. This can take many forms, from RESTful API requests to direct database queries or sometimes reading from static files. Your next job will be figuring out when and how often these requests need to occur.\nEach will likely inform your application‚Äôs architecture, and there‚Äôs no single solution to this. Your last job, as mentioned, will be wrangling the responses, reformatting the data, and displaying it in the UI.\nBelow, I‚Äôll show you how to do this using Luzmo Flex by using a simple example product.\nHere‚Äôs a screenshot of a simple data product I‚Äôve built that displays three different charts for different reporting dimensions exposed by the Google Analytics API for page views for my site, paulie.dev, from the last seven days.\nYou can find all the code used in this article on the following link:\nBefore we get going, hop over to Luzmo and sign up for a free trial. You might also like to have a read of one of the getting started guides listed below. In this article, I‚Äôll be using the Next.js starter.\nTo create data visualization, you‚Äôll first need data! To achieve this using Luzmo, head over to the dashboard, select Datasets from the navigation, and select GA4 Google Analytics. Follow the steps shown in the UI to connect Luzmo with your Google Analytics account.\nWith the setup complete, you can now select which reporting dimensions to add to your dataset. To follow along with this article, select Custom selection.\nLastly, select the following using the search input. Device Category, Page Title, Date, and Total users, then click Import when you‚Äôre ready.\nYou now have all the data required to build the Google Analytics dashboard. You can access the dataset ID from the URL address bar in your browser. You‚Äôll need this in a later step.\nIf you‚Äôve followed along from either of the first two getting started guides, you‚Äôll have your API Key, API Token, App server, and API host environment variables set up and saved in a .env file.\nIf you‚Äôve cloned one of the starter repositories, run the following to install the required dependencies.\nNext, install the Luzmo React Embed dependency which exports the LuzmoVizItemComponent.\nNow, find page.tsx located in the src/app directory, and add your dataset id as shown below.\nAdd the access object from the destructured response and pass access.datasets[0].id onto the LuzmoClientComponent component using a prop named datasetId.\nAnd lastly, find luzmo-client-component.tsx located in src/app/components. This is where you‚Äôll be creating your charts.\nThe first chart you‚Äôll create is a Donut chart that shows the various devices used by visitors to your site.\nAdd the following code to luzmo-client-component.tsx component.\nThere‚Äôs quite a lot going on in the above code snippet, and I will explain it all in due course, but first, I‚Äôll need to cover a particularly tricky part of the configuration.\nYou‚Äôll notice the filters parameters, measure, and category content all require a column id.\nIn the filters parameters, the key is named column_id, and in the measure and category, the key is named column. Both of these are actually the column IDs from the dataset. And here‚Äôs how you can find them.\nBack in the Luzmo dashboard, click into your dataset and look for the ‚Äúmore dots‚Äù next to each column heading. From the menu, select Copy column id. Add each column ID to the keys in the configuration objects.\nIn my example, I‚Äôm using the Total users for the measure, the Device category for the category, and the Date for the filter.\nIf you‚Äôve added the column IDs correctly, you should be able to see a rendered chart on your screen!\n‚Ä¶ and as promised, here‚Äôs a breakdown of the configuration.\nThe first part is fairly straightforward. appServer and authKey are the environment variables you saved to your .env file, and authKey and authToken are destructured from the authorization request and passed into this component via props.\nThe type prop determines which type of chart to render. In my example, I‚Äôm using donut-chart, but you could choose from one of the many options available, area-chart, bar-chart, bubble-chart, box-plot, and many more. You can see all the available options in the Luzmo documentation under Chart docs.\nThe one thing I should point out is my use of Tailwind classes: w-1/2 (width: 50%) and h-80 (height: 20rem). The LuzmoVizItemComponent ships with height 100%, so you‚Äôll need to wrap the component with an element that has an actual height, or you won‚Äôt be able to see the chart on the page as it could be 100% of the height of an element with no height.\nThe options object is where you can customize the appearance of your chart. It accepts many configuration options, among which:\nAll the available configuration options can be seen in the Donut chart documentation.\nSlots are where you can configure which column from your dataset to use for the category and measure.\nSlots can contain multiple measures, useful for displaying two columns of data per chart, but if more than two are used, one will become the measure.\nEach measure contains a content array. The content array, among many other configurations, can include the following:\nThe format used here is Python syntax for floating-point numbers; it‚Äôs similar to JavaScript‚Äôs .toFixed() method, e.g number.toFixed(4).\nThe hierarchy type is ‚Äã‚Äãthe Luzmo standard data type. Any text column is considered as an hierarchical data type.\nYou can read more in the Donut chart documentation about available configuration options for slots.\nThe filters object is where you can apply conditions that will determine which data will be shown. In my example, I only want to show data from the last seven days. To accomplish this, I first create the date variable:\nThis would produce an ISO date string, e.g., 2024-08-21T14:25:40.088Z, which I can use with the filter. The filter uses Luzmo‚Äôs Filter Expressions, to determine if the date for each row of the data is greater than or equal to the date variable. You can read more about Filter Expressions in Luzmo‚Äôs Academy article.\nThe second chart you‚Äôll be creating is a Line chart that displays the number of page views on each date from the last seven days from folks who visit your site.\nAs with the Donut chart, the initial props are pretty much the same, but the type has been changed to line-chart.\nThe options for the Line chart are as follows, and the mode has been changed to line-chart.\nThe slots object is almost the same as before with the Donut chart, but for the Line chart, I‚Äôm using the date column from the dataset instead of the device category, and instead of category, I‚Äôm using the x-axis slot type. To ensure I‚Äôm formatting the data correctly (by day), I‚Äôve used level 5. You can read more about levels in the docs.\nI‚Äôve used the same filters as I used in the Donut chart.\nThe last chart you‚Äôll be creating is a Bar chart that displays the number of page views for the top ten most viewed pages on your site.\nAs with the Donut and Line chart, the initial props are pretty much the same, but the type has been changed to bar-chart.\nThe options for the Bar chart are a little more involved. I‚Äôve included some styling options for the border-radii of the bars, limited the number of results to 10, and sorted the data by the highest page view count first using the sort by measure and direction options.\nAs with the Line chart, I‚Äôve used an axis for one of the columns from the dataset. In this case, it‚Äôs the y-axis which displays the page title.\nI‚Äôve used the same filters as I used in the Donut and Line chart.\nAs you can see, there are plenty of types of charts and customization options. Because this is just an ‚Äúordinary‚Äù React component, you can very easily make it configurable by an end user by allowing options to be set and unset using HTML input elements, checkbox, select, date, and so on.\nBut for me, the real power behind this is not having to mutate data!\nThis is particularly pertinent when displaying multiple charts with different reporting dimensions. Typically, this would require each to have their own utility function or reformatting method. That said, setting column IDs and dataset IDs is a little fiddly, but once you have the component hooked up to the dataset, you can configure and reconfigure as much as you like, all without having to rewrite data formatting functions.\nIf you‚Äôre interested in bringing data to life in your application and want to get it done without the usual headaches, book a free demo with the Luzmo team to learn more!"
  },
  {
    "url": "/2024/09/svg-coding-examples-recipes-writing-vectors-by-hand/",
    "title": "SVG Coding Examples: Useful Recipes For Writing Vectors By Hand",
    "author": "Myriam Frisano",
    "date": "Sep 18, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "SVG",
      "Coding",
      "Guides"
    ],
    "summary": "Myriam Frisano explores the basics of hand-coding SVGs with practical examples to demystify the inner workings of common SVG elements. In this guide, you‚Äôll learn about asking the right questions to solve common positioning problems and how to leverage JavaScript so that, by the end, you can add ‚ÄúSVG coding‚Äù to your toolbox. You‚Äôll also be able to declare proudly, ‚ÄúI know how to draw literal pictures with words!‚Äù",
    "content": "Even though I am the kind of front-end engineer who manually cleans up SVG files when they are a mess, I never expected to become one of those people. You know, those crazy people that draw with code.\nBut here we are.\nI dove deep into SVG specs last winter when I created a project to draw Calligraphy Grids, and even though I knew the basic structures and rules of SVG, it was only then that I fully tried to figure out and understand what all of those numbers meant and how they interacted with each other.\nAnd, once you get the hang of it, it is actually very interesting and quite fun to code SVG by hand.\nIllustrator, Affinity, and all other vector programs are basically just helping you draw on a coordinate system, and then those paths and shapes are stored in SVG files.\nIf you open up these files in an editor, you‚Äôll see that they are just a bunch of paths that contain lots of numbers, which are coordinates in that coordinate system that make up the lines.\nBut, there is a difference between the all-powerful <path> and the other, more semantic elements like <rect>, <circle>, <line>, <ellipse>, <polygon>, and <polyline>.\nThese elements are not that hard to read and write by hand, and they open up a lot of possibilities to add animation and other fun stuff. So, while most people might only think of SVGs as never-pixelated, infinitely scaling images, they can also be quite comprehensive pieces of code.\nBefore we get started on how SVG elements are drawn, let‚Äôs talk about the ways units work in SVG because they might be a bit confusing when you first get started.\nThe beauty of SVG is that it‚Äôs a vector format, which means that the units are somewhat detached from the browser and are instead just relative to the coordinate system you‚Äôre working in.\nThat means you would not use a unit within SVG but rather just use numbers and then define the size of the document you‚Äôre working with.\nSo, your width and height might be using CSS rem units, but in your viewBox, units become just a concept that helps you in establishing sizing relationships.\nThe viewBox works a little bit like the CSS aspect-ratio property. It helps you establish a relationship between the width and the height of your coordinate system and sets up the box you‚Äôre working in. I tend to think of the viewBox as my ‚Äúdocument‚Äù size.\nAny element that is placed within the SVG with bigger dimensions than the viewBox will not be visible. So, the viewBox is the cutout of the coordinate system we‚Äôre looking through. The width and height attributes are unnecessary if there is a viewBox attribute.\nSo, in short, having an SVG with a viewBox makes it behave a lot like a regular image. And just like with images, it‚Äôs usually easiest to just set either a width or a height and let the other dimension be automatically sized based on the intrinsic aspect ratio dimensions.\nSo, if we were to create a function that draws an SVG, we might store three separate variables and fill them in like this:\nThere is a lot to know about SVG: When you want to reuse an image a lot, you may want to turn it into a symbol that can then be referenced with a use tag, you can create sprites, and there are some best practices when using them for icons, and so on.\nUnfortunately, this is a bit out of the scope of this article. Here, we‚Äôre mainly focusing on designing SVG files and not on how we can optimize and use them.\nHowever, one thing of note that is easier to implement from the start is accessibility.\nSVGs can be used in an <img> tag, where alt tags are available, but then you lose the ability to interact with your SVG code, so inlining might be your preference.\nWhen inlining, it‚Äôs easiest to declare role=\"img\" and then add a <title> tag with your image title.\nNote: You can check out this article for SVG and Accessibility recommendations.\nThere is usually some mathematics involved when drawing SVGs. It‚Äôs usually fairly simple arithmetic (except, you know, in case you draw calligraphy grids and then have to dig out trigonometry‚Ä¶), but I think even for simple math, most people don‚Äôt write their SVGs in pure HTML and thus would like to use algebra.\nAt least for me, I find it much easier to understand SVG Code when giving meaning to numbers, so I always stick to JavaScript, and by giving my coordinates names, I like them immeasurable times more.\nSo, for the upcoming examples, we‚Äôll look at the list of variables with the simple math and then JSX-style templates for interpolation, as that gives more legible syntax highlighting than string interpolations, and then each example will be available as a CodePen.\nTo keep this Guide framework-agnostic, I wanted to quickly go over drawing SVG elements with just good old vanilla JavaScript.\nWe‚Äôll create a container element in HTML that we can put our SVG into and grab that element with JavaScript.\nTo make it simple, we‚Äôll draw a rectangle <rect> that covers the entire viewBox and uses a fill.\nNote: You can add all valid CSS values as fills, so a fixed color, or something like currentColor to access the site‚Äôs text color or a CSS variable would work here if you‚Äôre inlining your SVG and want it to interact with the page it‚Äôs placed in.\nLet‚Äôs first start with our variable setup.\nThis method is easier to keep type-safe (if using TypeScript) ‚Äî uses proper SVG elements and attributes, and so on ‚Äî but it is less performant and may take a long time if you have many elements.\nAlternatively, you can create an SVG string and set the innerHTML of the container to that string. This is more performant, but you lose type safety, and the elements aren‚Äôt properly created in the DOM.\nThe best of both worlds is to just create the SVG itself as a DOM element and then set the content of the SVG via innerHTML.\nWe‚Äôre appending a proper SVG element to the container and can type-check that and have access to it properly. You aren‚Äôt typically going to be changing the content of the SVG that much, so I feel like this is probably the best way to do it.\nOkay, so now that we have the basics of the SVG setup, let‚Äôs look into how the most common elements are drawn.\n<rect> creates a box, as we‚Äôve learned in the previous example. It has y and x attributes, which define the position of the top left corner. They are optional, and if not set, the box will be drawn at the origin (0,0) like in that previous example.\nThere are also rx and ry attributes. Those are radii. If you define rx, ry will automatically be set to the same value unless you redeclare it, then you‚Äôd use an elliptical corner-radius instead of a circular one.\nLet‚Äôs draw four different rectangles in our next SVG, one in each quadrant:\nThis is the implementation in JavaScript:\nAnd to then set up the SVG, we‚Äôll apply these variables to the template:\nAnd this is the result:\nThere is a <line> element in SVG that takes an x1, y1, x2, and y2 attribute, which are the coordinates of the start and end points of the line.\nFor me, knowing how to draw straight horizontal or vertical lines was fairly important.\nThe rules for that are simple: We‚Äôll just have to make sure that the y values are the same for a horizontal line and the x values are the same for a vertical line.\nLet‚Äôs look at an example where we draw a horizontal and a vertical line through the center of our document. I purposefully used some weirder numbers here; you‚Äôll see that the resulting SVG is still perfectly centered, though, since it‚Äôs totally fine to use floating point numbers in SVG, and we don‚Äôt really run into subpixel rendering issues as we do in some CSS cases, where we end up with fractional pixels.\nThese are the JavaScript variables we set up:\nAnd this is how we can integrate these variables into the SVG element:\nAnd here‚Äôs our result:\n<circle> elements have cx, cy, and r as coordinates. The x and y values are relative to the circle center, and r describes the radius of the circle.\nThis is where things are less intuitive in my head because there will be times when I want the edge of the circle to be placed at a certain point and not the center, and I‚Äôll usually also think in terms of diameters, not radii.\nSo, let‚Äôs say we want to draw a circle whose outer edge is offset from the bottom left corner by a certain amount and whose diameter is a certain size. We‚Äôd have to do some math again to calculate our coordinates.\nThese are the variables in JavaScript that we‚Äôre working with:\nAnd, just like before, this is how we might integrate them into the SVG element:\nAnd this is what it looks like:\n<ellipse> elements have cx, cy, rx, and ry as coordinates. The x and y values are relative to the ellipse center, and rx and ry describe the radius of the ellipse.\nLet‚Äôs draw an ellipse that is offset from the top right corner by a certain amount, whose horizontal radius is a certain size, and whose vertical radius is half of that.\nFor that we need to define our variables in JavaScript:\n‚Ä¶and integrate them into the SVG element:\nHere‚Äôs the result:\nLet‚Äôs say we want to have a line that has multiple points but doesn‚Äôt make a rectangle or a circle.\nThis is where we can use polyline and polygon, which share the same attributes and only differ in the way that a polygon will connect the first and last point, while a polyline won‚Äôt.\nThey take a points attribute, which is a list of x and y values separated by a space, and, by default, both of them have a fill, which can be a bit strange. That‚Äôs especially true for a polyline, so you might want to set that value to none.\nLet‚Äôs say we have three circles, and we want to have lines connecting their centers. We can just take the cx and cy values of those circles and chain them together in the points attribute.\nSVG is drawn from background to foreground, so the circles are drawn first, then the lines so they are stacked on top of each other.\nTo notice the differences between the polyline and the polygon, we‚Äôll draw our composite four times, like we did before with the circles.\nThis time, we have more than one element, though. To make it quicker to scan which set belongs together, we can make use of the g element, which groups multiple elements together. It allows us to apply certain attributes to all children at the same time.\nTo see that in action and to save us a bit of time, in having to adjust x and y values for each separate element within the composite, we can apply a transform to that group element to push our composite into the different quadrants.\ntransform=\"translate(x,y)‚Äù is how we do that. The transform attribute works a lot like CSS transforms, with slight differences in syntax. But in most simple cases, we can assume the same thing to happen. The translate attribute will take the original position and then move the elements contained within the group along the x and y axis.\nSo, let‚Äôs have a look at our SVG:\nHere, you can see that with the same coordinates, a polyline won‚Äôt draw the line between the blue and the red dot, while a polygon will. However, when applying a fill, they take the exact same information as if the shape was closed, which is the right side of the graphic, where the polyline makes it look like a piece of a circle is missing.\nThis is the second time where we have dealt with quite a bit of repetition, and we can have a look at how we could leverage the power of JavaScript logic to render our template faster.\nBut first, we need a basic implementation like we‚Äôve done before. We‚Äôre creating objects for the circles, and then we‚Äôre chaining the cx and cy values together to create the points attribute. We‚Äôre also storing our transforms in variables.\nAnd then, we apply the variables to the template, using either a polyline or polygon element and a fill attribute that is either set to none or a color value.\nAnd here‚Äôs a version of it to play with:\nWhen it comes to drawing SVGs, you may find that you‚Äôll be repeating a lot of the same code over and over again. This is where JavaScript can come in handy, so let‚Äôs look at the composite example again and see how we could optimize it so that there is less repetition.\nObservations:\nThis tells us that we can create nested loops.\nLet‚Äôs go back to just a vanilla implementation for this since the way loops are done is quite different across frameworks.\nYou could make this more generic and write separate generator functions for each type of element, but this is just to give you an idea of what you could do in terms of logic. There are certainly still ways to optimize this.\nI‚Äôve opted to have arrays for each type of variation that we have and wrote a helper function that goes through the data and builds out an array of objects with all the necessary information for each group. In such a short array, it would certainly be a viable option to just have the data stored in one element, where the values are repeated, but we‚Äôre taking the DRY thing seriously in this one.\nThe group array can then be looped over to build our SVG HTML.\nAnd here‚Äôs the Codepen of that:\nNow, that‚Äôs all the basics I wanted to cover, but there is so much more you can do with SVG. There is more you can do with transform; you can use a mask, you can use a marker, and so on.\nWe don‚Äôt have time to dive into all of them today, but since this started for me when making Calligraphy Grids, I wanted to show you the two most satisfying ones, which I, unfortunately, can‚Äôt use in the generator since I wanted to be able to open my generated SVGs in Affinity and it doesn‚Äôt support pattern.\nOkay, so pattern is part of the defs section within the SVG, which is where you can define reusable elements that you can then reference in your SVG.\nIf you think about it, a graph is just a bunch of horizontal and vertical lines that repeat across the x- and y-axis.\nSo, pattern can help us with that. We can create a <rect> and then reference a pattern in the fill attribute of the rect. The pattern then has its own width, height, and viewBox, which defines how the pattern is repeated.\nSo, let‚Äôs say we want to perfectly center our graph grid in any given width or height, and we want to be able to define the size of our resulting squares (cells).\nOnce again, let‚Äôs start with the JavaScipt variables:\nNow, we can apply them to the SVG element:\nAnd this is what that then looks like:\nIf we wanted to draw a dot grid instead, we could simply repeat a circle. Or, we could alternatively use a line with a stroke-dasharray and stroke-dashoffset to create a dashed line. And we‚Äôd only need one line in this case.\nStarting with our JavaScript variables:\nAnd then adding them to the SVG element:\nAnd this is what that looks like:\nThis brings us to the end of our little introductory journey into SVG. As you can see, coding SVG by hand is not as scary as it seems. If you break it down into the basic elements, it becomes quite like any other coding task:\nI hope that this article has given you a starting point into the wonderful world of coded images and that it gives you the motivation to delve deeper into the specs and try drawing some yourself."
  },
  {
    "url": "/2024/09/embracing-introversion-in-ux/",
    "title": "Embracing Introversion In UX",
    "author": "Victor Yocco",
    "date": "Sep 19, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX",
      "Design",
      "Workflow"
    ],
    "summary": "This article celebrates the power of introversion in UX research and design, going beyond what has been covered in existing discussions on the topic. Victor Yocco debunks common misconceptions, highlights the unique strengths introverted researchers and designers bring, and offers practical tips for thriving in a field that often seems geared toward extroverts ‚Äî all sprinkled with real stories from introverted UX practitioners.",
    "content": "I place myself firmly in the category of being an introvert when it comes to my role as a UX researcher. I love the process of planning and executing research. I have never felt a need to be the loudest or most talkative person in a meeting. I contribute after I have developed something worth saying (or have a really bad joke worked up).\nI also love interviews and usability testing, where I interact with users and engage in meaningful conversation. And then I am exhausted. I love speaking about the findings of research and sharing the spotlight with my colleagues during a presentation, and then I want to go to bed underneath the conference room table. I facilitate workshops with ease but have trouble mustering up the energy required to attend what often feels like mandatory post-workshop socializing.\nIn truth, I have sometimes felt introverted tendencies set me back at work, particularly as a consultant who needs to build relationships to keep the work flowing (in theory). An example would be getting called out by a manager in my junior days for not engaging in as many networking activities as I could have been with some of our clients. My defense of feeling overstimulated, overwhelmed, and uninterested in socializing fell on deaf ears.\nI think we have grown in our understanding of introverts and what they need to be high performers, particularly since Susan Cain‚Äôs 2013 best-selling book Quiet: The Power of Introverts in a World That Can‚Äôt Stop Talking was released.\nThis article aims to celebrate the power of introversion in UX research and design. We‚Äôll debunk common misconceptions, explore the unique strengths introverted researchers and designers bring to the table, and offer practical tips for thriving in a field that sometimes seems tailored for extroverts. My goal is to build on some of the work on UX and introversion that already exists. I‚Äôve cited other articles where appropriate and shared the resources I‚Äôve found on UX and introversion at the end of this article.\nIntroversion is not the same thing as being shy, just as extroversion isn‚Äôt the same thing as being brash. For simplicity and the sake of this article, I am going to use the following definitions provided by de Jongh & de la Croix:\nThere are many potential reasons one could have introvert or extrovert tendencies (McCulloch 2020), and these come on a scale where one might lean or introvert or extrovert depending on the occasion. Those who straddle the middle ground of introversion and extroversion are considered ambiverts.\nAs Jonathan Walter notes in a series of articles on introverts and UX, many UX professionals find themselves drawn to the field because of their introverted nature. Introversion, often misunderstood as shyness or social awkwardness, is simply a preference for internal reflection and processing. It‚Äôs about drawing energy from solitude and finding fulfillment in deep thought and meaningful connections.\nAs UX is clearly a space where introverts are drawn, there is already a decent amount of literature aimed at introverted UX practitioners. In writing this article, I wanted to differentiate from what is already out there, as well as extend.\nI wanted to include some personal stories of introverts who aren‚Äôt myself and work in UX. To do this, I went to LinkedIn and asked people to send me personal anecdotes. My post, at least by my standards, was well received, with over 100 reactions and a dozen people sending me direct messages sharing anecdotes. I was even introduced to Tim Yeo, who has recently released a book on introverts in the workplace. I‚Äôll be sharing some of the stories people shared with me over LinkedIn, where appropriate (and with their permission), throughout this article to help draw the connections to real life.\nFirst, let‚Äôs talk a little about what we know about measuring if you (or others) are introverted, extroverted, or in between.\nUnderstanding where you and your team members fall on the introversion-extroversion spectrum can be invaluable for tailoring your approach to work, collaboration, and personal development. Reinoud de Jongh and Anne de la Croix, two medical school professors, write that medical educators should know where they fall on the introversion ‚Äî extroversion spectrum to deliver great teaching experiences. I‚Äôd extend this to UX practitioners, including UX managers, UX researchers, and designers. If we collaborate with others, we will benefit from knowing where we fall on this scale.\nWhile there‚Äôs no single definitive test, here are a few simple and accessible tools that can offer insights:\nThere‚Äôs no right or wrong answer when it comes to introversion or extroversion. You might even find some folks are ambiverts who display different personalities in different settings. You can‚Äôt force your teammates to take these types of tests. But if you are able to get buy-in, it can be a fun activity to see who considers themselves more introverted or more extroverted. The goal is to understand your own preferences and tendencies and those of your colleagues so you can create a work environment that supports your well-being and maximizes your potential.\nThe idea that UX is an extrovert‚Äôs game couldn‚Äôt be further from the truth. As Jeremy Bird notes in his article on the strengths of introverts in design, it‚Äôs a field that demands a wide range of skills, including deep listening, empathy, observation, analysis, and creativity ‚Äî all of which introverts excel at. With so much information already available from articles on UX and introversion noted in the biography below, I‚Äôm going to briefly highlight the commonly accepted strengths of introverts.\nIntroverts are often exceptional listeners. In user interviews, they give participants the space to fully express their thoughts and feelings, picking up on subtle cues and nuances that others might miss. This active listening leads to a deeper understanding of user needs and motivations, which is crucial for both research and design.\nOne practitioner shared their experience on LinkedIn:\nMany introverts possess a high degree of empathy. They can easily put themselves in users‚Äô shoes, feeling their frustrations and celebrating their successes. This empathy fuels user-centered design, ensuring that products and services are not only functional but also emotionally resonant.\nIntroverts are naturally observant. They notice details in user behavior, interface interactions, and environmental context that others might overlook.\nIntroverts often prefer to process information internally, engaging in deep, solitary reflection before sharing their insights. This leads to well-considered and insightful findings and well-crafted data-informed design.\nIntroverts tend to thrive in independent work environments. As Heather McCulloch notes, teachers should allow introverted students to work independently or in pairs. This way, they can focus deeply on research tasks, design problems, or data analysis without the distractions that come with constant collaboration.\nNow that we‚Äôve covered the commonly recognized strengths introverts bring to the table, let‚Äôs cover some common hurdles and explore effective strategies for overcoming them that empower introverts to thrive.\nBeing introverted can bring up some challenges when it comes to doing things that require a lot of social energy. However, many introverts in UX find ways to push beyond their natural tendencies to meet the demands of their profession. One UX practitioner shared their experience on LinkedIn:\nIntroverts might initially feel overwhelmed in networking situations or workshops due to the continual social interaction and the need to navigate unfamiliar environments and interact with new people, which can be particularly daunting for those who prefer solitude or small-group conversations.\nIntroverts may initially avoid presenting because they tend to prefer avoiding the spotlight. They may also worry about being judged or scrutinized by others.\nFor the introvert, you might not like this, but you need to get comfortable presenting, and the sooner you do, the better.\nSolutions for researchers and designers:\nI‚Äôve personally found presenting in front of a large anonymous crowd to be less intimidating than smaller, intimate meetings where you might know a few people mixed in with a few strangers. In the end, I always remind myself I am supposed to be the expert on what I‚Äôve been asked to present or that my job is to clearly state the outcome of our research to stakeholders hungry to see the relevance of their work. The audience wants to support you and see you succeed. I take confidence in that. I‚Äôm also exhausted after giving a presentation where I‚Äôve left it all on the floor.\nNow, let‚Äôs move on to topics beyond what I‚Äôve found covered in existing articles on UX and introversion and cover workshop facilitation and managing group dynamics.\nIntroverts may find group dynamics challenging, as they often prefer solitary activities and may feel overwhelmed or drained by social interactions. In group settings, introverts may have difficulty asserting themselves, sharing their ideas, or actively participating in discussions. They may also feel uncomfortable being the center of attention or having to make decisions on the spot.\nAdditionally, introverts may struggle to build relationships with their peers in a group setting, as they may be hesitant to initiate conversations or join in on group activities. These challenges can make it difficult for introverts to fully engage and contribute in group settings, leading to feelings of isolation and exclusion.\nOne UX designer responding over LinkedIn eloquently shared their experience with communication challenges:\nManaging group dynamics covers a broad number of situations UX professionals face on a daily basis. Let‚Äôs get a little more specific and focus on how introverted UXers can thrive as workshop facilitators.\nIf you‚Äôre an introverted UX professional who shies away from leading workshops, it‚Äôs time to reconsider. Here are some of the reasons introverts can be perfect workshop facilitators:\nWe‚Äôve reviewed many of the challenges introverts might face in their daily work life. Let‚Äôs turn our attention to a more recent phenomenon, at least in terms of its widespread availability as an option for many UX professionals: remote work.\nIncreased telecommuting offers a unique opportunity for some introverts. Introverts, who often find comfort in solitude and derive energy from spending time alone, sometimes find the constant socialization and bustle of open-plan offices overwhelming and draining.\nRemote work provides introverts with an opportunity to control their surroundings and create a workspace that promotes focus, productivity, and creativity. Remote work allows introverts to communicate and collaborate on their own terms. Introverts often prefer one-on-one interactions over large group meetings, and remote work makes it easier for them to engage in meaningful conversations with colleagues and clients.\nWhile remote work has been a game-changer for many introverts, it is important to acknowledge that it is not without its challenges. Introverts may miss the camaraderie and social connections of an in-person workplace, and they may need to make a conscious effort to stay connected with colleagues and maintain a healthy work-life balance.\nIntroverts working remotely may need to develop strategies for self-advocacy and communication to ensure that their voices are heard and their contributions are valued in a virtual work environment.\nIntroverted remote employees can implement some of these strategies and tactics to enhance their productivity, reduce burnout, and maintain a positive work environment:\nImplementing what we‚Äôve covered in this section will help to reduce the likelihood of frustration from both remote working introverts and their colleagues.\nWe‚Äôve covered a lot of ideas in this article. If you find yourself nodding along as an introvert or perhaps coming to the realization you or someone on your team is more introverted, this section and the next will end this article on a high note, introducing some actionable tips for introverted researchers and designers, and their managers and teammates, to create a more comfortable and successful working environment for introverts to thrive alongside their extroverted colleagues.\nEveryone needs to engage in an appropriate amount of self-care to feel their best. For an introvert, this is often done in solitude, particularly after engaging in a day or week full of social interaction. Some tips that could apply to anyone but are of particular relevance to introverts include the following:\nIntroverts know themselves best and have spent a lifetime reflecting on who they are and what makes them wake up happy to go to work. As such, introverts may have a high awareness of their strengths. This allows an introvert to do the following:\nIntroverts might hesitate to speak up when the room is crowded with unknown future friends. However, anyone, introverted or not, needs to be their own best advocate when it comes to making colleagues and management aware of how to create the best workplace environment to thrive in:\nIt‚Äôs essential for introverts to advocate for their needs and communicate their preferred work styles to their colleagues and managers. One UX professional shared their experience on LinkedIn:\nAnother LinkedIn UXer provided additional tactics for how they navigate communication styles and expectations, particularly in a fast-paced or extrovert-dominated environment.\nIntroverts may not initially thrive when it comes to group dynamics. They might wish to observe the group before deeply engaging. They can find it difficult to assert themselves in a group setting and may feel overwhelmed by the constant need for social interaction.\nAdditionally, introverts may find it harder to contribute to discussions or be slower to form meaningful connections with others in a group. The extroverted nature of group dynamics can be draining for introverts, and they may require more time to recharge after being in a group setting.\nIntroverts often find creative ways to navigate the challenges of large group settings. One UX researcher shared their experience on LinkedIn:\nI turned to Tim Yeo to provide some insight into how introverts can best prepare for moving up the career ladder. Tim provided some tactical advice focusing on teamwork and people skills:\nTim also shared the strategic reason behind the importance of leaders having excellent people skills:\nYou can find some additional information on ways for introverts (and extroverts) to gain people skills in some of the references listed at the end of this article.\nLet‚Äôs move on and wrap up with some tips for those who are working alongside introverts.\nIf you are a manager of a team consisting of more than yourself, you likely have an introvert among your team. Tim Yeo states, ‚ÄúResearch from Susan Cain‚Äôs book, Quiet, shows that 1‚ÅÑ3 to 1‚ÅÑ2 of our population identify as quiet or introverted.‚Äù\nTherefore,\nUX managers of teams, including introverts and extroverts, should engage in some of the following suggested practices to create an inclusive work environment where everyone feels valued, heard, and able to contribute effectively to the team‚Äôs success. UX managers can use these tips to foster a diverse and productive team dynamic that drives innovation and creativity.\nAs a bonus, if you‚Äôre an introverted UX Manager and you are managing a team composed of introverts and extroverts, remember to encourage a variety of communication channels for your team members. You might default to your preferred style of communication but recognize that different team members may prefer different communication channels.\nSome extroverted team members might enjoy brainstorming in large meetings, and introverted team members might prefer to contribute their ideas through written channels such as email, chat, or discussion boards.\nTim Yeo provided this list of tactics for encouraging and engaging introverts in participating in discussion:\nNow, let‚Äôs move on to focus on some tips for managing remote workers.\nManagers and colleagues play a crucial role in creating a supportive and inclusive environment for introverted researchers and designers on dispersed teams. Here are some strategies to consider:\nManagers and teams can implement these strategies to create a work environment that values and empowers introverted researchers and designers, enabling them to thrive and make significant contributions to the team‚Äôs success.\nWe create a more inclusive and productive environment when we understand and appreciate the unique needs and preferences of introverts. Whether you‚Äôre an introverted UXer navigating the challenges of remote work or a manager looking to foster a diverse and engaged team, the strategies and insights shared in this article can help you unlock the full potential of introverted talent.\nIntroversion is not a weakness to be overcome but a valuable asset to be embraced. We build stronger teams, foster innovation, and ultimately deliver more meaningful and impactful user experiences when we create a culture that celebrates both introverted and extroverted strengths. The best solutions often emerge from a blend of diverse perspectives, including the quiet voices that deserve to be heard.\nIn closing, I‚Äôd like to use the words of Tim Yeo, who provides us with some inspiration and positive reinforcement of who we are as introverts:"
  },
  {
    "url": "/2024/09/why-anticipatory-design-not-working-businesses/",
    "title": "Why Anticipatory Design Isn‚Äôt Working For Businesses",
    "author": "Joana Cerejo",
    "date": "Sep 10, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "User Experience",
      "Design",
      "Business"
    ],
    "summary": "Anticipatory design, powered by Artificial Intelligence (AI), Machine learning (ML), and Big Data (BD), promises to transform user experiences by predicting and fulfilling needs before users even express them. While this proactive approach seems revolutionary, many businesses struggle to meet the high expectations it sets. Joana Cerejo delves into the challenges of anticipatory design, highlights key failures, and offers a framework to help designers and businesses succeed in this complex landscape.",
    "content": "Consider the early days of the internet, when websites like NBC News and Amazon cluttered their pages with flashing banners and labyrinthine menus. In the early 2000s, Steve Krug‚Äôs book Don‚Äôt Make Me Think arrived like a lighthouse in a storm, advocating for simplicity and user-centric design.\nToday‚Äôs digital world is flooded with choices, information, and data, which is both exciting and overwhelming. Unlike Krug‚Äôs time,\nThe era of click-and-command is fading, giving way to a more seamless and intelligent relationship between humans and machines.\nKrug‚Äôs emphasis on clarity in design is more relevant than ever. In anticipatory design, clarity is not just about simplicity or ease of use ‚Äî it‚Äôs about transparency and accountability. These two pillars are crucial but often missing as businesses navigate this new paradigm. Users today find themselves in a digital landscape that is not only confusing but increasingly intrusive. AI predicts their desires based on past behavior but rarely explains how these predictions are made, leading to growing mistrust.\nTransparency is the foundation of clarity. It involves openly communicating how AI-driven decisions are made, what data is being collected, and how it is being used to anticipate needs. By demystifying these processes, designers can alleviate user concerns about privacy and control, thereby building trust.\nAccountability complements transparency by ensuring that anticipatory systems are designed with ethical considerations in mind. This means creating mechanisms for users to understand, question, and override automated decisions if needed. When users feel that the system is accountable to them, their trust in the technology ‚Äî and the brand ‚Äî deepens.\nImage AI like a waiter at a restaurant. Without AI, they wait for you to interact with them and place your order. But with anticipatory design powered by AI and ML, the waiter can analyze your past orders (historical data) and current behavior (contextual data) ‚Äî perhaps, by noticing you always start with a glass of sparkling water.\nThis proactive approach has evolved since the late 1990s, with early examples like Amazon‚Äôs recommendation engine and TiVo‚Äôs predictive recording. These pioneering services demonstrated the potential of predictive analytics and ML to create personalized, seamless user experiences.\nAmazon was a pioneer in using data to predict and suggest products to customers, setting the standard for personalized experiences in e-commerce.\nTiVo‚Äôs ability to learn users‚Äô viewing habits and automatically record shows marked an early step toward predictive, personalized entertainment.\nNetflix began offering personalized movie recommendations based on user ratings and viewing history in 2006. It helped popularize the idea of anticipatory design in the digital entertainment space.\nDesigning for anticipation is designing for a future that is not here yet but has already started moving toward us.\nDesigning for anticipation involves more than reacting to current trends; it requires businesses to plan strategically for future user needs. Two critical concepts in this process are forecasting and backcasting.\nThink of it like planning a dream vacation. Forecasting would involve looking at your past trips to guess where you might go next. But backcasting lets you pick your ideal destination first, then plan the perfect itinerary to get you there.\nThis method helps in planning and decision-making based on probable future scenarios. Consider Netflix, which uses forecasting to analyze viewers‚Äô past viewing habits and predict what they might want to watch next. By leveraging data from millions of users, Netflix can anticipate individual preferences and serve personalized recommendations that keep users engaged and satisfied.\nBackcasting takes a different approach. Instead of using data to predict the future, it starts with defining a desired future outcome ‚Äî a clear user intent. The process then works backward to identify the steps needed to achieve that goal. This goal-oriented approach crafts an experience that actively guides users toward their desired future state.\nFor instance, a financial planning app might start with a user‚Äôs long-term financial goal, such as saving for retirement, and then design an experience that guides the user through each step necessary to reach that goal, from budgeting tips to investment recommendations.\nThe true power of anticipatory design emerges when businesses efficiently integrate both forecasting and backcasting into their design processes.\nFor example, Tesla‚Äôs approach to electric vehicles exemplifies this integration. By forecasting market trends and user preferences, Tesla can introduce features that appeal to users today. Simultaneously, by backcasting from a vision of a sustainable future, Tesla designs its vehicles and infrastructure to guide society toward a world where electric cars are the norm and carbon emissions are significantly reduced.\nAs businesses increasingly adopt anticipatory design, the integration of forecasting and backcasting becomes essential. Forecasting allows businesses to predict and respond to immediate user needs, while backcasting ensures these responses align with long-term goals. Despite its potential, anticipatory design often fails in execution, leaving few examples of success.\nOver the past decade, I‚Äôve observed and documented the rise and fall of several ambitious anticipatory design ventures. Among them, three ‚Äî Digit, LifeBEAM Vi Sense Headphones, and Mint ‚Äî highlight the challenges of this approach.\nDigit aimed to simplify personal finance with algorithms that automatically saved money based on user spending. However, the service often missed the mark, lacking the contextual awareness necessary to accurately assess users‚Äô real-time financial situations. This led to unexpected withdrawals, frustrating users, especially those living paycheck to paycheck. The result was a breakdown in trust, with the service feeling more intrusive than supportive.\nLifeBEAM Vi Sense Headphones was marketed as an AI-driven fitness coach, promising personalized guidance during workouts. In practice, the AI struggled to deliver tailored coaching, offering generic and unresponsive advice. As a result, users found the experience difficult to navigate, ultimately limiting the product‚Äôs appeal and effectiveness. This disconnection between the promised personalized experience and the actual user experience left many disappointed.\nMint aimed to empower users to manage their finances by providing automated budgeting tools and financial advice. While the service had the potential to anticipate user needs, users often found that the suggestions were not tailored to their unique financial situations, resulting in generic advice that did not align with their personal goals.\nThe lack of personalized, actionable steps led to a mismatch between user expectations and service delivery. This misalignment caused some users to disengage, feeling that Mint was not fully attuned to their unique financial journeys.\nThe stories of Digit, LifeBEAM Vi Sense, and Mint underscore a common pitfall: over-promising and under-delivering. These services focused too much on predictive power and not enough on user experience. When anticipatory systems fail to consider individual nuances, they breed frustration rather than satisfaction, highlighting the importance of aligning design with human experience.\nDigit‚Äôs approach to automated savings, for instance, became problematic when users found its decisions opaque and unpredictable. Similarly, LifeBEAM‚Äôs Vi Sense headphones struggled to meet diverse user needs, while Mint‚Äôs rigid tools failed to offer the personalized insights users expected. These examples illustrate the delicate balance anticipatory design must strike between proactive assistance and user control.\nMany anticipatory services rely heavily on data-driven forecasting, but predictions can fall short without understanding the broader user context. Mint initially provided value with basic budgeting tools but failed to evolve with users‚Äô growing needs for more sophisticated financial advice. Digit, too, struggled to adapt to different financial habits, leading to dissatisfaction and limited success.\nWhen systems become overly complex, as seen with LifeBEAM Vi Sense headphones, users may find them difficult to navigate or control, compromising trust and engagement. Mint‚Äôs generic recommendations, born from a failure to align immediate user needs with long-term goals, further illustrate the risks of complexity without clarity.\nTrust is critical in anticipatory design, particularly in services handling sensitive data like finance or health. Digit and Mint both encountered trust issues as users grew skeptical of how decisions were made and whether these services truly had their best interests in mind. Without clear communication and control, even the most sophisticated systems risk alienating users.\nWhile forecasting and backcasting work well for common scenarios, they can struggle with edge cases or unpredictable user behaviors. If an anticipatory service can‚Äôt handle these effectively, it risks providing a poor user experience and, in the worst-case scenario, harming the user. Anticipatory systems must be prepared to handle edge cases and unpredictable scenarios.\nLifeBEAM Vi Sense headphones struggled when users deviated from expected fitness routines, offering a one-size-fits-all experience that failed to adapt to individual needs. This highlights the importance of allowing users control, even when a system proactively assists them.\nWe can follow a layered approach to plan a service that can evolve according to user actions and explicit ever-evolving intent.\nBut how do we design for intent without misaligning anticipation and user control or mismatching user expectations and service delivery?\nAt the core of this approach is intent ‚Äî the primary purpose or goal that the design must achieve. Surrounding this are workflows, which represent the structured tasks to achieve the intent. Finally, algorithms analyze user data and optimize these workflows.\nFor instance, Thrive (see the image below), a digital wellness platform, aligns algorithms and workflows with the core intent of improving well-being. By anticipating user needs and offering personalized programs, Thrive helps users achieve sustained behavior change.\nIt perfectly exemplifies the three-layered concentric representation for achieving behavior change through anticipatory design:\n1. Innermost layer: Intent\nImprove overall well-being: Thrive‚Äôs core intent is to help users achieve a healthier and more fulfilling life. This encompasses aspects like managing stress, improving sleep quality, and boosting energy levels.\n2. Middle layer: Workflows\nPersonalized programs and support: Thrive uses user data (sleep patterns, activity levels, mood) to create programs tailored to their specific needs and goals. These programs involve various workflows, such as:\n3. Outermost layer: Algorithms\nData analysis and personalized recommendations: Thrive utilizes algorithms to analyze user data and generate actionable insights. These algorithms perform tasks like the following:\nBy aligning algorithms and workflows with the core intent of improving well-being, Thrive provides a personalized and proactive approach to behavior change. Here‚Äôs how it benefits users:\nAnticipatory design is inherently future-oriented, making it both appealing and challenging. To succeed, businesses must combine anticipation ‚Äî predicting future needs ‚Äî with foresight, a systematic approach to analyzing and preparing for future changes.\nForesight involves considering alternative future scenarios and making informed decisions to navigate toward desired outcomes. For example, Digit and Mint struggled because they didn‚Äôt adequately handle edge cases or unpredictable scenarios, a failure in their foresight strategy (see an image below).\nAs mentioned, while forecasting and backcasting work well for common scenarios, they can struggle with edge cases or unpredictable user behaviors. Under anticipatory design, if we demote foresight for a second plan, the business will fail to account for and prepare for emerging trends and disruptive changes. Strategic foresight helps companies to prepare for the future and develop strategies to address possible challenges and opportunities.\nThe Foresight process generally involves interrelated activities, including data research, trend analysis, planning scenarios, and impact assessment. The ultimate goal is to gain a broader and deeper understanding of the future to make more informed and strategic decisions in the design process and foresee possible frictions and pitfalls in the user experience.\nPredicting the future is no easy task. However, design can borrow foresight techniques to imagine, anticipate, and shape a future where technology seamlessly integrates with users evolving needs. To effectively implement anticipatory design, it‚Äôs essential to balance human control with AI automation. Here‚Äôs a 3-step approach to integrate future thinking into your workflow:\nThis proposed framework (see an image above) aims to integrate forecasting and backcasting while emphasizing user intent, transparency, and continuous improvement, ensuring that businesses create experiences that are both predictive and deeply aligned with user needs.\nObjective: Identify the major trends and forces shaping the future landscape.\nComponents:\n1. Understand the User‚Äôs Intent\n2. Forecasting: Predicting Near-Term User Needs\nActivities:\nObjective: Explore a range of potential futures based on these changing directions.\nComponents:\n1. Scenario Planning\n2. Backcasting: Designing from the Desired Future\nActivities:\nObjective: Leverage these scenarios to spark new ideas and guide impactful design decisions.\nComponents:\n1. Integrate into the Human-Centered Design Process\n2. Implement and Monitor: Ensuring Ongoing Relevance\nActivities:\nAnticipatory design holds immense potential to revolutionize user experiences by predicting and fulfilling needs before they are even articulated. However, as seen in the examples discussed, the gap between expectation and execution can lead to user dissatisfaction and erode trust.\nTo navigate the future of anticipatory design successfully, businesses must prioritize transparency, accountability, and user empowerment. By enhancing contextual awareness, maintaining user control, and aligning short-term predictions with long-term goals, companies can create experiences that are not only innovative but also deeply resonant with their users‚Äô needs.\nMoreover, combining anticipation with foresight allows businesses to prepare for a range of future scenarios, ensuring that their designs remain relevant and effective even as circumstances change. The proposed 3-step framework ‚Äî anticipating directions of change, imagining alternative scenarios, and shaping our choices ‚Äî provides a practical roadmap for integrating these principles into the design process.\nAs we move forward, the challenge will be to balance the power of AI with the human need for clarity, control, and trust. By doing so, businesses can fulfill the promise of anticipatory design, creating products and services that are not only efficient and personalized but also ethical and user-centric.\nIn the end,\nIt is a tool to empower users, not to dictate their choices. When done right, anticipatory design can lead to a future where technology seamlessly integrates with our lives, making everyday experiences simpler, more intuitive, and ultimately more satisfying."
  },
  {
    "url": "/2024/09/sticky-headers-full-height-elements-tricky-combination/",
    "title": "Sticky Headers And Full-Height Elements: A Tricky Combination",
    "author": "Philip Braunen",
    "date": "Sep 5, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS",
      "Tools",
      "Techniques"
    ],
    "summary": "Sticky positioning is one of those CSS features that‚Äôs pretty delicate and can be negated by a lot of things, so here‚Äôs another one to add to your mental catalog: Sticky elements don‚Äôt play nicely if they have to coordinate with other elements to make up a combined height, like 100vh. Philip Braunen explores why this happens and presents a solution to fix it.",
    "content": "I was recently asked by a student to help with a seemingly simple problem. She‚Äôd been working on a website for a coffee shop that sports a sticky header, and she wanted the hero section right underneath that header to span the rest of the available vertical space in the viewport.\nHere‚Äôs a visual demo of the desired effect for clarity.\nLooks like it should be easy enough, right? I was sure (read: overconfident) that the problem would only take a couple of minutes to solve, only to find it was a much deeper well than I‚Äôd assumed.\nBefore we dive in, let‚Äôs take a quick look at the initial markup and CSS to see what we‚Äôre working with:\nWith those declarations, the .header will stick to the top of the page. And yet the .hero element below it remains intrinsically sized. This is what we want to change.\nThe first impulse you might have, as I did, is to enclose the header and hero in some sort of parent container and give that container 100vh to make it span the viewport. After that, we could use Flexbox to distribute the children and make the hero grow to fill the remaining space.\nThis looks correct at first glance, but watch what happens when scrolling past the hero.\nThe sticky header gets trapped in its parent container! But.. why?\nIf you‚Äôre anything like me, this behavior is unintuitive, at least initially. You may have heard that sticky is a combination of relative and fixed positioning, meaning it participates in the normal flow of the document but only until it hits the edges of its scrolling container, at which point it becomes fixed. While viewing sticky as a combination of other values can be a useful mnemonic, it fails to capture one important difference between sticky and fixed elements:\nA position: fixed element doesn‚Äôt care about the parent it‚Äôs nested in or any of its ancestors. It will break out of the normal flow of the document and place itself directly offset from the viewport, as though glued in place a certain distance from the edge of the screen.\nConversely, a position: sticky element will be pushed along with the edges of the viewport (or next closest scrolling container), but it will never escape the boundaries of its direct parent. Well, at least if you don‚Äôt count visually transform-ing it. So a better way to think about it might be, to steal from Chris Coyier, that ‚Äúposition: sticky is, in a sense, a locally scoped position: fixed.‚Äù This is an intentional design decision, one that allows for section-specific sticky headers like the ones made famous by alphabetical lists in mobile interfaces.\nOkay, so this approach is a no-go for our predicament. We need to find a solution that doesn‚Äôt involve a container around the header.\nMaybe we can make our lives a bit simpler. Instead of a container, what if we gave the .header element a fixed height of, say, 150px? Then, all we have to do is define the .hero element‚Äôs height as height: calc(100vh - 150px).\nThis approach kinda works, but the downsides are more insidious than our last attempt because they may not be immediately apparent. You probably noticed that the header is too tall, and we‚Äôd wanna do some math to decide on a better height.\nThinking ahead a bit,\nAll of these things could subtly change the .header‚Äôs ideal size, and chasing the right height values for each scenario has the potential to spiral into a maintenance nightmare of unmanageable breakpoints and magic numbers ‚Äî especially if we consider this needs to be done not only for the .header but also the .hero element that depends on it.\nI would argue that this workaround also just feels wrong. Fixed heights break one of the main affordances of CSS layout ‚Äî the way elements automatically grow and shrink to adapt to their contents ‚Äî and not relying on this usually makes our lives harder, not simpler.\nSo, we‚Äôre left with‚Ä¶\nNow that we‚Äôve figured out the constraints we‚Äôre working with, another way to phrase the problem is that we want the .header and .hero to collectively span 100vh without sizing the elements explicitly or wrapping them in a container. Ideally, we‚Äôd find something that already is 100vh and align them to that. This is where it dawned on me that display: grid may provide just what we need!\nLet‚Äôs try this: We declare display: grid on the body element and add another element before the .header that we‚Äôll call .above-the-fold-spacer. This new element gets a height of 100vh and spans the grid‚Äôs entire width. Next, we‚Äôll tell our spacer that it should take up two grid rows and we‚Äôll anchor it to the top of the page.\nThis element must be entirely empty because we don‚Äôt ever want it to be visible or to register to screen readers. We‚Äôre merely using it as a crutch to tell the grid how to behave.\nThis is the magic ingredient.\nBy adding the spacer, we‚Äôve created two grid rows that together take up exactly 100vh. Now, all that‚Äôs left to do, in essence, is to tell the .header and .hero elements to align themselves to those existing rows. We do have to tell them to start at the same grid column line as the .above-the-fold-spacer element so that they won‚Äôt try to sit next to it. But with that done‚Ä¶ ta-da!\nThe reason this works is that a grid container can have multiple children occupying the same cell overlaid on top of each other. In a situation like that, the tallest child element defines the grid row‚Äôs overall height ‚Äî or, in this case, the combined height of the two rows (100vh).\nTo control how exactly the two visible elements divvy up the available space between themselves, we can use the grid-template-rows property. I made it so that the first row uses min-content rather than 1fr. This is necessary so that the .header doesn‚Äôt take up the same amount of space as the .hero but instead only takes what it needs and lets the hero have the rest.\nHere‚Äôs our full solution:\nAnd voila: A sticky header of arbitrary size above a hero that grows to fill the remaining visible space!\nIt‚Äôs worth noting that the HTML order of the elements matters here. If we define .above-the-fold-spacer after our .hero section, it will overlay and block access to the elements underneath. We can work around this by declaring either order: -1, z-index: -1, or visibility: hidden.\nKeep in mind that this is a simple example. If you were to add a sidebar to the left of your page, for example, you‚Äôd need to adjust at which column the elements start. Still, in the majority of cases, using a CSS Grid approach is likely to be less troublesome than the Sisyphean task of manually managing and coordinating the height values of multiple elements.\nAnother upside of this approach is that it‚Äôs adaptable. If you decide you want a group of three elements to take up the screen‚Äôs height rather than two, then you‚Äôd make the invisible spacer span three rows and assign the visible elements to the appropriate one. Even if the hero element‚Äôs content causes its height to exceed 100vh, the grid adapts without breaking anything. It‚Äôs even well-supported in all modern browsers.\nThe more I think about this technique, the more I‚Äôm persuaded that it‚Äôs actually quite clean. Then again, you know how lawyers can talk themselves into their own arguments? If you can think of an even simpler solution I‚Äôve overlooked, feel free to reach out and let me know!"
  },
  {
    "url": "/2024/09/big-difference-between-digital-product-and-web-design/",
    "title": "The Big Difference Between Digital Product And Web Design",
    "author": "Paul Boag",
    "date": "Sep 3, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Design",
      "Web Design",
      "User Experience"
    ],
    "summary": "Designing for digital products requires a different mindset than traditional websites. It‚Äôs all about continuous adaptation, refining, and iterating as user behavior and needs evolve. Paul Boag reflects on the key differences, including how the frequency of usage impacts your design approach and what you can do about it.",
    "content": "In the early days of the web, I remember how annoying it was when print designers would claim they could design websites, too. They assumed that just because they could design for one medium, they could design for the other.\nThat assumption often led to bad user experiences. The skills for effective web design are quite different from those for print design.\nA similar thing happens today. Designers know how to design traditional marketing and e-commerce sites. They, therefore, presume they have the skills to work on SaaS apps and other digital projects.\nBut when it comes to design, there‚Äôs a big distinction between traditional websites and digital products. If we want to work on digital products, we need to understand those differences and adopt a different approach to our work.\nThe biggest difference is that users interact with digital products more than most websites.\nThink about your own web use. What are the sites you visit most often? If you listed your top ten, well over half would be some form of digital product, from a social media application to a productivity tool.\nSo, with that in mind, let‚Äôs dive into the specifics of how the frequency of usage impacts our design approach and what we can do about it.\nThe more we interact with a web app or website, the more important the overall user experience becomes. Users develop deeper connections with digital products. They also form more complex mental models of products they use often. This changes how they see the app in two fundamental ways.\nFirst, friction points become increasingly annoying. Users interact with a digital product many times per day. Any small problem in the interface compounds quickly.\nWhen you encounter a clunky UI or confusing workflow on a website you only visit once in a while, it‚Äôs frustrating but easy to overlook. But, when that same friction occurs in an app you use multiple times per day, it becomes a major source of irritation.\nSecond, the more we use an app, the more familiar we become with it and how it works. We end up using the app automatically, without even thinking, much like when you‚Äôve been driving a car for years, you don‚Äôt think about the process. This is known as procedural knowledge.\nThis is great news for digital product designers, as it means we can create interfaces that become second nature to our users. But, if we break their mental models or introduce unexpected changes, we risk causing frustration and disruption.\nSo, knowing these two things, how does this affect our approach to digital product design? Well, let‚Äôs start by considering the problem of friction.\nAs digital product designers, we need to become obsessed with removing friction from the user experience. Failure to do so will alienate users over time and ultimately lead to churn.\nTo mitigate friction, we need to constantly seek out friction points. We need to diagnose the exact problem and then test any solution to ensure it does, in fact, make things better.\nSo, how exactly do we find friction points?\nThe most obvious way is to listen to customers. User feedback is crucial in identifying friction points in the user experience. However, we can‚Äôt simply rely on that. Analytics can be your friend, too.\nMicrosoft Clarity offers essential insights to pinpoint issues on your app.\nI would highly recommend using a tool like Microsoft Clarity. It gives detailed insights into user behavior. They help find points of friction. These include the following:\nThese will help you identify potential friction points that you can then investigate further.\nOnce you know where things are going wrong, you can use heat maps and session recordings in Clarity. They will help you understand the problem. Why are people excessively scrolling or rage-clicking, for example?\nSession recordings are valuable for pinpointing particular problems in the interface.\nIf the heat maps or session recordings don‚Äôt make things clear, that is where you would need to consider usability testing.\nOnce you understand the problem, you can then begin exploring solutions and testing them rigorously to ensure they effectively reduce friction.\nHow you test your solution to the point of friction will depend on the size and complexity of the changes you need to make.\nFor small changes, such as tweaking the UI or changing some text, A/B testing is often the best approach. You show the new solution to a subset of your users and measure the impact on those indicators of frustration.\nBut A/B testing isn‚Äôt always the right approach. If your app has lower levels of traffic, getting results from a statistically significant A/B test can be time-consuming.\nAlso, when your solution involves big changes, like adding new features or redesigning many screens, A/B testing can be expensive. That is because you need to first fully develop the solution before you can test it, meaning that it can prove costly if that solution turns out not to work.\nYour best approach in such situations is to create a prototype for remote testing.\nInitially, I usually conduct unfacilitated testing with a tool such as Maze. Unfacilitated testing is easy to set up. It requires minimal time investment, and Maze offers analytics, so you don‚Äôt necessarily need to watch every session back.\nMaze serves as a valuable resource for conducting remote testing, offering both test data and recordings for each test.\nIf testing uncovers issues you can‚Äôt fix, then try facilitated testing. Facilitated testing enables you to delve into any arising issues by asking questions.\nOnce you have a solution that works, it‚Äôs time to roll that feature out. But you need to be careful at this point because of the procedural knowledge I mentioned earlier.\nIntroducing fixes to a user interface has a good chance of breaking a user‚Äôs procedural knowledge. Interface elements are often moved and so are no longer where users expect to find them, or they look different, and so users miss them.\nThis can upset many existing customers. That can panic stakeholders and lead to rash decisions.\nTo some extent, you need to accept that this is inevitable and prepare stakeholders for this eventuality. Users will normally adapt in a couple of weeks of regular use, and so there is no immediate need to panic.\nThat said, there are things you can do to mitigate the reaction.\nSlack use tooltips to explain how their interface works.\nThe key is to strike a balance. You must add needed improvements while causing minimal disruption to users‚Äô workflows. You will also need to carefully monitor adoption and adapt accordingly.\nThat constant monitoring and adaptation lies at the heart of digital product design. You cannot rely solely on the initial solution but must be prepared to continuously refine and iterate as user behavior and needs evolve."
  },
  {
    "url": "/2024/09/how-create-weekly-google-analytics-report-posts-slack/",
    "title": "How To Create A Weekly Google Analytics Report That Posts To Slack",
    "author": "Paul Scanlon",
    "date": "Sep 6, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Workflow",
      "Analytics",
      "User Research"
    ],
    "summary": "Google Analytics is often on a ‚Äúneed to know‚Äù basis, but why not flip the script? Paul Scanlon shares how he wrote a GitHub Action that queries Google Analytics to automatically generate and post a top ten page views report to Slack, making it incredibly easy to track page performance and share insights with your team.",
    "content": "Google Analytics is great, but not everyone in your organization will be granted access. In many places I‚Äôve worked, it was on a kind of ‚Äúneed to know‚Äù basis.\nIn this article, I‚Äôm gonna flip that on its head and show you how I wrote a GitHub Action that queries Google Analytics, generates a top ten list of the most frequently viewed pages on my site from the last seven days and compares them to the previous seven days to tell me which pages have increased in views, which pages have decreased in views, which pages have stayed the same and which pages are new to the list.\nThe report is then nicely formatted with icon indicators and posted to a public Slack channel every Friday at 10 AM.\nNot only would this surfaced data be useful for folks who might need it, but it also provides an easy way to copy and paste or screenshot the report and add it to a slide for the weekly company/department meeting.\nHere‚Äôs what the finished report looks like in Slack, and below, you‚Äôll find a link to the GitHub Repository.\nTo use this repository, follow the steps outlined in the README.\nTo build this workflow, you‚Äôll need admin access to your Google Analytics and Slack Accounts and administrator privileges for GitHub Actions and Secrets for a GitHub repository.\nNaturally, all of the code can be changed to suit your requirements, and in the following sections, I‚Äôll explain the areas you‚Äôll likely want to take a look at.\nThe file name of the Action weekly-analytics.report.yml isn‚Äôt seen anywhere other than in the code/repo but naturally, change it to whatever you like, you won‚Äôt break anything.\nThe name and jobs: names detailed below are seen in the GitHub UI and Workflow logs.\nThe cron syntax determines when the Action will run. Schedules use POSIX cron syntax and by changing the numbers you can determine when the Action runs.\nYou could also change the secrets variable names; just make sure you update them in your repository Settings.\nThe Google Analytics API request I‚Äôm using is set to pull the fullPageUrl and pageTitle for the totalUsers in the last seven days, and a second request for the previous seven days, and then aggregates the totals and limits the responses to 10.\nYou can use Google‚Äôs GA4 Query Explorer to construct your own query, then replace the requests.\nThere are two functions to determine which page views have increased, decreased, stayed the same, or are new.\nThe first is a simple reduce function that returns the URL and a count for each.\nThe second maps over the results from this week and compares them to last week.\nThe final function is used to determine the status of each.\nI‚Äôve purposely left the code fairly verbose, so it‚Äôll be easier for you to add console.log to each of the functions to see what they return.\nThe Slack message config I‚Äôm using creates a heading with an emoji, a divider, and a paragraph explaining what the message is.\nBelow that I‚Äôm using the context object to construct a report by iterating over comparisons and returning an object containing Slack specific message syntax which includes an icon, a count, the name of the page and a link to each item.\nYou can use Slack‚Äôs Block Kit Builder to construct your own message format.\nBefore you can run the GitHub Action, you will need to complete a number of Google, Slack, and GitHub steps.\nReady to get going?\nHead over to your Google Cloud console, and from the dropdown menu at the top of the screen, click Select a project, and when the modal opens up, click NEW PROJECT.\nOn the next screen, give your project a name and click CREATE. In my example, I‚Äôve named the project smashing-weekly-analytics.\nIn this step, you‚Äôll enable the Google Analytics Data API for your new project. From the left-hand sidebar, navigate to APIs & Services > Enable APIs & services. At the top of the screen, click + ENABLE APIS & SERVICES.\nSearch for ‚ÄúGoogle analytics data API,‚Äù select it from the list, then click ENABLE.\nWith the API enabled in your project, you can now create the required credentials. Click the CREATE CREDENTIALS button at the top right of the screen to set up a new Service account.\nA Service account allows an ‚Äúapplication‚Äù to interact with Google APIs, providing the credentials include the required services. In this example, the credentials grant access to the Google Analytics Data API.\nOn the next screen, select Google Analytics Data API from the dropdown menu and Application data, then click NEXT.\nOn the next screen, give your Service account a name, ID, and description (optional). Then click CREATE AND CONTINUE.\nIn my example, I‚Äôve given my service account a name and ID of smashing-weekly-analytics and added a short description that explains what the service account does.\nOn the next screen, select Owner for the Role, then click CONTINUE.\nYou can leave the fields blank in this last step and click DONE when you‚Äôre ready.\nFrom the left-hand navigation, select Service Accounts, then click the ‚Äúmore dots‚Äù to open the menu and select Manage keys.\nOn the next screen, locate the KEYS tab at the top of the screen, then click ADD KEY and select Create new key.\nOn the next screen, select JSON as the key type, then click CREATE to download your Google Application credentials .json file.\nIf you open the .json file in your code editor, you should be looking at something similar to the one below.\nIn case you‚Äôre wondering, no, you can‚Äôt use an object as a variable defined in an .env file. To use these credentials, it‚Äôs necessary to convert the whole file into a base64 string.\nNote: I wrote a more detailed post about how to use Google Application credentials as environment variables here: ‚ÄúHow to Use Google Application .json Credentials in Environment Variables.‚Äù\nFrom your terminal, run the following: replace name-of-creds-file.json with the name of your .json file.\nIf you‚Äôve already cloned the repo and followed the Getting started steps in the README, add the base64 string returned after running the above and add it to the GOOGLE_APPLICATION_CREDENTIALS_BASE64 variable in your .env file, but make sure you wrap the string with double quotation makes.\nThat completes the Google project side of things. The next step is to add your service account email to your Google Analytics property and find your Google Analytics Property ID.\nWhilst your service account now has access to the Google Analytics Data API, it doesn‚Äôt yet have access to your Google Analytics account.\nTo make queries to the Google Analytics API, you‚Äôll need to know your Property ID. You can find it by heading over to your Google Analytics account. Make sure you‚Äôre on the correct property (in the screenshot below, I‚Äôve selected paulie.dev ‚Äî GA4).\nClick the admin cog in the bottom left-hand side of the screen, then click Property details.\nOn the next screen, you‚Äôll see the PROPERTY ID in the top right corner. If you‚Äôve already cloned the repo and followed the Getting started steps in the README, add the property ID value to the GA4_PROPERTY_ID variable in your .env file.\nFrom the Google application credential .json file you downloaded earlier, locate the client_email and copy the email address.\nIn my example, it looks like this: smashing-weekly-analytics@smashing-weekly-analytics.iam.gserviceaccount.com.\nNow navigate to Property access management from the left hide side navigation and click the + in the top right-hand corner, then click Add users.\nOn the next screen, add the client_email to the Email addresses input, uncheck Notify new users by email, and select Viewer under Direct roles and data restrictions, then click Add.\nThat completes the Google Analytics properties section. Your ‚Äúapplication‚Äù will use the Google application credentials containing the client_email and will now have access to your Google Analytics account via the Google Analytics Data API.\nIn the following steps, you‚Äôll create a new Slack channel that will be used to post messages sent from your ‚Äúapplication‚Äù using a Slack Webhook.\nCreate a new channel in your Slack workspace. I‚Äôve named mine #weekly-analytics-report. You‚Äôll need to set this up before proceeding to the next step.\nHead over to the slack api dashboard, and click Create an App.\nOn the next screen, select From an app manifest.\nOn the next screen, select your Slack workspace, then click Next.\nOn this screen, you can give your app a name. In my example, I‚Äôve named my Weekly Analytics Report. Click Next when you‚Äôre ready.\nOn step 3, you can just click Done.\nWith the App created, you can now set up a Webhook.\nNavigate to Incoming Webhooks from the left-hand navigation, then switch the Toggle to On to activate incoming webhooks. Then, at the bottom of the screen, click Add New Webook to Workspace.\nOn the next screen, select your Slack workspace and a channel that you‚Äôd like to use to post messages, too, and click Allow.\nYou should now see your new Slack Webhook with a copy button. Copy the Webhook URL, and if you‚Äôve already cloned the repo and followed the Getting started steps in the README, add the Webhook URL to the SLACK_WEBHOOK_URL variable in your .env file.\nFrom the left-hand navigation, select Basic Information. On this screen, you can customize your app and add an icon and description. Be sure to click Save Changes when you‚Äôre done.\nIf you now head over to your Slack, you should see that your app has been added to your workspace.\nThat completes the Slack section of this article. It‚Äôs now time to add your environment variables to GitHub Secrets and run the workflow.\nHead over to the Settings tab of your GitHub repository, then from the left-hand navigation, select Secrets and variables, then click Actions.\nAdd the three variables from your .env file under Repository secrets.\nA note on the base64 string: You won‚Äôt need to include the double quotes!\nTo test if your Action is working correctly, head over to the Actions tab of your GitHub repository, select the Job name (Weekly Analytics Report), then click Run workflow.\nIf everything worked correctly, you should now be looking at a nicely formatted list of the top ten page views on your site in Slack.\nAnd that‚Äôs it! A fully automated Google Analytics report that posts directly to your Slack. I‚Äôve worked in a few places where Google Analytics data was on lockdown, and I think this approach to sharing Analytics data with Slack (something everyone has access to) could be super valuable for various people in your organization."
  },
  {
    "url": "/2024/08/generating-unique-random-numbers-javascript-using-sets/",
    "title": "Generating Unique Random Numbers In JavaScript Using Sets",
    "author": "Amejimaobari Ollornwi",
    "date": "Aug 26, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "JavaScript",
      "Coding",
      "Techniques"
    ],
    "summary": "Want to create more randomized effects in your JavaScript code? The Math.random() method alone, with its limitations, won‚Äôt cut it for generating unique random numbers. Amejimaobari Ollornwi explains how to generate a series of unique random numbers using the Set object, how to use these random numbers as indexes for arrays, and explores some practical applications of randomization.",
    "content": "JavaScript comes with a lot of built-in functions that allow you to carry out so many different operations. One of these built-in functions is the Math.random() method, which generates a random floating-point number that can then be manipulated into integers.\nHowever, if you wish to generate a series of unique random numbers and create more random effects in your code, you will need to come up with a custom solution for yourself because the Math.random() method on its own cannot do that for you.\nIn this article, we‚Äôre going to be learning how to circumvent this issue and generate a series of unique random numbers using the Set object in JavaScript, which we can then use to create more randomized effects in our code.\nNote: This article assumes that you know how to generate random numbers in JavaScript, as well as how to work with sets and arrays.\nOne of the ways to generate a unique series of random numbers in JavaScript is by using Set objects. The reason why we‚Äôre making use of sets is because the elements of a set are unique. We can iteratively generate and insert random integers into sets until we get the number of integers we want.\nAnd since sets do not allow duplicate elements, they are going to serve as a filter to remove all of the duplicate numbers that are generated and inserted into them so that we get a set of unique integers.\nHere‚Äôs how we are going to approach the work:\nThe following is a quick example of how the code comes together:\nWhat the code does is create a new Set object and then generate and add the random numbers to the set until our desired number of integers has been included in the set. The reason why we‚Äôre returning an array is because they are easier to work with.\nOne thing to note, however, is that the number of integers you want to generate (represented by count in the code) should be less than the upper limit of your range plus one (represented by max + 1 in the code). Otherwise, the code will run forever. You can add an if statement to the code to ensure that this is always the case:\nIt is one thing to generate a series of random numbers. It‚Äôs another thing to use them.\nBeing able to use a series of random numbers with arrays unlocks so many possibilities: you can use them in shuffling playlists in a music app, randomly sampling data for analysis, or, as I did, shuffling the tiles in a memory game.\nLet‚Äôs take the code from the last example and work off of it to return random letters of the alphabet. First, we‚Äôll construct an array of letters:\nThen we map the letters in the range of numbers:\nIn the original code, the generateRandomNumbers() function is logged to the console. This time, we‚Äôll construct a new variable that calls the function so it can be consumed by randomAlphabets:\nNow we can log the output to the console like we did before to see the results:\nAnd, when we put the generateRandomNumbers() function definition back in, we get the final code:\nSo, in this example, we created a new array of alphabets by randomly selecting some letters in our englishAlphabets array.\nYou can pass in a count argument of englishAlphabets.length to the generateRandomNumbers function if you desire to shuffle the elements in the englishAlphabets array instead. This is what I mean:\nIn this article, we‚Äôve discussed how to create randomization in JavaScript by covering how to generate a series of unique random numbers, how to use these random numbers as indexes for arrays, and also some practical applications of randomization.\nThe best way to learn anything in software development is by consuming content and reinforcing whatever knowledge you‚Äôve gotten from that content by practicing. So, don‚Äôt stop here. Run the examples in this tutorial (if you haven‚Äôt done so), play around with them, come up with your own unique solutions, and also don‚Äôt forget to share your good work. Ciao!"
  },
  {
    "url": "/2024/08/pricing-projects-freelancer-agency-owner/",
    "title": "Pricing Projects As A Freelancer Or Agency Owner",
    "author": "Paul Boag",
    "date": "Aug 16, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Business",
      "Workflow",
      "Pricing"
    ],
    "summary": "Discover effective pricing strategies for digital projects. Learn how to balance fixed pricing, time and materials, and value-based approaches while managing client expectations and scope creep.",
    "content": "Pricing projects can be one of the most challenging aspects of running a digital agency or working as a freelance web designer. It‚Äôs a topic that comes up frequently in discussions with fellow professionals in my Agency Academy.\nOver my years in the industry, I‚Äôve found that there are essentially three main approaches to pricing:\nEach has its merits and drawbacks, and understanding these can help you make better decisions for your business. Let‚Äôs explore each of these in detail and then dive into what I believe is the most effective strategy.\nFixed pricing is often favored by clients because it reduces their risk and allows for easier comparison between competing proposals. On the surface, it seems straightforward: you quote a price, the client agrees, and you deliver the project for that amount. However, this approach comes with significant drawbacks for agencies and freelancers:\nWhile fixed pricing might seem straightforward, it‚Äôs not without its complications. The rigidity of this model can stifle creativity and adaptability, two crucial elements in successful web projects. So, let‚Äôs look at an alternative approach that offers more flexibility.\nTime and materials (T&M) pricing offers a fairer system where the client only pays for the hours actually worked. This approach has several advantages:\nHowever, T&M pricing isn‚Äôt without its drawbacks:\nT&M pricing can work well in many scenarios, especially for long-term or complex projects where requirements may evolve. However, it‚Äôs not always the perfect solution, particularly for clients with strict budgets or those who prefer more certainty. There‚Äôs one more pricing model that‚Äôs often discussed in the industry, which attempts to tie pricing directly to results.\nValue-based pricing is often touted as the holy grail of pricing strategies. The idea is to base your price on the value your work will generate for the client rather than on the time it takes or a fixed estimate. While this sounds great in theory, it‚Äôs rarely a realistic approach in our industry. Here‚Äôs why:\nWhile these three approaches form the foundation of most pricing strategies, the reality of pricing projects is often more nuanced and complex. In fact, as I point out in my article ‚ÄúHow To Work Out What To Charge Clients: The Honest Version‚Äù, pricing often involves a mix of educated guesswork, personal interest in the project, and an assessment of what the market will bear.\nGiven the challenges with each of these pricing models, you might be wondering if there‚Äôs a better way. In fact, there is, and it starts with a different approach to the initial client conversation.\nInstead of jumping straight into deliverables or hourly rates, I‚Äôve found it more effective to start by discussing what 37signals calls ‚Äúappetite‚Äù in their book Shaping Up. Appetite is how much the product owner is willing to invest based on the expected return for their business. This concept shifts the conversation from ‚ÄúWhat will this cost?‚Äù to ‚ÄúWhat is this worth to you?‚Äù\nThis approach is beneficial for several reasons:\nTo introduce this concept to clients, I often use the real estate analogy. I explain that even if you describe your ideal house (e.g., 3 bedrooms, specific location), a real estate agent still cannot give you a price because it depends on many other factors, including the state of repair and nearby facilities that may impact value. Similarly, in web design and development, many factors beyond the basic requirements affect the final cost and value of a project.\nOnce you‚Äôve established the client‚Äôs appetite, you‚Äôre in a much better position to structure your pricing. But how exactly should you do that? Let me share a strategy that‚Äôs worked well for me and many others in my Agency Academy.\nHere‚Äôs an approach I‚Äôve found highly effective:\nThis approach combines elements of fixed pricing (for each sub-project) with the flexibility to adapt between phases. It allows you to provide more accurate estimates while still maintaining the ability to pivot based on what you learn along the way.\nThis method offers several key benefits:\nThis sub-project approach not only helps with more accurate pricing but also addresses one of the most common challenges in project management: scope creep. By breaking the project into phases, you create natural points for reassessment and adjustment. For a more detailed look at how this approach can help manage scope creep, check out my article ‚ÄúHow To Price Projects And Manage Scope Creep.‚Äù\nThis approach sounds great in theory, but you might be wondering how clients typically react to it. Let‚Äôs address some common objections and how to handle them.\nYou may encounter resistance to this approach, especially in formal bid processes where clients are used to receiving comprehensive fixed-price quotes. Here‚Äôs how to handle common objections:\nProvide an overall estimate based on their initial scope, but emphasize that this is a rough figure. Use your sub-project process as a selling point, explaining how it actually provides more accurate pricing and better results. Highlight how inaccurate other agency quotes are likely to be and warn about potential scope discussions later.\nAcknowledge that it may seem more complex initially, but explain how this approach actually simplifies the process in the long run. Emphasize that it reduces risk and increases the likelihood of a successful outcome.\nExplain that while it may seem like more steps, this approach often leads to faster overall delivery because it reduces rework and ensures everyone is aligned at each stage.\nEmphasize that the quality and implementation of what agencies quote for can vary wildly. Your approach ensures they get exactly what they need, not just what they think they want at the outset. Encourage them to consider the long-term value and reduced risk, not just the initial price tag.\nUse the real estate analogy to explain why discussing the budget upfront is crucial. Just as a real estate agent needs to know your budget to show you appropriate properties, you need to understand their investment appetite to propose suitable solutions.\nBy adopting this approach to pricing, you can create a more collaborative relationship with your clients, reduce the risk for both parties, and ultimately deliver better results.\nRemember,\nBy being transparent about your process and focusing on delivering value within the client‚Äôs budget, you‚Äôll set yourself apart in a crowded market."
  },
  {
    "url": "/2024/08/integrating-image-to-text-and-text-to-speech-models-part2/",
    "title": "Integrating Image-To-Text And Text-To-Speech Models (Part 2)",
    "author": "Joas Pambou",
    "date": "Aug 30, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "AI",
      "Tools",
      "Techniques"
    ],
    "summary": "In the second part of this series, Joas Pambou aims to build a more advanced version of the previous application that performs conversational analyses on images or videos, much like a chatbot assistant. This means you can ask and learn more about your input content. Joas also explores multimodal or any-to-any models that handle images, videos, text, and audio, offering a comprehensive view of cutting-edge AI applications.",
    "content": "In Part 1 of this brief two-part series, we developed an application that turns images into audio descriptions using vision-language and text-to-speech models. We combined an image-to-text that analyses and understands images, generating description, with a text-to-speech model to create an audio description, helping people with sight challenges. We also discussed how to choose the right model to fit your needs.\nNow, we are taking things a step further. Instead of just providing audio descriptions, we are building that can have interactive conversations about images or videos. This is known as Conversational AI ‚Äî a technology that lets users talk to systems much like chatbots, virtual assistants, or agents.\nWhile the first iteration of the app was great, the output still lacked some details. For example, if you upload an image of a dog, the description might be something like ‚Äúa dog sitting on a rock in front of a pool,‚Äù and the app might produce something close but miss additional details such as the dog‚Äôs breed, the time of the day, or location.\nThe aim here is simply to build a more advanced version of the previously built app so that it not only describes images but also provides more in-depth information and engages users in meaningful conversations about them.\nWe‚Äôll use LLaVA, a model that combines understanding images and conversational capabilities. After building our tool, we‚Äôll explore multimodal models that can handle images, videos, text, audio, and more, all at once to give you even more options and easiness for your applications.\nWe are going to look at visual instruction tuning and the multimodal capabilities of LLaVA. We‚Äôll first explore how visual instruction tuning can enhance the large language models to understand and follow instructions that include visual information. After that, we‚Äôll dive into LLaVA, which brings its own set of tools for image and video processing.\nVisual instruction tuning is a technique that helps large language models (LLMs) understand and follow instructions based on visual inputs. This approach connects language and vision, enabling AI systems to understand and respond to human instructions that involve both text and images. For example, Visual IT enables a model to describe an image or answer questions about a scene in a photograph. This fine-tuning method makes the model more capable of handling these complex interactions effectively.\nThere‚Äôs a new training approach called LLaVAR that has been developed, and you can think of it as a tool for handling tasks related to PDFs, invoices, and text-heavy images. It‚Äôs pretty exciting, but we won‚Äôt dive into that since it is outside the scope of the app we‚Äôre making.\nTo build good models, you need good data ‚Äî rubbish in, rubbish out. So, here are two datasets that you might want to use to train or evaluate your multimodal models. Of course, you can always add your own datasets to the two I‚Äôm going to mention.\nVision-CAIR\nVision-CAIR provides a high-quality, well-aligned image-text dataset created using conversations between two bots. This dataset was initially introduced in a paper titled ‚ÄúMiniGPT-4: Enhancing Vision-Language Understanding with Advanced Large Language Models,‚Äù and it provides more detailed image descriptions and can be used with predefined instruction templates for image-instruction-answer fine-tuning.\nLLaVA Visual Instruct 150K\nLLaVA Visual Instruct 150K is a set of GPT-generated multimodal instruction-following data. It is built for visual instruction tuning and aims to achieve GPT-4 level vision and language capabilities.\nThere are more multimodal datasets out there, but these two should help you get started if you want to fine-tune your model.\nLLaVA (which stands for Large Language and Vision Assistant) is a groundbreaking multimodal model developed by researchers from the University of Wisconsin, Microsoft Research, and Columbia University. The researchers aimed to create a powerful, open-source model that could compete with the best in the field, just like GPT-4, Claude 3, or Gemini, to name a few. For developers like you and me, its open nature is a huge benefit, allowing for easy fine-tuning and integration.\nOne of LLaVA‚Äôs standout features is its ability to understand and respond to complex visual information, even with unfamiliar images and instructions. This is exactly what we need for our tool, as it goes beyond simple image descriptions to engage in meaningful conversations about the content.\nLLaVA‚Äôs strength lies in its smart use of existing models. Instead of starting from scratch, the researchers used two key models:\nThese components make LLaVA highly effective by combining state-of-the-art visual and language understanding capabilities into a single powerful model, perfectly suited for applications requiring both visual and conversational AI.\nLLaVA‚Äôs training process involves two important stages, which together enhance its ability to understand user instructions, interpret visual and language content, and provide accurate responses. Let‚Äôs detail what happens in these two stages:\nThe second stage is tailored to specific application scenarios:\nNow that we‚Äôre keen on what LLaVA is and the role it plays in our applications, let‚Äôs turn our attention to the next component we need for our work, Whisper.\nIn this chapter, we‚Äôll check out Whisper, a great model for turning text into speech. Whisper is accurate and easy to use, making it perfect for adding natural-sounding voice responses to our app. We‚Äôve used Whisper in a different article, but here, we‚Äôre going to use a new version ‚Äî large v3. This updated version of the model offers even better performance and speed.\nWhisper was developed by OpenAI, which is the same folks behind ChatGPT. Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. The original Whisper was trained on 680,000 hours of labeled data.\nNow, what‚Äôs different with Whisper large-v3 compared to other models? In my experience, it comes down to the following:\nWhisper models come in different sizes, from tiny to large. Here‚Äôs a table comparing the differences and similarities:\nAlright, so we‚Äôre going with LLaVA for image inputs, and this time, we‚Äôre adding video inputs, too. This means the app can handle both images and videos, making it more versatile.\nWe‚Äôre also keeping the speech feature so you can hear the assistant‚Äôs replies, which makes the interaction even more engaging. How cool is that?\nFor this, we‚Äôll use Whisper. We‚Äôll stick with the Gradio framework for the app‚Äôs visual layout and user interface. You can, of course, always swap in other models or frameworks ‚Äî the main goal is to get a working prototype.\nWe will start by installing and importing all the required libraries. This includes the transformers libraries for loading the LLaVA and Whisper models, bitsandbytes for quantization, gtts, and moviepy to help in processing video files, including frame extraction.\nWith these installed, we now need to import these libraries into our environment so we can use them. We‚Äôll use colab for that:\nNow, let‚Äôs set up a 4-bit quantization to make the LLaVA model more efficient in terms of performance and memory usage.\nIn this code, we‚Äôve configured the quantization to four bits, which reduces memory usage and improves performance. Then, we load the LLaVA model with these settings. Finally, we load the whisper model, selecting the device based on GPU availability for better performance.\nNote: We‚Äôre using llava-v1.5-7b as the model. Please feel free to explore other versions of the model. For Whisper, we‚Äôre loading the ‚Äúlarge‚Äù size, but you can also switch to another size like ‚Äúmedium‚Äù or ‚Äúsmall‚Äù for your experiments.\nTo get our assistant up and running, we need to implement five essential functions:\nOnce these are in place, we will create another function to tie all this together seamlessly. The following sections provide the code that defines each function.\nWe‚Äôll start by setting up the conversation history and a function to log it:\nNext, we‚Äôll create a function to convert images to text using LLaVA and iterative prompts.\nWe‚Äôll now create a function to convert videos to text by extracting frames and analyzing them.\nLet‚Äôs add a function to transcribe audio to text using Whisper.\nLastly, we create a function to convert text responses into speech.\nWith all the necessary functions in place, we can create the main function that ties everything together:\nThe final piece for us is to create the layout and user interface for the app. Again, we‚Äôre using Gradio to build that out for quick prototyping purposes.\nHere, we want to let users record or upload their audio prompts, type their questions if they prefer, upload videos, and, of course, have a conversation block.\nHere‚Äôs a preview of how the app will look and work:\nLLaVA is a great model, but there are even greater ones that don‚Äôt require a separate ASR model to build a similar app. These are called multimodal or ‚Äúany-to-any‚Äù models. They are designed to process and integrate information from multiple modalities, such as text, images, audio, and video. Instead of just combining vision and text, these models can do it all: image-to-text, video-to-text, text-to-speech, speech-to-text, text-to-video, and image-to-audio, just to name a few. It makes everything simpler and less of a hassle.\nNow that we know what multimodal models are, let‚Äôs check out some cool examples. You may want to integrate these into your next personal project.\nSo, the first on our list is CoDi or Composable Diffusion. This model is pretty versatile, not sticking to any one type of input or output. It can take in text, images, audio, and video and turn them into different forms of media. Imagine it as a sort of AI that‚Äôs not tied down by specific tasks but can handle a mix of data types seamlessly.\nCoDi was developed by researchers from the University of North Carolina and Microsoft Azure. It uses something called Composable Diffusion to sync different types of data, like aligning audio perfectly with the video, and it can generate outputs that weren‚Äôt even in the original training data, making it super flexible and innovative.\nNow, let‚Äôs talk about ImageBind, a model from Meta. This model is like a multitasking genius, capable of binding together data from six different modalities all at once: images, video, audio, text, depth, and even thermal data.\nImageBind doesn‚Äôt need explicit supervision to understand how these data types relate. It‚Äôs great for creating systems that use multiple types of data to enhance our understanding or create immersive experiences. For example, it could combine 3D sensor data with IMU data to design virtual worlds or enhance memory searches across different media types.\nGato is another fascinating model. It‚Äôs built to be a generalist agent that can handle a wide range of tasks using the same network. Whether it‚Äôs playing games, chatting, captioning images, or controlling a robot arm, Gato can do it all.\nThe key thing about Gato is its ability to switch between different types of tasks and outputs using the same model.\nThe next on our list is GPT-4o; GPT-4o is a groundbreaking multimodal large language model (MLLM) developed by OpenAI. It can handle any mix of text, audio, image, and video inputs and give you text, audio, and image outputs. It‚Äôs super quick, responding to audio inputs in just 232ms to 320ms, almost like a real conversation.\nThere‚Äôs a smaller version of the model called GPT-4o Mini. Small models are becoming a trend, and this one shows that even small models can perform really well. Check out this evaluation to see how the small model stacks up against other large models.\nWe covered a lot in this article, from setting up LLaVA for handling both images and videos to incorporating Whisper large-v3 for top-notch speech recognition. We also explored the versatility of multimodal models like CoDi or GPT-4o, showcasing their potential to handle various data types and tasks. These models can make your app more robust and capable of handling a range of inputs and outputs seamlessly.\nWhich model are you planning to use for your next app? Let me know in the comments!"
  },
  {
    "url": "/2024/08/best-pro-scheduler-libraries/",
    "title": "Best Of Pro Scheduler Libraries",
    "author": "Preethi Sam",
    "date": "Aug 8, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Tools",
      "Workflow",
      "Productivity"
    ],
    "summary": "For teams working remotely across the globe or together in an office, as well as for any group of collaborating users, a scheduler can be a valuable tool indeed. In this post, you‚Äôll find some of the best commercial web scheduler libraries (JavaScript based) with amazing UX and high efficiency that are currently available.",
    "content": "Team, assemble! Need to coordinate a crew of superheroes across the globe to save the world? A scheduler can help. Same for web applications that serve any group of collaborating users ‚Äî whether that includes wearing a cape or not.\nEvent calendars and schedulers may often seem the same; sometimes, a calendar is all you need. However, a scheduler does a lot more than block out a day or time slot, especially for the ‚Äúsupervisors‚Äù and ‚Äúmanagers‚Äù, i.e., the Nick Fury of the teams, who do more than give out assignments and due dates but also need to track the usage of available resources ‚Äî like staffs‚Äô work hours, or inanimate resources, like an operating room in a hospital ‚Äî to ensure the efficiency of each task, resource, and process.\nIn this post, you‚Äôll find some of the best commercial web scheduler libraries (JavaScript based) with amazing UX and high efficiency that are currently available. Let‚Äôs dive in right away, shall we?\nThis super easy to integrate scheduler works seamlessly with any frontend stack such as Angular, React, Vue, or vanilla JS. The Bryntum website has examples in all the supported frameworks, and numerous sample use-cases to assist your integration process.\nAs for its appearance, if any of the modern themes provided with the scheduler won‚Äôt do so, you can quickly achieve a tailored look using CSS or SASS variable-based styling while still maintaining high-performance and responsive rendering throughout different screen sizes.\nNow, the features are where the rubber meets the road. Drag and drop support; Export to Excel, PDF, and PNG; Custom data fields and filtering; Dependency arrows between events for process visualization; And many more. Here‚Äôs a comprehensive list of their scheduler features at Bryntum‚Äôs website.\nThat‚Äôs not all. There‚Äôs a Pro version. The highlight is the Resource Histogram ‚Äî which is an intuitive overview of resource allocation. Additionally, there‚Äôs Travel time visualization, Overview of non-working hours, Skill matching, and more in the Pro tool chest. Plus, rewiring any of the default actions to your liking is an effortless undertaking due to the many configuration settings provided in the API.\nSupport is available by means of professional services, active forums, and a slew of exhaustive documentation comprising live demos. You can start a 45-day free trial right away or contact their sales team for any inquiries regarding pricing and features.\nHere is another modern scheduler with the availability of integrations with over ten different frameworks, including some of the popular JavaScript ones like jQuery. The DHTMLX scheduler offers a default theme (in both light and dark mode) uses gradients to standout. However, if that‚Äôs not your cup of tea, and neither is any of the other themes, there‚Äôs also the option to tinker under the CSS hood to customize the look.\nApart from the fundamental features, like being able to set up recurring appointments, and the Pro features, there‚Äôs also a Google Maps integration to include rich location data to the events. In Pro version, there‚Äôs the multiple resource view ‚Äî the overview of allocated resources ‚Äî that comes handy in delegating tasks, and to track the efficiency of each delegation. PDF export is available as an add-on.\nSupport is accessible through technical requests, forums, and API documentation. A 30-day free trial can be opted. For licensing and pricing, you can drop them a message or schedule a call.\nAlthough not feature-extensive but budget-friendly, the MindFusion scheduler (ready to download and test) is a good place to start if its rudimentary components are enough to get the job done for you and you don‚Äôt mind rolling up your sleeves to do a little revamp.\nBasics like appointments, multiple calendar views, drag-and-drop, timetables for resources, and such are covered. CSS themes allow for easy alterations according to your preferences. Schedule export/Import in XML and JSON is included. A few sample use-cases are also available for you to peruse.\nFor technical support, you can drop in a ticket, check out its forum, or even acquire any of its consulting services. They also offer discounts for eligible customers. Even though seemingly a little bland, their documentation is robust. For any queries, you can reach them through email or phone.\nThere‚Äôs an open-source version that you can build up from. However, the Pro version is something not to be missed out on. The period for technical support for the Pro version is less than that of what DayPilot ‚Äôs peers offer, but it doesn‚Äôt skimp on features and is within a reasonable price for a single developer plan.\nMost features expected to be in a Pro version are included, like the Resources overview, Resources utilization snapshot, comprehensive filtering, drag and drop, export options, etc. Besides the handful of themes provided, custom styling can be done with CSS. Some samples are also available to learn from.\nThe scheduler works with most of the common JavaScript libraries, and documentations are present for each separately. Support is available through forums and email. You can contact them for quotes and licensing queries. There‚Äôs a 60-days trial available.\nWith a complete keyboard interaction setup, Syncfusion Scheduler is accessible and friendly. In addition to vanilla JavaScript, it‚Äôs also available for React, Angular, Vue, and Blazor frameworks.\nAll major scheduler features are present. Appointments, Timelines, and Agendas are covered. Export is available in Excel documents; export and import are possible with iCal documents.\nStyling can be done by overriding the default CSS file. There‚Äôs a theme builder, too, to assist in creating a custom theme. And a few UI kits, like one for Adobe XD, is provided with the scheduler.\nAPI documentation is available for all supported integrations. There‚Äôs a 30-day trial period, or you can check out some editable demos to try the product. Or you can contact Syncfusion through a form or any of the contacts provided at their site for more information. Technical support is provided via requests and forums.\nFor teams working remotely across the globe or together in an office, as well as for any group of collaborating users, a scheduler can be a valuable tool indeed. If you‚Äôd like to share a scheduler that you‚Äôve tried and loved, please let us know in the comments. Happy scheduling!"
  },
  {
    "url": "/2024/08/history-future-regular-expressions-javascript/",
    "title": "Regexes Got Good: The History And Future Of Regular Expressions In JavaScript",
    "author": "Steven Levithan",
    "date": "Aug 20, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "JavaScript",
      "Coding",
      "Techniques"
    ],
    "summary": "Although JavaScript regexes used to be underpowered compared to other modern flavors, numerous improvements in recent years mean that‚Äôs no longer true. Steven Levithan evaluates the history and present state of regular expressions in JavaScript with tips to make your regexes more readable, maintainable, and resilient.",
    "content": "Modern JavaScript regular expressions have come a long way compared to what you might be familiar with. Regexes can be an amazing tool for searching and replacing text, but they have a longstanding reputation (perhaps outdated, as I‚Äôll show) for being difficult to write and understand.\nThis is especially true in JavaScript-land, where regexes languished for many years, comparatively underpowered compared to their more modern counterparts in PCRE, Perl, .NET, Java, Ruby, C++, and Python. Those days are over.\nIn this article, I‚Äôll recount the history of improvements to JavaScript regexes (spoiler: ES2018 and ES2024 changed the game), show examples of modern regex features in action, introduce you to a lightweight JavaScript library that makes JavaScript stand alongside or surpass other modern regex flavors, and end with a preview of active proposals that will continue to improve regexes in future versions of JavaScript (with some of them already working in your browser today).\nECMAScript 3, standardized in 1999, introduced Perl-inspired regular expressions to the JavaScript language. Although it got enough things right to make regexes pretty useful (and mostly compatible with other Perl-inspired flavors), there were some big omissions, even then. And while JavaScript waited 10 years for its next standardized version with ES5, other programming languages and regex implementations added useful new features that made their regexes more powerful and readable.\nBut that was then.\nLet‚Äôs take a look at them.\nDon‚Äôt worry if it‚Äôs hard to understand what some of the following features mean ‚Äî we‚Äôll look more closely at several of the key features afterward.\nAs for whether you can safely use these features in your code today, the answer is yes! The latest of these features, flag v, is supported in Node.js 20 and 2023-era browsers. The rest are supported in 2021-era browsers or earlier.\nEach edition from ES2019 to ES2023 also added additional Unicode properties that can be used via \\p{...} and \\P{...}. And to be a completionist, ES2021 added string method replaceAll ‚Äî although, when given a regex, the only difference from ES3‚Äôs replace is that it throws if not using flag g.\nWith all of these changes, how do JavaScript regular expressions now stack up against other flavors? There are multiple ways to think about this, but here are a few key aspects:\nSo, it‚Äôs a bit of a mixed bag.\nThe good news is that all of these holes can be filled by a JavaScript library, which we‚Äôll see later in this article.\nLet‚Äôs look at a few of the more useful modern regex features that you might be less familiar with. You should know in advance that this is a moderately advanced guide. If you‚Äôre relatively new to regex, here are some excellent tutorials you might want to start with:\nOften, you want to do more than just check whether a regex matches ‚Äî you want to extract substrings from the match and do something with them in your code. Named capturing groups allow you to do this in a way that makes your regexes and code more readable and self-documenting.\nThe following example matches a record with two date fields and captures the values:\nDon‚Äôt worry ‚Äî although this regex might be challenging to understand, later, we‚Äôll look at a way to make it much more readable. The key things here are that named capturing groups use the syntax (?<name>...), and their results are stored on the groups object of matches.\nYou can also use named backreferences to rematch whatever a named capturing group matched via \\k<name>, and you can use the values within search and replace as follows:\nFor advanced regexers who want to use named backreferences within a replacement callback function, the groups object is provided as the last argument. Here‚Äôs a fancy example:\nLookbehind (introduced in ES2018) is the complement to lookahead, which has always been supported by JavaScript regexes. Lookahead and lookbehind are assertions (similar to ^ for the start of a string or \\b for word boundaries) that don‚Äôt consume any characters as part of the match. Lookbehinds succeed or fail based on whether their subpattern can be found immediately before the current match position.\nFor example, the following regex uses a lookbehind (?<=...) to match the word ‚Äúcat‚Äù (only the word ‚Äúcat‚Äù) if it‚Äôs preceded by ‚Äúfat ‚Äù:\nYou can also use negative lookbehind ‚Äî written as (?<!...) ‚Äî to invert the assertion. That would make the regex match any instance of ‚Äúcat‚Äù that‚Äôs not preceded by ‚Äúfat ‚Äù.\nJavaScript‚Äôs implementation of lookbehind is one of the very best (matched only by .NET). Whereas other regex flavors have inconsistent and complex rules for when and whether they allow variable-length patterns inside lookbehind, JavaScript allows you to look behind for any subpattern.\nJavaScript‚Äôs String.prototype.matchAll was added in ES2020 and makes it easier to operate on regex matches in a loop when you need extended match details. Although other solutions were possible before, matchAll is often easier, and it avoids gotchas, such as the need to guard against infinite loops when looping over the results of regexes that might return zero-length matches.\nSince matchAll returns an iterator (rather than an array), it‚Äôs easy to use it in a for...of loop.\nNote: matchAll requires its regexes to use flag g (global). Also, as with other iterators, you can get all of its results as an array using Array.from or array spreading.\nUnicode properties (added in ES2018) give you powerful control over multilingual text, using the syntax \\p{...} and its negated version \\P{...}. There are hundreds of different properties you can match, which cover a wide variety of Unicode categories, scripts, script extensions, and binary properties.\nNote: For more details, check out the documentation on MDN.\nUnicode properties require using the flag u (unicode) or v (unicodeSets).\nFlag v (unicodeSets) was added in ES2024 and is an upgrade to flag u ‚Äî you can‚Äôt use both at the same time. It‚Äôs a best practice to always use one of these flags to avoid silently introducing bugs via the default Unicode-unaware mode. The decision on which to use is fairly straightforward. If you‚Äôre okay with only supporting environments with flag v (Node.js 20 and 2023-era browsers), then use flag v; otherwise, use flag u.\nFlag v adds support for several new regex features, with the coolest probably being set subtraction and intersection. This allows using A--B (within character classes) to match strings in A but not in B or using A&&B to match strings in both A and B. For example:\nFor more details about flag v, including its other new features, check out this explainer from the Google Chrome team.\nEmoji are ü§©üî•üòéüëå, but how emoji get encoded in text is complicated. If you‚Äôre trying to match them with a regex, it‚Äôs important to be aware that a single emoji can be composed of one or many individual Unicode code points. Many people (and libraries!) who roll their own emoji regexes miss this point (or implement it poorly) and end up with bugs.\nThe following details for the emoji ‚Äúüë©üèª‚Äçüè´‚Äù (Woman Teacher: Light Skin Tone) show just how complicated emoji can be:\nFortunately, JavaScript added an easy way to match any individual, complete emoji via \\p{RGI_Emoji}. Since this is a fancy ‚Äúproperty of strings‚Äù that can match more than one code point at a time, it requires ES2024‚Äôs flag v.\nIf you want to match emojis in environments without v support, check out the excellent libraries emoji-regex and emoji-regex-xs.\nDespite the improvements to regex features over the years, native JavaScript regexes of sufficient complexity can still be outrageously hard to read and maintain.\nRegular Expressions are SO EASY!!!! pic.twitter.com/q4GSpbJRbZ‚Äî Garabato Kid (@garabatokid) July 5, 2019\nES2018‚Äôs named capture was a great addition that made regexes more self-documenting, and ES6‚Äôs String.raw tag allows you to avoid escaping all your backslashes when using the RegExp constructor. But for the most part, that‚Äôs it in terms of readability.\nHowever, there‚Äôs a lightweight and high-performance JavaScript library named regex (by yours truly) that makes regexes dramatically more readable. It does this by adding key missing features from Perl-Compatible Regular Expressions (PCRE) and outputting native JavaScript regexes. You can also use it as a Babel plugin, which means that regex calls are transpiled at build time, so you get a better developer experience without users paying any runtime cost.\nPCRE is a popular C library used by PHP for its regex support, and it‚Äôs available in countless other programming languages and tools.\nLet‚Äôs briefly look at some of the ways the regex library, which provides a template tag named regex, can help you write complex regexes that are actually understandable and maintainable by mortals. Note that all of the new syntax described below works identically in PCRE.\nBy default, regex allows you to freely add whitespace and line comments (starting with #) to your regexes for readability.\nThis is equivalent to using PCRE‚Äôs xx flag.\nSubroutines are written as \\g<name> (where name refers to a named group), and they treat the referenced group as an independent subpattern that they try to match at the current position. This enables subpattern composition and reuse, which improves readability and maintainability.\nFor example, the following regex matches an IPv4 address such as ‚Äú192.168.12.123‚Äù:\nYou can take this even further by defining subpatterns for use by reference only via subroutine definition groups. Here‚Äôs an example that improves the regex for admittance records that we saw earlier in this article:\nregex includes the v flag by default, so you never forget to turn it on. And in environments without native v, it automatically switches to flag u while applying v‚Äôs escaping rules, so your regexes are forward and backward-compatible.\nIt also implicitly enables the emulated flags x (insignificant whitespace and comments) and n (‚Äúnamed capture only‚Äù mode) by default, so you don‚Äôt have to continually opt into their superior modes. And since it‚Äôs a raw string template tag, you don‚Äôt have to escape your backslashes \\\\\\\\ like with the RegExp constructor.\nAtomic groups and possessive quantifiers are another powerful set of features added by the regex library. Although they‚Äôre primarily about performance and resilience against catastrophic backtracking (also known as ReDoS or ‚Äúregular expression denial of service,‚Äù a serious issue where certain regexes can take forever when searching particular, not-quite-matching strings), they can also help with readability by allowing you to write simpler patterns.\nNote: You can learn more in the regex documentation.\nThere are a variety of active proposals for improving regexes in JavaScript. Below, we‚Äôll look at the three that are well on their way to being included in future editions of the language.\nThis is a Stage 3 (nearly finalized) proposal. Even better is that, as of recently, it works in all major browsers.\nWhen named capturing was first introduced, it required that all (?<name>...) captures use unique names. However, there are cases when you have multiple alternate paths through a regex, and it would simplify your code to reuse the same group names in each alternative.\nFor example:\nThis proposal enables exactly this, preventing a ‚Äúduplicate capture group name‚Äù error with this example. Note that names must still be unique within each alternative path.\nThis is another Stage 3 proposal. It‚Äôs already supported in Chrome/Edge 125 and Opera 111, and it‚Äôs coming soon for Firefox. No word yet on Safari.\nPattern modifiers use (?ims:...), (?-ims:...), or (?im-s:...) to turn the flags i, m, and s on or off for only certain parts of a regex.\nFor example:\nThis proposal recently reached Stage 3 and has been a long time coming. It isn‚Äôt yet supported in any major browsers. The proposal does what it says on the tin, providing the function RegExp.escape(str), which returns the string with all regex special characters escaped so you can match them literally.\nIf you need this functionality today, the most widely-used package (with more than 500 million monthly npm downloads) is escape-string-regexp, an ultra-lightweight, single-purpose utility that does minimal escaping. That‚Äôs great for most cases, but if you need assurance that your escaped string can safely be used at any arbitrary position within a regex, escape-string-regexp recommends the regex library that we‚Äôve already looked at in this article. The regex library uses interpolation to escape embedded strings in a context-aware way.\nSo there you have it: the past, present, and future of JavaScript regular expressions.\nIf you want to journey even deeper into the lands of regex, check out Awesome Regex for a list of the best regex testers, tutorials, libraries, and other resources. And for a fun regex crossword puzzle, try your hand at regexle.\nMay your parsing be prosperous and your regexes be readable."
  },
  {
    "url": "/2024/08/mastering-typography-in-logo-design/",
    "title": "Mastering Typography In Logo Design",
    "author": "Levi Honing",
    "date": "Aug 22, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Typography",
      "Design",
      "Techniques"
    ],
    "summary": "Finding the right typeface for a logo is a challenge and can be a very time-consuming process that requires both creativity and a practical approach. Levi Honing provides the essential background and tools to enhance your typography journey and apply this knowledge to your logo design. Let‚Äôs dive deep to learn how to create a logo that is not only expressive but also purposeful and well-thought-out.",
    "content": "Typography is much more than just text on a page ‚Äî it forms the core of your design. As a designer, I always approach selecting types from two angles: as a creative adventure and as a technical challenge.\nChoosing the right typeface for a company, product, or service is an immensely important task. At that moment, you‚Äôre not only aligning with the brand‚Äôs identity but also laying the foundation to reinforce the company or service‚Äôs brand. Finding the right typeface can be a time-consuming process that often begins with an endless search. During this search, you can get tangled up in the many different typefaces, which, over time, all start to look the same.\nIn this article, I aim to provide you with the essential background and tools to enhance your typography journey and apply this knowledge to your logo design. We will focus on three key pillars:\nWe will travel back in time to uncover the origins of various typefaces. By exploring different categories, we will illustrate the distinctions with examples and describe the unique characteristics of each category.\nAdditionally, we will discuss the different font weights and offer advice on when to use each variant. We will delve into letter-spacing and kerning, explaining what they are and how to effectively apply them in your logo designs.\nFinally, we will examine how the right typeface choices can significantly influence the impact and success of a brand. With this structured approach, I will show you how to create a logo that is not only expressive but also purposeful and well-thought-out.\nFrom the invention of the Gutenberg press in the mid-15th century through the creation of the first Slab Serif in 1815 and the design of the first digital typeface in 1968, the number of available fonts has grown exponentially. Today, websites like WhatFontIs, a font finder platform, catalogs over a million fonts.\nSo, the one downside of not being born in the 15th century is that your task of choosing the right font has grown enormously. And once you‚Äôve made the right choice out of a million-plus fonts, there are still many pitfalls to watch out for.\nFortunately for us, all these fonts have already been categorized. In this article, we refer to the following four categories: serif, sans serif, script, and display typefaces. But why do we have these categories, and how do we benefit from them today?\nEach category has its specific uses. Serif typefaces are often used for books due to their enhancement of readability on paper, while sans serif typefaces are ideal for screens because of their clean lines. Different typefaces also evoke different emotions: for example, script can convey elegance, while sans serif offers a more modern look. Additionally, typeface categories have a rich history, with Old Style Serifs inspired by Roman inscriptions and Modern Serifs designed for greater contrast.\nToday, these categories provide a fundamental basis for choosing the right typeface for any project.\nAs mentioned, different typefaces evoke different emotions; like people, they convey distinct characteristics:\nHistorically, typefaces reflected cultural identities, but the ‚Äúnew typography‚Äù movement sought a universal style. Designers emphasized that typefaces should match the character of the text, a view also supported by the Bauhaus school.\nWe have touched upon the history of different typeface categories. Now, to make a good font choice, we need to explore these categories and see what sets them apart, as each one has specific characteristics. In this article, we refer to the following four categories:\nLet‚Äôs take a closer look at each category.\nA serif typeface is a typeface that features small lines or decorative elements at the ends of the strokes. These small lines are called ‚Äúserifs‚Äù.\nA sans-serif typeface is a typeface that lacks the small lines or decorative elements at the ends of the strokes, resulting in a clean and modern appearance. The term ‚Äúsans-serif‚Äù comes from the French word ‚Äúsans,‚Äù meaning ‚Äúwithout,‚Äù so sans-serif translates to ‚Äúwithout serif.‚Äù\nA script typeface is a typeface that mimics the fluid strokes of handwriting or calligraphy, featuring connected letters and flowing strokes for an elegant or artistic appearance.\nA display typeface is a typeface designed for large sizes, such as headlines or titles, characterized by bold, decorative elements that make a striking visual impact.\nExperts link typeface characteristics to physical traits. Sans serif faces are perceived as cleaner and more modern, while rounded serifs are friendly and squared serifs are more official. Light typefaces are seen as delicate and feminine, and heavy ones are seen as strong and masculine. Some typefaces are designed to be child-friendly with smoother shapes. Traditional serifs are often considered bookish, while sans serifs are seen as modern and no-nonsense.\nBased on the provided context, we can assign the following characteristics per category:\nLet me provide you with a real real-life logo example to help visualize how different typeface categories convey these characteristics.\nWe‚Äôre focusing on ING, a major bank headquartered in the Netherlands. Before we dive into the logo itself, let‚Äôs first zoom in on some brand values. On their website, it is stated that they ‚Äúvalue integrity above all‚Äù and ‚Äúwill not ignore, tolerate, or excuse behavior that breaches our values. To do so would break the trust of society and the trust of the thousands of colleagues who do the right thing.‚Äù\nGiven the strong emphasis on integrity, trust, and adherence to values, the most suitable typeface category would likely be a serif.\nThe serif font in the ING logo conveys a sense of authority, professionalism, and experience associated with the brand.\nLet‚Äôs choose a different font for the logo. The font used in the example is Poppins Bold, a geometric sans-serif typeface.\nThe sans-serif typeface in this version of the ING logo conveys modernity, simplicity, and accessibility. These are all great traits for a company to convey, but they align less with the brand‚Äôs chosen values of integrity, trust, and adherence to tradition. A serif typeface often represents these traits more effectively. While the sans-serif version of the logo may be more accessible and modern, it could also convey a sense of casualness that misaligns with the brand‚Äôs values.\nSo let‚Äôs see these traits in action with a game called ‚ÄúAssign the Trait.‚Äù The rules are simple: you are shown two different fonts, and you choose which font best represents the given trait.\nUnderstanding these typeface personas is crucial when aligning typography with a company‚Äôs brand identity. The choice of typeface should reflect and reinforce the brand‚Äôs characteristics and values, ensuring a cohesive and impactful visual identity.\nWe covered a lot of ground, and I hope you now have a better understanding of different typeface categories and their characteristics. I also hope that the little game of ‚ÄúAssign the Trait‚Äù has given you a better grasp of the differences between them. This game would also be great to play while you‚Äôre walking your dog or going for a run. See a certain logo on the back of a lorry? Which typeface category does it belong to, and what traits does it convey?\nNow, let‚Äôs further explore the importance of aligning the typeface with the brand identity.\nThe most important aspect when choosing a typeface is that it aligns with the company‚Äôs brand identity. We have reviewed various typeface options, and each has its unique characteristics. You can link these characteristics to those of the company.\nAs discussed in the previous section, a sans-serif is more ‚Äúmodern‚Äù and ‚Äúno-nonsense‚Äù. So, for a modern company, a sleek sans-serif typeface often fits better than a classic Serif typeface. In the previous section, we examined the ING logo and how the use of a sans-serif typeface gave it a more modern appearance, but it also reduced the emphasis on certain traits that ING wants to convey with its brand.\nTo further illustrate the impact of typeface on logo design, let‚Äôs explore some more ‚Äòextreme‚Äô examples.\nOur first ‚ÄòExtreme‚Äô example is Haribo, which is an iconic gummy candy brand. They use a custom sans-serif typeface.\nLet‚Äôs zoom in on a couple of characteristics of the typeface and explore why this is a great match for the brand.\nThe second up is Fanta, a global soft drink brand that also uses a custom sans-serif typeface.\nUsing these ‚Äòextreme‚Äô cases, we can really see the power that a well-aligned typeface can have. Both cases embody the fun and friendly values of the brand. While the nuances may be more subtle in other cases, the power is still there.\nNow, let‚Äôs delve deeper into the different typefaces and also look at weight, style, and letter spacing.\nNow that we have a background of the different typeface categories, let‚Äôs zoom in on three other elements of typography in logo design:\nEach category of typefaces has a multitude of options. The choice of the right typeface is crucial and perhaps the most important decision when designing a logo. It‚Äôs important to realize that often, there isn‚Äôt a single ‚Äòbest‚Äô choice. To illustrate, we have four variations of the Adidas logo below. Each typeface could be considered a good choice. It‚Äôs crucial not to get fixated on finding the perfect typeface. Instead, ensure it aligns with the brand identity and looks good in practical use.\nThese four typefaces could arguably all be great choices for the Adidas brand, as they each possess the clean, bold, and sans-serif qualities that align with the brand‚Äôs values of innovation, courage, and ownership. While the details of typeface selection are important, it‚Äôs essential not to get overly fixated on them. The key is to ensure that the typeface resonates with the brand‚Äôs identity and communicates its core values effectively. Ultimately, the right typeface is one that not only looks good but also embodies the spirit and essence of the brand.\nLet‚Äôs zoom in on the different weights and styles each typeface offers.\nEach typeface can range from 1 to more than 10 different styles, including choices such as Roman and Italic and various weights like Light, Regular, Semi-Bold, and Bold.\nPersonally, I often lean towards a Roman in Semi-Bold or Bold variant, but this choice heavily depends on the desired appearance, brand name, and brand identity. So, how do you know which font weight to choose?\nWhen to choose bold fonts\nAn important aspect of typography is overall word spacing, also known as tracking. This refers to the overall spacing between characters in a block of text. By adjusting the tracking in logo design, we can influence the overall look of the logo. We can make a logo more spacious and open or more compact and tight with minimal adjustments.\nDesigner and design educator Ellen Lupton states that kerning adjusts the spacing between individual characters in a typeface to ensure visual uniformity. When letters are spaced too uniformly, gaps can appear around certain letters like W, Y, V, T, and L. Modern digital typefaces use kerning pairs tables to control these spaces and create a more balanced look.\nTracking and kerning are often confused. To clarify, tracking (letter-spacing) adjusts the space between all letters uniformly, while kerning specifically involves adjusting the distance between individual pairs of letters to improve the readability and aesthetics of the text.\nIn the example shown below, we observe the concept of kerning in typography. The middle instance of ‚ÄúLEAF‚Äù displays the word without any kerning adjustments, where the spacing between each letter is uniform and unaltered.\nIn the first ‚ÄúLEAF,‚Äù kerning adjustments have been applied between the letters ‚ÄòA‚Äô and ‚ÄòF‚Äô, reducing the space between them to create a more visually appealing and cohesive pair.\nIn the last ‚ÄúLEAF,‚Äù kerning has been applied differently, adjusting the space between ‚ÄòE‚Äô and ‚ÄòA‚Äô. This alteration shifts the visual balance of the word, showing how kerning can change the aesthetics and readability of text (or logo) by fine-tuning the spacing between individual letter pairs.\nAs we discussed earlier, different categories of typefaces have unique characteristics that can align well with, or deviate from, the brand identity you want to convey. This is a great starting point on which to base your initial choice.\nA large part of the creative process is seeking inspiration. Especially now that you‚Äôve been able to make a choice regarding category, it‚Äôs interesting to see the different typefaces in action. This helps you visualize what does and doesn‚Äôt work for your brand. Below, I share a selection of my favorite inspiration sources:\nSome typefaces are used more frequently than others. Therefore, choosing typefaces that have been tried and tested over the years is a good starting point. It‚Äôs important to distinguish between a popular typeface and a trendy one. In this context, I refer to typefaces that have been ‚Äúpopular‚Äù for a long time. Let‚Äôs break down some of these typefaces.\nOne of the most well-known typefaces is Helvetica, renowned for its intrinsic legibility and clarity since its 1957 debut. Helvetica‚Äôs tall x-height, open counters, and neutral letterforms allow it to lend a clean and professional look to any logo.\nSome well-known brands that use Helvetica are BMW, Lufthansa, and Nestl√©.\nFutura has been helping brands convey their identity for almost a century. Designed in 1927, it is celebrated for its geometric simplicity and modernist design. Futura‚Äôs precise and clean lines give it a distinctive and timeless look.\nSome well-known brands that use Futura are Louis Vuitton, Red Bull, and FedEx.\nThat said, you naturally have all the creative freedom, and making a bold choice can turn out fantastic, especially for brands where this is desirable.\nCombining typefaces is a challenging task. But if you want to create a logo with two different typefaces, make sure there is enough contrast between the two. For example, combine a serif with a sans-serif. If the two typefaces look too similar, it‚Äôs better to stick to one typeface. That said, I would never choose more than two typefaces for your logo.\nNow that we‚Äôve gone through the above steps, it seems a good time for a practical example. Theory is useful, but only when you put it into practice will you notice that you become more adept at it.\nTIP: Try creating a text logo yourself. First, we‚Äôll need to do a company briefing where we come up with a name, define various characteristics, and create a brand identity. This is a great way to get to know your fictional brand.\nBonus challenge: If you want to go one step further, you can also include a logo mark in the briefing. In the following steps, we are going to choose a typeface that suits the brand‚Äôs identity and characteristics. For an added challenge, include the logo mark at the start so the typeface has to match your logo mark as well. You can find great graphics at Iconfinder.\nCompany Name: EcoWave\nCharacteristics:\nBrand Identity: EcoWave is committed to a greener future. We provide sustainable and eco-friendly products that are essential for a better environment. Our advanced technologies and high-quality solutions enable customers to save energy and minimize their ecological footprint. EcoWave is more than just a brand; we represent a movement towards a more sustainable world with a special focus on combating marine pollution.\nKeyword: Sustainability\nNow that we‚Äôve been briefed, we can start with the following steps:\nLet‚Äôs go over the steps for EcoWave:\n1. Sustainable, Trustworthy, Innovative.\n2. The briefing and brand focus primarily on innovation. When we match this aspect with the characteristics of typefaces, everything points to a Sans-Serif font, which offers a modern and innovative look.\n3. Example Mood Board\n4. Ultimately, I chose the IBM Plex Sans typeface. This modern, sans-serif typeface offers a fresh and contemporary look. It fits excellently with the innovative and sustainable characteristics of EcoWave. Below are the steps from the initial choice to the final result:\nIBM Plex Sans Regular\nIBM Plex Sans Bold\nIBM Plex Sans Bold & Custom letter-spacing\nIBM Plex Sans Bold & Custom edges\n5. Here, you see the typeface in action. For me, this is a perfect match with the brand‚Äôs identity. The look feels just right.\nThose interested in typography might find ‚ÄòThe Elements of Typographic Style‚Äô by Robert Bringhurst insightful. In this section, I want to share an interesting part about the importance of choosing a typeface that suits the specific task.\nAs Robert Bringhurst illustrates, choosing a typeface should be appropriate not only for the subject but also for the specific task. What lessons can we draw from this for our typeface choice in our logo?\nThe typeface must be legible in various sizes and on different mediums, from business cards to billboards. A well-designed logo should be easy to reproduce without loss of clarity.\nSuppose we have a brand in the bicycle industry, an innovative and modern company. In Robert Bringhurst‚Äôs example, we choose the typeface Bicycle, which, due to its name, seems to perfectly match bicycles. However, the typeface described by Robert is a serif font with many decorative elements, which does not align with the desired modern and innovative look of our brand. Therefore, this would be a mismatch.\nIn this part, we discuss some new trends. However, it is also important to highlight the above quote. The basic principles we mention have been applicable for a long time and will continue to be. It can be both fun and challenging to follow the latest trends, but it is essential to integrate them with your basic principles.\nMinimalism in Logo Design remains one of the major trends this year. The most characteristic aspect of this style is to limit the logo to the most essential elements. This creates a clear and timeless character. In typography, this is beneficial for readability and, at the same time, effectively communicating the brand identity in a timeless manner. We also see this well reflected in the rebranding of the fast-food chain Ashton.\nAnother growing trend is customization in typography, where designers create personalized typefaces or modify existing typefaces to give the brand a unique look. This can range from subtle adjustments in letterforms to developing a completely custom typeface. Such an approach can contribute to a distinctive visual identity. A good example of this can be seen in the Apex logo, where the ‚ÄòA‚Äô and ‚Äòe‚Äô are specifically adjusted.\nWe now know that choosing the right typeface for a logo goes beyond personal taste. It has a significant impact on how powerful and recognizable a brand becomes. In this article, we have seen that finding the perfect typeface is a challenge that requires both creativity and a practical approach. With a strong focus on three key aspects:\nWe have seen that finding the right typeface can be a quest, and personal preferences certainly play a role, but with the right tools, this process can be made much easier. The goal is to create a logo that is not only beautiful but also truly adds value by resonating with the people you want to reach and strengthening the brand‚Äôs key values.\nWe also looked at how trends can influence the longevity of your logo. It is important to be trendy, but it is equally important to remain true to timeless principles.\nIn summary,\nAnd for those of you who are interested in diving deeper, I‚Äôve tried to capture the fundamentals we‚Äôve discussed in this article, focusing on good typeface choices, font weights, and letter spacing in a tool huisstijl. While it‚Äôs not perfect yet, I hope it can help some people create a simple brand identity that they love."
  },
  {
    "url": "/2024/08/thoughts-after-15-years-spent-ux-design-part1/",
    "title": "If I Was Starting My Career Today: Thoughts After 15 Years Spent In UX Design (Part 1)",
    "author": "Andrii Zhdan",
    "date": "Aug 2, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Career",
      "Evergreen",
      "Design",
      "UX"
    ],
    "summary": "In this two-part series, Andrii Zhdan outlines common challenges faced at the start of a design career and offers advice to smooth your journey based on insights from his experience hiring designers. Learn why mastering design tools is crucial, how to build a strong portfolio, and tips for acing your first interviews.",
    "content": "My design career began in 2008. The first book that I read on the topic of design was Photoshop Tips And Tricks by Scott Kelby, which was a book about a very popular design tool, but not about user experience (UX) design itself. Back at the time, I didn‚Äôt know many of the approaches and techniques that even junior designers know today because they weren‚Äôt invented yet, and also because I was just beginning my learning journey and finding my way in UX design. But now I have diverse experience; I‚Äôm myself hiring designers for my team, and I know much more.\nIn my two-part series of articles, I‚Äôll try to share with you what I wish I knew if I was starting my career today.\nThe two-part series contains four sections, each roughly covering one key stage in your beginner career:\nI‚Äôll cover the first three topics in this first article and the fourth one in the second article. In addition, I will include very detailed Further Reading sections at the end of each part.\nWhen you‚Äôre about to start learning, every day, you will receive new pieces of evidence of how many things you don‚Äôt know yet. You will see people who have been doing this for years and you will doubt whether you can do this, too. But there is a nuance I want to highlight: first, take a look at the following screenshot:\nThis is the Amazon website in 2008 when I was about to start my design career and received my first paycheck as a beginner designer.\nAnd this is how Amazon looked like even earlier, in 2002:\nIn 2002, Amazon made 3.93 billion US dollars in profits. I dare say they could have hired the very best designers at the time. So today, when you speak to a designer with twenty years of experience and think, ‚ÄúOh, this designer must be on a very high level now, a true master of his craft,‚Äù remind yourself about the state of UX design that existed when the designer‚Äôs career was about to start, sometime in the early 2000s!\nA lot of the knowledge that I have learned and that is over five years old is outdated now, and the learning complexity only increases every year.\nAre you a beginner or an aspiring user interface/user experience designer? Don‚Äôt be afraid to go through all the steps in your UX design journey. Patience and a good plan will let you become a good designer faster than you think.\nThis was the more philosophical part of my writing, where I wanted to help you become better motivated. Now, let‚Äôs continue with the more practical things and advice!\nWhen I was just beginning to learn, most of us did our design work in Adobe Photoshop.\nIn Photoshop, there were no components, styles, design libraries, auto layouts, and so on. Every screen was in another PSD file, and even making rounded corners on a rectangle object was a difficult task. Files were ‚Äúheavy,‚Äù and sometimes I needed to wait thirty or more seconds to open a file and check what screen was inside while changing a button‚Äôs name or label in twenty separate PSD files (each containing only one design screen, remember?) could take up to an hour, depending on the power of your computer.\nThere were many digital design tools at the time, including Fireworks ‚Äî which some professionals considered superior to Photoshop, and for quite a few reasons ‚Äî but this is not the main point of my story. One way or another, Photoshop back then became very popular among designers and we all absolutely had to have it in our toolset, no matter what other tools we also needed and used.\nNow computers are much faster, and our design tools have evolved quite a bit, too. For example, I can apply multiple changes to multiple design screens in just a few seconds by using Figma components and a proper structure of the design file, I can design/prototype responsive designs by using auto-layout, and more.\nIn one word, knowing your design tool can be a real ‚Äúsuperpower‚Äù for junior UX designers ‚Äî a power that beginners often ignore. When you know your tool inside-out, you‚Äôll spend less time on the design routine and you‚Äôll have more time for learning new things.\nMaster your tool(s) of choice (be it Figma Design or Illustrator, Sketch, Affinity Designer, Canva, Framer, and so on) in the most efficient way, and free up to a couple of extra hours every day for reading, doing tutorials, or taking longer breaks.\nLearn all the key features and options, and discover and remember the most important hotkeys so you‚Äôll be working without the need to constantly reach for your mouse and navigate the ‚Äúweb‚Äù of menus and sub-menus. It‚Äôs no secret that we, designers, mostly learn through doing practical tasks. So, imagine how much time it would save you within a few years of your career!\nAlso, it‚Äôs your chance: developers are rolling out new features for beginner designers and pro designers simultaneously, but junior designers usually have more time to learn those updates! So, be faster and get your advantage!\nYou need to admit it: your portfolio (or, to put it more precisely, the lack of it) will be the main pain point at the start.\nYou may hear sometimes statements such as: ‚ÄúWe understand that being a junior designer is not about having a portfolio‚Ä¶‚Äù But the fact is that we all would like to see some results of your work, even if it is your very early work on a few design projects or concepts. Remember, if you have something to show, this would always be a considerable advantage!\nI have heard from some juniors that they don‚Äôt want to invest time in their portfolio because this work is not payable and it‚Äôs time-consuming. But sitting and waiting and getting rejected again and again is also time-consuming. And spending a few of your first career years in the wrong company is also time-consuming (and disappointing, too). So my advice is to spend some time in advance on showcasing your work and then get much better results in the near future.\nIn case you need some extra motivation, here is a quote from Muhammad Ali, regarded as one of the most significant sports figures of the 20th century:\nReady to fire but have no idea where to start? Here are a few options:\nDon‚Äôt wait until someone hands you your chance on a ‚Äúsilver platter.‚Äù There are many projects that need the designer‚Äôs hands and help but can‚Äôt get such help yet. Assist them and then show the results of your work in your first portfolio. It gives you a huge advantage over other candidates who haven‚Äôt worked on their portfolios yet!\nFrom what I‚Äôve heard, getting the first job is the biggest problem for a junior designer, so I will focus on this part in more detail.\nTo reach the goal, you should formulate it correctly. It‚Äôs already formulated in this case, but most candidates understand it wrong. The right goal here is to be invited to an interview ‚Äî not to get an offer right now or tell everything about your life in the CV document. You just need to break through the first level of filtering.\nNote: Some of these tips are for absolute beginners. Do they sound too obvious to you? Apologies if so. However, all of them are based on my personal experience, so I think there are no tips that I should omit.\nNote: There are many ways to show your portfolio, and Figma is only one of them. For ideas, you can check ‚ÄúFigma Portfolio Templates & Examples‚Äù (a curated selection of portfolio templates for Figma). Or even better, you can self-host your portfolio on your own domain and website; however, this may require some more advanced technical skills and knowledge, so you can leave this idea for later.\nThe test task aims to assess what we can expect from you in the workplace. And this is not just about the quality of your design skills ‚Äî it‚Äôs also about how you will communicate with others and how you will be able to propose practical solutions to problems.\nWhat do I mean by ‚Äúpractical solutions‚Äù? In the real world, designers always work within certain limitations (constraints), such as time, budget, team capacity, and so on. So, if you have some bright ideas that are likely very hard to implement, keep these for the interview. The test task is a way to show that you are someone who can define the correct problems and do the proper work, e.g. find the solutions to them.\nA few words of advice on how to do exactly that:\nThe interview is the most challenging part because the most optimal way to prepare for it depends on the specific company where you‚Äôre applying for the job and the interviewer‚Äôs experience. But there are still a few ‚Äúuniversal‚Äù things you can do in order to increase your chances:\nThank you for following me so far! Hopefully, you have learned your design tools, worked on your portfolio, and prepared meticulously for your first interviews. If all goes according to plan, sooner or later, you‚Äôll get your first junior UX job. And then you‚Äôll face more challenges, about which I will speak in detail in the second part of my two-part article series.\nBut before that, do check Further Reading, where I have gathered a few resources that will be very useful if you are just about to begin your UX design career.\nBasic Design Resources\nA List of Design Resources from the Nielsen Norman Group"
  },
  {
    "url": "/2024/08/desktop-wallpaper-calendars-september-2024/",
    "title": "Goodbye Summer, Hello September (2024 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "Aug 31, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "Let‚Äôs get ready for September with a fresh collection of desktop wallpapers! Created with love by the community for the community, they come in versions with and without a calendar. Enjoy!",
    "content": "Lush green slowly turning into yellows and reds in the Northern hemisphere; nature reawakening in the Southern part of the world: September is a time of change. A chance to leave old habits behind and embrace the beginning of something new. And, well, sometimes it only takes a small change in routines to spark fresh inspiration and, who knows, maybe even great ideas.\nWith that in mind, we started our monthly wallpapers series more than 13 years ago, and from the very beginning to today, artists and designers from across the globe have submitted their designs to it to cater for a bit of variety on your screens every month. Of course, it wasn‚Äôt any different this time around.\nIn this post, you‚Äôll find their wallpaper designs for September 2024. All of them come in versions with and without a calendar and can be downloaded for free. As a little bonus goodie, we also added some favorites from past years‚Äô September editions to the collection. So maybe you‚Äôll spot one of your almost-forgotten favorites in here, too? A huge thank-you to everyone who shared their wallpapers with us this month ‚Äî this post wouldn‚Äôt exist without you!\nNational Elephant Appreciation Day‚ÄúToday, we celebrate these magnificent creatures who play such a vital role in our ecosystems and cultures. Elephants are symbols of wisdom, strength, and loyalty. Their social bonds are strong, and their playful nature, especially in the young ones, reminds us of the importance of joy and connection in our lives.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSummer In Costa Rica‚ÄúWe continue in tropical climates. In this case, we travel to Costa Rica to observe the Arenal volcano from the lake while we use a kayak.‚Äù ‚Äî Designed by Veronica Valenzuela from Spain.previewwith calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440without calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nPigman And RobinDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nA Mind Of Their Own‚ÄúMy eyes have a mind of their own: they see what they want to see‚Ä¶‚Äù ‚Äî Designed by Bhabna Basak from India.previewwith calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMore BananasDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nQuality Education For All‚ÄúOur team takes pride in aligning our volunteer initiatives with the 2030 Agenda for Sustainable Development‚Äôs ‚ÄòQuality Education‚Äô goal. This goal reflects a global commitment to ensure inclusive and equitable quality education and promote lifelong learning opportunities for all. We encourage our team members to volunteer with non-profits they care about year-round. Explore local opportunities and use your skills to make a meaningful impact!‚Äù ‚Äî Designed by Jenna Finberg from Portland, OR.previewwith calendar: 320x480, 1024x1024, 1280x720, 1680x1200, 1920x1080, 2560x1440without calendar: 320x480, 1024x1024, 1280x720, 1680x1200, 1920x1080, 2560x1440\nGreen Jewellery‚ÄúI was thinking about African bead necklaces when making this wallpaper. I chose green and warm colors, because summer has not ended in the north ‚Äî let‚Äôs enjoy it.‚Äù ‚Äî Designed by Philippe Brouard from France.previewwith calendar: 1024x768, 1366x768, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3840x2160without calendar: 1024x768, 1366x768, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3840x2160\nDiscover, Dream, Travel!‚ÄúCelebrate World Tourism Day by exploring new destinations and cultures around the globe!‚Äù ‚Äî Designed by Reethu M from London.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nHappy Labor Day‚ÄúI wanted my design to revolve around the themes of unity, hard work, and patriotism to honor the workforce that builds a great nation. The flags, the skyline, and the human figure outline evoke a sense of pride, appreciation, dedication, and solidarity.‚Äù ‚Äî Designed by Cronix from the United States.previewwith calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880without calendar: 800x480, 800x600, 1024x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1440x960, 1600x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3072x1920, 3840x2160, 5120x2880\nAutumn Rains‚ÄúThis autumn, we expect to see a lot of rainy days and blues, so we wanted to change the paradigm and wish a warm welcome to the new season. After all, if you come to think of it: rain is not so bad if you have an umbrella and a raincoat. Come autumn, we welcome you!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nTerrazzo‚ÄúWith the end of summer and fall coming soon, I created this terrazzo pattern wallpaper to brighten up your desktop. Enjoy the month!‚Äù ‚Äî Designed by Melissa Bogemans from Belgium.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nFunny Cats‚ÄúCats are beautiful animals. They‚Äôre quiet, clean, and warm. They‚Äôre funny and can become an endless source of love and entertainment. Here for the cats!‚Äù ‚Äî Designed by UrbanUI from India.previewwithout calendar: 360x640, 1024x768, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1680x1200, 1920x1080\nCacti Everywhere‚ÄúSeasons come and go, but our brave cactuses still stand. Summer is almost over and autumn is coming, but the beloved plants don‚Äôt care.‚Äù ‚Äî Designed by L√≠via L√©n√°rt from Hungary.previewwithout calendar: 320x480, 800x480, 1024x768, 1024x1024, 1280x1024, 1400x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSummer Ending‚ÄúAs summer comes to an end, all the creatures pull back to their hiding places, searching for warmth within themselves and dreaming of neverending adventures under the tinted sky of closing dog days.‚Äù ‚Äî Designed by Ana Masnikosa from Belgrade, Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nThe RebelDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nNational Video Games Day Delight‚ÄúSeptember 12th brings us National Video Games Day. US-based video game players love this day and celebrate with huge gaming tournaments. What was once a 2D experience in the home is now a global phenomenon with players playing against each other across statelines and national borders via the internet. National Video Games Day gives gamers the perfect chance to celebrate and socialize! So grab your controller, join online and let the games begin!‚Äù ‚Äî Designed by Ever Increasing Circles from the United Kingdom.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nLong Live Summer‚ÄúWhile September‚Äôs Autumnal Equinox technically signifies the end of the summer season, this wallpaper is for all those summer lovers, like me, who don‚Äôt want the sunshine, warm weather, and lazy days to end.‚Äù ‚Äî Designed by Vicki Grunewald from Washington.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nFlower Soul‚ÄúThe earth has music for those who listen. Take a break and relax and while you drive out the stress, catch a glimpse of the beautiful nature around you. Can you hear the rhythm of the breeze blowing, the flowers singing, and the butterflies fluttering to cheer you up? We dedicate flowers which symbolize happiness and love to one and all.‚Äù ‚Äî Designed by Krishnankutty from India.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nStay Or Leave?Designed by Ricardo Gimenes from Spain.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nHungryDesigned by Elise Vanoorbeek from Belgium.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1440x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nRainy FlowersDesigned by Teodora Vasileva from Bulgaria.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1280x720, 1280x960, 1280x1024, 1400x1050, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nScience Is Magic‚ÄúScience is like magic, except it‚Äôs real.‚Äù ‚Äî Designed by Bhabna Basak from India.previewwithout calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nListen Closer‚Ä¶ The Mushrooms Are Growing‚ÄúIt‚Äôs this time of the year when children go to school and grown-ups go to collect mushrooms.‚Äù ‚Äî Designed by Igor Izhik from Canada.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600\nBatmomDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nWine Harvest Season‚ÄúWelcome to the wine harvest season in Serbia. It‚Äôs September, and the hazy sunshine bathes the vines on the slopes of Fru≈°ka Gora. Everything is ready for the making of Bermet, the most famous wine from Serbia. This spiced wine was a favorite of the Austro-Hungarian elite and was served even on the Titanic. Bermet‚Äôs recipe is a closely guarded secret, and the wine is produced by just a handful of families in the town of Sremski Karlovci, near Novi Sad. On the other side of Novi Sad, plains of corn and sunflower fields blend in with the horizon, catching the last warm sun rays of this year.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBear TimeDesigned by Bojana Stojanovic from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1080, 1366x768, 1400x1050, 1440x990, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMaryland Pride‚ÄúAs summer comes to a close, so does the end of blue crab season in Maryland. Blue crabs have been a regional delicacy since the 1700s and have become Maryland‚Äôs most valuable fishing industry, adding millions of dollars to the Maryland economy each year. The blue crab has contributed so much to the state‚Äôs regional culture and economy, in 1989 it was named the State Crustacean, cementing its importance in Maryland history.‚Äù ‚Äî Designed by The Hannon Group from Washington DC.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1280x960, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1440, 2560x1440\nFinding Jaguar‚ÄúNature and our planet have given us life, enabled us to enjoy the most wonderful place known to us in the universe. People have given themselves the right to master something they do not fully understand. We dedicate this September calendar to a true nature lover, Vedran Badjun from Dalmatia, Croatia, who inspires us to love our planet, live in harmony with it and appreciate all that it has to offer. Amazon, Siberia, and every tree or animal on the planet are treasures we lose every day. Let‚Äôs change that!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nPenguin Family‚ÄúPenguins are sociable, independent and able to survive harsh winters. They work as a team to care for their offspring and I love that!‚Äù ‚Äî Designed by Glynnis Owen from Australia.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x960, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nEarly Autumn‚ÄúSeptember is usually considered as early autumn so I decided to draw some trees and leaves. However, nobody likes that summer is coming to an end, that‚Äôs why I kept summerish colors and style.‚Äù ‚Äî Designed by Kat Gluszek from Germany.previewwithout calendar: 800x480, 1024x768, 1152x864, 1280x800, 1280x960, 1440x900, 1680x1200, 1920x1080, 2560x1440\nSummer Is Leaving‚ÄúIt is inevitable. Summer is leaving silently. Let us think of ways to make the most of what is left of the beloved season.‚Äù ‚Äî Designed by Bootstrap Dashboards from India.previewwithout calendar: 360x640, 1024x768, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x900, 1680x1200, 1920x1080\nLucha Libre‚ÄúThis month is Mexico‚Äôs independence day and I decided to illustrate one of the things Mexico‚Äôs best known for: the Lucha Libre.‚Äù ‚Äî Designed by Maria Keller from Mexico.previewwithout calendar: 320x480, 640x480, 640x1136, 750x1334, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1242x2208, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2880x1800\nGeometric Autumn‚ÄúI designed this wallpaper to remind everyone that autumn is here.‚Äù ‚Äî Designed by Advanced Web Ranking from Romania.previewwithout calendar: 800x600, 1024x768, 1280x800, 1280x1024, 1440x900, 1440x1050, 1600x1200, 1680x1200, 1920x1200, 1920x1440, 2560x1440\nNever Stop ExploringDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nStill In Vacation Mood‚ÄúIt‚Äôs officially the end of summer and I‚Äôm still in vacation mood, dreaming about all the amazing places I‚Äôve seen. This illustration is inspired by a small town in France, on the Atlantic coast, right by the beach.‚Äù ‚Äî Designed by Miruna Sfia from Romania.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1440x900, 1440x1050, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nColors Of September‚ÄúI love September. Its colors and smells.‚Äù ‚Äî Designed by Juliagav from Ukraine.previewwithout calendar: 320x480, 1024x768, 1024x1024, 1280x800, 1280x1024, 1440x900, 1680x1050, 1920x1080, 2560x1440\nOffice‚ÄúClean, minimalistic office for a productive day.‚Äù ‚Äî Designed by Antun Hir≈°man from Croatia.previewwithout calendar: 320x480, 800x600, 1280x720, 1280x1024, 1440x900, 1680x1050, 1920x1080, 1920x1440, 2560x1440\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2024/08/how-defend-your-design-process/",
    "title": "How To Defend Your Design Process",
    "author": "Vitaly Friedman",
    "date": "Aug 15, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Design",
      "Workflow",
      "Communication"
    ],
    "summary": "Ever felt pressure to speed up your design process? Here‚Äôs how to address unrealistic expectations and foster a shared understanding with stakeholders, ensuring everyone is aligned on the path to a successful delivery. Part of Smart Interface Design Patterns by yours truly.",
    "content": "Maybe you‚Äôve been there before: You‚Äôre in the middle of the design process, and stakeholders expect you to deliver faster. How do you best manage a situation like this? How do you communicate the design process and defend it when stakeholders think the design is taking too long?\nLet‚Äôs take a closer look at what you can do to clarify false expectations and prevent them in the first place.\nThis article is part of our ongoing series on UX. You can find more details on design patterns and UX strategy in Smart Interface Design Patterns¬†üç£ ‚Äî with live UX training coming up this year. Free preview.\nü§î Polished deliverables hide the process.\nWhen you show someone a polished, final design, they probably won‚Äôt see the complexity of the work behind it unless they are a designer themself, of course. That‚Äôs the knowledge gap that lies between designers and stakeholders and one of the reasons why stakeholders might make false assumptions about how long the design will take.\nü§î Polished deliverables suggest a fast production time.\nNot familiar with the design process, stakeholders often track value in UX deliverables in an attempt to ‚Äúmeasure design‚Äù and the progress made. And that can lead to a dilemma: When more final, polished deliverables arrive quickly, stakeholders also assume a faster production time. The real value of design, however, lies in the quality of the process behind it.\nDesign is all about well-orchestrated feedback loops. For different audiences, from customers and designers to developers and stakeholders. Cutting corners breaks these feedback loops. The result is poor inputs that lead to poor outcomes ‚Äî often reversible but sometimes damaging for years to come.\nProtecting the design process isn‚Äôt only in the interest of the designers but, most importantly, in the interest of the user and the business. So, how can we advocate for it?\n‚úÖ Highlight user value.\nOne mistake to avoid is to present deliverables as ‚Äúfinished.‚Äù Emphasize that you are still testing and highlight that the design process is a way to maximize user value and that business value comes from user value, not the other way around. No productivity optimization can automate user value, and there is no ‚Äúlater‚Äù phase to patch broken design work.\n‚úÖ Ask for uninterrupted time.\nTo get the time you and your team need to design, it might be an option to suggest uninterrupted times for heads-down design work. You could also suggest shifting priorities or reducing the overall scope.\n‚úÖ Be sincere about the process.\nAlso, remember to calibrate expectations: You don‚Äôt know how your stakeholders work, so you shouldn‚Äôt expect that they know and understand the design process. The more sincere you are about what‚Äôs needed to be ready, the more likely you are to get understanding and support, rather than fast turnaround requests.\n‚úÖ Visualize progress.\nAs designers, we often get defensive, not showing the work until we feel that it‚Äôs in good shape. Personally, I found it remarkably helpful to show the design progress to stakeholders early and repeatedly instead. Not to ask for a personal opinion on the design but if they think it actually helps deliver user value.\nA great technique to visualize the complexity of UX work is event storming ‚Äî we‚Äôll take a closer look at how it works in a second. To keep stakeholders on top of things, it might also be a good idea to report progress proactively. So why not opt for a short, two-minute video update once a week?\nThe most impactful way to be transparent about the process and explain why design takes time is to visualize it. Not as abstract Double-Diamond or Triple-Diamond diagrams, but as messy, real-world sticky notes on a huge Miro or FigJam board ‚Äî with all the pieces of work needed to get to final deliverables.\nBasically, we bring everyone involved in the project on board for a 2-hour session. We set orange sticky notes as events required for the success of the project on a timeline. Then, we cluster these events and break them across lanes, with everything from user testing and stakeholder approval to research tasks and design initiatives.\nThe resulting timeline visualizes the process and acts as a reference for the work to be done, or the work completed. Sometimes, we add multiple lanes to map the work across different UX activities, e.g., UX research, UX metrics, and so on. Your timeline might also include any other teams and domains that are relevant to the work ‚Äî think technical details, risks, stakeholder engagement, user testing, and others.\nTo me, event storming creates a much more honest and real visualization of the design process compared to any diamond diagrams that we often use. It‚Äôs messy, it‚Äôs complex, it‚Äôs difficult, and it matches the complexity of real life. Plus, it‚Äôs customized to the needs of a specific project, with people who must be involved for successful delivery.\nI can‚Äôt emphasize enough just how incredibly impactful this little exercise can be to create a shared understanding about what we are doing, how we are doing it, and what is required from all teams for a successful delivery. I hope it will help you defend your process the next time stakeholders ask for a quicker turnaround. üôåüèΩ\nYou can find more details on design patterns and UX strategy in Smart Interface Design Patterns, our 10h-video course with 100s of practical examples from real-life projects ‚Äî with a live UX training later this year. Everything from mega-dropdowns to complex enterprise tables ‚Äî with 5 new segments added every year. Jump to a free preview. Use code BIRDIE to save 15% off.\n100 design patterns & real-life\nexamples.10h-video course + live UX training. Free preview.\n(yk)Explore more onDesignWorkflowCommunication"
  },
  {
    "url": "/2024/08/thoughts-after-15-years-spent-ux-design-part2/",
    "title": "If I Was Starting My Career Today: Thoughts After 15 Years Spent In UX Design (Part 2)",
    "author": "Andrii Zhdan",
    "date": "Aug 9, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Career",
      "Evergreen",
      "Design",
      "UX"
    ],
    "summary": "In this two-part series, Andrii Zhdan outlines common challenges faced at the start of a design career and offers advice to smooth your journey based on insights from his experience hiring designers. In Part 2, Andrii speaks about how you can grow faster in your brand-new junior UX job.",
    "content": "In the previous article in my two-part series, I have explained how important it is to start by mastering your design tools, to work on your portfolio (even if you have very little work experience ‚Äî which is to be expected at this stage), and to carefully prepare for your first design interviews.\nIf all goes according to plan, and with a little bit of luck, you‚Äôll land your first junior UX job ‚Äî and then, of course, you‚Äôll be facing more challenges, about which I am about to speak in this second article in my two-part article series.\nYou have probably heard of the Pareto Rule, which states that 20% of actions provide 80% of the results.\nThis means that some of your actions will help you grow much faster than others.\nBut before we go into the details, let‚Äôs briefly consider the junior UX designer path. I think it‚Äôs clear that, at first, juniors usually assist other designers with simple but time-consuming tasks. Then, the level of complexity and your responsibilities start increasing, depending on your performance.\nSo, you got your first design job? Great! Here are a few things you can focus on if you want to be growing at a faster pace.\nThe simple but slow way to go is to do your work and then wait until your superiors notice how good you are and start giving you more complex tasks. The problem is that people focus on themselves too much.\nSo, to ‚Äúcut some corners,‚Äù you need to actively look for challenges. It‚Äôs scary, I know, but remember, people who invented any new groundbreaking UX approach or a new framework you see in books and manuals now used their intuition first. You have the whole World Wide Web full of articles and lectures about that. So, define the skill you want to develop, spend a day reading about this topic, find a real problem, and practice. Then, share what you did and get some feedback. After a few iterations, I bet you will be assigned the first real task for your practice!\nTake the time to look again at the screenshot of the Amazon website (from Part One):\nUser interfaces didn‚Äôt appear in their present form right from the start. Instead, they evolved to their current state over the span of many years. And you all were part of their evolution, albeit passively ‚Äî you registered on different websites, reset your passwords quite a few times, clicked onboarding screens, filled out short and long web forms, used search, and so on.\nIn your design work, all tasks (or 99% of them, at least at the beginning) will be based on those UX patterns. You don‚Äôt need to reinvent the bicycle; you only need to remember what you already know and pay attention to the details while using the interfaces of the apps on your smartphone and on your computer. Ask yourself:\nAll of today‚Äôs great design solutions were built based on common sense and then documented so that other people can learn how to re-use this knowledge. Develop your own ‚Äúcommon sense‚Äù skill every day by being a careful observer and by living your life consciously. Notice the patterns of good design, try to understand and memorize them, and then implement and rethink them in your own work.I can also highly recommend the Smart Interface Design Patterns course with Vitaly Friedman. It provides guidelines and best practices for common components in modern interfaces. Inventing a new solution for every problem takes time, and too often, it‚Äôs just unnecessary. Instead, we can rely on bulletproof design patterns to avoid issues down the line. This course helps with just that. In the course, you will study hundreds of hand-picked examples, from complex navigation to filters, tables, and forms, and you will work on actual real-life challenges.Ôøº\nThe ability to convey complex thoughts and ideas in the form of clear sentences defines how effectively you will be able to interact with other people.\nThis is a core work skill ‚Äî a skill that you‚Äôll be actually using your whole life, and not only in your work. I have written about this topic in much detail previously:\nIn my article, I have described all the general principles that apply to effective communication, with the most important being: to develop a skill, you need to practice.\nAs a quick exercise, try telling your friends about the work you do and not to be boring while explaining the details. You will feel that you are on the right track if they do not try to change the topic and instead ask you additional questions!\nDon‚Äôt wait for your yearly review to hear about what you were doing right and wrong. Ask people for feedback and suggestions, and ask them often.\nTo help them start, first, tell them about your weak side and ask them to tell you their own impressions. Try encouraging them to expand their input and ask for recommendations on how you could fix your weaknesses. Don‚Äôt forget to tell them when you are trying to apply their suggestions in practice. After all, these people helped you become better, so be thankful.\nI see a lot of designers trying to apply all of their experience to every project, and they often complain that it doesn‚Äôt work ‚Äî customers refuse to follow the entire classical UX process, such as defining User Personas, creating the Information Architecture (IA), outlining the customer journey map, and so on. Sometimes, it happens because clients don‚Äôt have the time and budget for it, or they don‚Äôt see the value because the designer can‚Äôt explain it in a proper way.\nBut remember that many great products were built without using all of today‚Äôs available and tested UX approaches &mdahs this doesn‚Äôt mean those approaches are useless. But initially, there was only common sense and many attempts to get better results, and only then did someone describe something as a working approach and specify all the details. So, before trying to apply any of these UX techniques, think about what you need to achieve. Is there any other way to get there within your time and budget?\nLearn how the business works. Talk to customers in business language and communicate the value you create and not the specific approach, framework, or tool that you‚Äôll be using.\nYes, user experience should be first, but let‚Äôs be honest ‚Äî we also love nice things! The same goes for your customers; they can‚Äôt always see the UX part of your work but can always say whether the interface is good-looking. So, learn the composition and color theory, use elegant illustrations and icons, learn typography, and always strive to make your work visually appealing. Some would say that it‚Äôs not so important, but trust me, it is.\nAs an exercise, try to copy the design of a few beautifully looking interfaces. Take a look at an interface screen, then close it and try to make a copy of it from memory. When you are done, compare the two and then make a few more adjustments in order to have as close a copy of the interface as possible. Try to understand why the original was built the way it is. I bet this process of reproducing an interface will help you understand many things you haven‚Äôt been noticing before.\nPrepare to get some new tasks in advance. Create a list of questions, and don‚Äôt forget to ask about the deadlines. Align your plan and the number of iterations so people know precisely what and when to expect from you. Be curious (but not annoying) by asking or sending questions every few hours (but try to first search for the answers online). Even if you don‚Äôt find the exact answer, it‚Äôll help you formulate the right questions better and get a better view of the ‚Äúbig picture.‚Äù Remember, one day, you will get a task directly from the customer, so fetching the data you need to complete tasks correctly is an excellent skill to develop.\nWhen you are just beginning to learn, too many articles about UX design will look like absolute ‚Äúmust-reads‚Äù to you. But you will drown in the information if you try to read them all in no particular order. Better, instead of just trying to read everything, try first to find a mentor who will help you build a learning plan and will advise you along the way.\nAnother good way to start is to complete a solid UX online course. If you can‚Äôt, take the learning program of any popular UX course out there and research the topics from the course‚Äôs list one by one. Also, you can use such a structured list (going from easier to more complex UX topics) for filtering articles you are going to read.\nBruce Lee once said:\nYou may have read a lot about some new revolutionary UX approaches, but only practicing allows you to convert this knowledge into a skill. Our brain continually works to clear out unnecessary information from our memory. Therefore, actively practicing the ideas and knowledge that you have learned is the only way to signal to your brain that this knowledge is essential to be retained and re-used.\nOn a related note, you will likely remember also the popular ‚Äú10,000-hour rule,‚Äù which was popularized by Malcolm Gladwell‚Äôs bestseller book Outliers.\nAs Malcolm says, the rule goes like this: it takes 10,000 hours of intensive practice to achieve mastery of complex skills and materials, like playing the violin or getting as good as Bill Gates at computer programming. Turns out, practice is important, and it‚Äôs surprising how much time and effort it may take to master something complicated. But later research also suggests that someone could practice for thousands of hours and still not be a master performer. They could be outperformed by someone who practiced less but had a teacher who showed them just what to focus on at a key moment in their practice.\nSo, remember my advice from the previous section? Try to find a mentor because, as I said earlier, learning and practicing with a mentor and a good plan will often lead to better results.\nInstead of a conclusion (or trying to give you the answer to the ultimate question of life, the universe, and everything), only a few final words of advice.\nRemember, there doesn‚Äôt exist a single correct way to do things because there are no absolute criteria to define ‚Äúthings done properly.‚Äù You can apply all your knowledge and required steps in the classical design process, and the product may fail.\nAt the same time, someone could quickly develop a minimum viable product (MVP) without using all of the standard design phases ‚Äî and still conquer the market. Don‚Äôt believe me?\nThe first Apple iPhone, introduced 17 years ago, didn‚Äôt have even a basic copy/paste feature yet we all know how the iPhone conquered the world (and it‚Äôs not only the iPhone, there are many other successful MVP examples out there, often conceived by small startups). It‚Äôs because Apple engineers and designers got the core product design concept right; they could release a product that didn‚Äôt yet have everything in it.\nSo yes, you need to read a lot about UX and UI design, watch tutorials, learn the design theory, try different approaches, speak to the people using your product (or the first alpha or beta version of it), and practice. But in the end, always ask yourself, ‚ÄúIs this the most efficient way to bring value to people and get the needed results?‚Äù If the answer is ‚ÄúNo,‚Äù update your design plan. Because things are not happening by themselves. Instead, we, humans, make things happen.\nYou are the pilot of your plane, so don‚Äôt expect someone else to care about your success more than you. Do your best. Make corrections and iterate. Learn, learn, learn. And sooner or later, you‚Äôll reach success!\nA Selection Of Design Resources (Part One, Part Two)"
  },
  {
    "url": "/2024/08/time-to-talk-about-css5/",
    "title": "It‚Äôs Time To Talk About ‚ÄúCSS5‚Äù",
    "author": "Brecht De Ruyte",
    "date": "Aug 5, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS",
      "Coding",
      "Techniques",
      "Design"
    ],
    "summary": "Have you ever wondered what happened after CSS3? It‚Äôs common knowledge that we never saw CSS4 come after it, yet we have a plethora of new features that have no similar way of defining when they were introduced. The W3C CSS-Next community group is actively searching for better approaches for how we describe the evolution of CSS over time and identify feature sets as effectively as we did with CSS3 way back in 2009 ‚Äî and you can help.",
    "content": "We have been talking about CSS3 for a long time. Call me a fossil, but I still remember the new border-radius property feeling like the most incredible CSS3 feature. We have moved on since we got border-radius and a slew of new features dropped in a single CSS3 release back in 2009.\nCSS, too, has moved on as a language, and yet ‚ÄúCSS3‚Äù is still in our lexicon as the last ‚Äúofficial‚Äù semantically-versioned release of the CSS language.\nWe see CSS Working Group (CSSWG) discussions happening in the open. We have the draft specifications and an archive of versions at our disposal. The resources are there! But the develop-ship-implement flow remains elusive and leaves many of us developers wondering: When is the next CSS release, and what‚Äôs in it?\nThis is a challenging balancing act. We have spec authors, code authors, and user agents working both interdependently and independently and the communication gaps are numerous and wide. The result? New features take longer to be implemented, leading to developers taking longer to adopt them. We might even consider CSS3 to be the last great big ‚Äúmarketing‚Äù push for CSS as a language.\nThat‚Äôs what the CSS-Next community is grappling with at this very moment. If you haven‚Äôt heard of the group, you‚Äôre not alone, but either way, it‚Äôs high time we shed light on it and the ideas coming from it. As someone participating in the group, I thought I would share the conversations we‚Äôre having and how we‚Äôre approaching the way CSS releases are communicated.\nBefore we formally ‚Äúmeet‚Äù the CSS-Next group, it‚Äôs worth knowing that it is still officially referred to as the CSS4 Community Group as far as the W3C is concerned.\nAnd that might be the very first thing you ought to know about CSS-Next: it is part of the W3C and consists of CSSWG members, developers, designers, user agents, and, really, anyone passionate about the web and who wants to participate in the discussion. W3C groups like CSS-Next are open to everyone to bring our disparate groups together, opening opportunities to shape tomorrow‚Äôs vision of the web.\nCSS-Next, in particular, is where people gather to discuss the possibility of raising awareness of CSS evolutions during the last decade. At its core, the group is discussing approaches for bundling CSS features that have shipped since CSS3 was released in 2009 and how to name the bundle (or bundles, perhaps) so we have a way of referring to this particular ‚Äúera‚Äù of CSS and pushing those features forward.\nLet‚Äôs go back a few years. More specifically, let‚Äôs return to the year 2020.\nIt all started when Safari Evangelist Jen Simmons posted an open issue in the CSSWG‚Äôs GitHub repo for CSS draft specifications requesting a definition for a ‚ÄúCSS4‚Äù release.\nThis might be one of the biggest responses ‚Äî if not the biggest response ‚Äî to a CSSWG issue based solely on emoji reactions.\nThe idea of defining CSS4 had some back-ups by Chris Coyier, Nicole Sullivan, and PPK. The idea is to push technologies forward and help educators and site owners, even if it‚Äôs just for the sake of marketing.\nBut why is this important? Why should we care about another level or ‚ÄúCSS Saga‚Äù? To get to that point, we might need to talk about CSS3 and what exactly it defines.\nThe CSS3 grouping of features included level-3 specs for features from typography to selectors and backgrounds. From this point on, each CSS spec has been numbered individually.\nHowever, CSS3 is still the most common term developers use to define the capabilities of modern CSS. We see this across the web, from the way educational institutions teach CSS to the job requirements on resumes.\nThe term CSS3 loses meaning year-over-year. You can see the dilution everywhere. The earliest CSS3 drafts were published in June 1999 ‚Äî before many of my colleagues were even born ‚Äî and yet CSS is one of the fastest-growing languages in the current webscape.\nWhen we look at job postings, we run into vacancies asking for knowledge of CSS3, which is over 10 years old. Without an updated level, we‚Äôre just asking if you‚Äôve written CSS since the border-radius property came out. Furthermore, when we want to learn CSS, a CSS3 logo next to educational materials no longer signals current material. It kind of feels like time has stood still.\nHere‚Äôs an example job posting that illustrates the issue:\nBut that‚Äôs not all. If you do a Google search on ‚ÄúLearn CSS‚Äù and check the images, you might be surprised how many CSS3 logos you can spot:\nAbout 50% of the images show the CSS3 badge. To me, this clearly signals:\nCSS3 had still has a huge impact on the ecosystem. The same logo is trying to say it teaches Flexbox all the way to color-mix() ‚Äî a spread of hundreds of CSS features.\nCSS3 and HTML5 were big improvements to those respective languages ‚Äî we‚Äôve come a long way since then. We have features that people didn‚Äôt even think were possible back in 2012 (when we officially spoke of CSS3 as a level).\nFor example, there was a time when people thought that containers didn‚Äôt know anything and it never be possible to style an element based on the width of its parent. But now, of course, we have CSS Container Queries, and all of this is possible today. The things that are possible with CSS changed over time, as so beautifully told by Miriam Suzanne at CSS Day 2023.\nWe do not want to ignore the success of CSS3 and say it is wrong; in fact, we believe it‚Äôs time to repeat the tremendous success of CSS3.\nImagine yourself 10 years from now reading a ‚Äúmodern‚Äù CSS feature that was introduced as many as 10 years ago. It wouldn‚Äôt add up, right? Modern is not a future-proof name, something that Geoff Graham opined when asking the correct question, ‚ÄúWhat exactly is ‚ÄòModern CSS‚Äô?‚Äù\nThis is exactly where the CSS-Next community group comes in.\nThe CSS-Next community group aims to align and modernize the general understanding of CSS in the wider developer community by labeling feature sets that have shipped since the initial set of CSS3 features, helping developers upskill their understanding of CSS across the ecosystem.\nThe definition of what is ‚Äúcurrent‚Äù CSS changes with time. Sometimes, specs are incomplete or haven‚Äôt even been drafted. While Baseline looks at the current browser support of a feature in CSS, we want to take a look at the evolution of the language itself. The CSS levels should not care about which browser implemented it first.\nIt might be more nuanced than this in reality, but that‚Äôs pretty much the gist. We also don‚Äôt want it to become another ‚Äúmodern CSS‚Äù bucket. Indeed, referring to CSS3 as an ‚Äúera‚Äù has helped compartmentalize how we can shift into CSS4, CSS5, and beyond. For example, labeling something as a ‚ÄúCSS4‚Äù feature provides a hint as far as when that feature was born. A feature that reaches ‚Äúbaseline‚Äù meanwhile merely indicates the status of that feature‚Äôs browser implementation, which is a separate concern.\nIdentifying features by era and implementation status are both indicators and provide meta information about a CSS feature but with different purposes.\nIt‚Äôs fair to wonder if a potential solution is to take a ‚Äúsnapshot‚Äù of the CSS feature set each year and use that as a mile marker for CSS feature releases. However, an annual picture of the language is less effective than defining a particular era in which specific features are introduced.\nThere were a handful of years when CSS was relatively quiet compared to the mad dash of the last few years. Imagine a year in which nothing, or maybe very few, CSS features are shipped, and the snapshot for that year is nearly identical to the previous year‚Äôs snapshot. Now imagine CSS explodes the following year with a deluge of new features that result in a massive delta between snapshots. It takes mental agility to compare complete snapshots of the entire language and find what‚Äôs new.\nI think I‚Äôve effectively established that the term ‚ÄúCSS‚Äù alone isn‚Äôt clear or helpful enough to illustrate the evolution of the CSS, just as calling a certain feature ‚Äúmodern‚Äù degrades over time.\nAll of this comes back to a set of goals that the CSS-Next group is rallying around:\nWhat we do not want is to:\nThis doesn‚Äôt mean that everything in the last list is null and void. We could, for example, have CSS eras that list all the features specced in that period. And inside that list, there could be a baseline reference for the implementations of those features, making it easier to bring forward some ideas for the next Interop, which informs Baseline.\nThis leaves the CSS-Next group with a super-clear focus to:\nA lot of thought and work has gone into the way CSS is described in eras. The initial idea was to pick up where CSS3 left off and jump straight into CSS4. But the number of features released between the two eras would be massive, even if we narrowed it down to just the features released since 2020, never mind 2009.\nIt makes sense, instead, to split the difference and call CSS4 a done deal as of, say, 2018 and a fundamental part of CSS in its current state as we begin with the next logical period: CSS5.\nHere‚Äôs how the definitions are currently defined:\nCSS3 (~2009-2012):Level 3 CSS specs as defined by the CSSWG. (immutable)\nCSS4 (~2013-2018):Essential features that were not part of CSS3 but are already a fundamental part of CSS.\nCSS5 (~2019-2024):Newer features whose adoption is steadily growing.\nCSS6 (~2025+):Early-stage features that are planned for future CSS.\nWe released a request for comments last May for community input from developers like you. We‚Äôve received a few comments that have been taken into account, but we need much more feedback to help inform our approach.\nWe want a big representative response from the community! But that takes awareness, and we need you to make that happen. Anything you can do to let your teams and colleagues that the CSS-Next group is a thing and that we‚Äôre trying to solve the way we talk about CSS features is greatly appreciated. We want to know what you and others think about the things we‚Äôre wrestling with, like whether or not the way we‚Äôre grouping eras above is a sound approach, where you think those lines should be drawn, and if you agree that we‚Äôre aiming for the right goals.\nWe also want you to participate. Anyone is welcome to join the CSS-Next group and we could certainly use help brainstorming ideas. There‚Äôs even an incubation group that conducts a biweekly hour-long session that takes place on Mondays at 8:00 a.m. Pacific Time (2:00 p.m. GMT).\nOn a completely personal note, I‚Äôd like to add that I joined the CSS-Next group purely out of interest but became much more actively involved once the mission became very clear to me. As a developer working in an agency, I see how fast CSS changes and have struggled, like many of you, to keep up.\nA seasoned colleague of mine commented the other day that they wouldn‚Äôt even know how to approach vanilla CSS on a fresh website project. There is no shame in that! I know many of us feel the same way. So, why not bring it to marketing terms and figure out a better way to frame discussions about CSS features based on eras? You can help get us there!\nAnd if you think I‚Äôm blameless when it comes to talking about CSS in generic ‚Äúmodern‚Äù terms, all it takes is a quick look at the headline of another Smashing article I authored‚Ä¶ this year!\nLet‚Äôs get going with CSS5 and spread the word! Let me hear your thoughts."
  },
  {
    "url": "/2024/07/getting-bottom-minimum-wcag-conformant-interactive-element-size/",
    "title": "Getting To The Bottom Of Minimum WCAG-Conformant Interactive Element Size",
    "author": "Eric Bailey",
    "date": "Jul 19, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Accessibility",
      "Design",
      "User Experience",
      "Usability"
    ],
    "summary": "WCAG provides guidance for making interactive elements more accessible by specifying minimum size requirements. In fact, the requirements are documented in two Success Criteria: 2.5.5 and 2.5.8. Despite this, WCAG can be difficult to achieve due to a number of misconceptions about the requirements. In this article, Eric Bailey discusses the nuances of interactive element sizes and clarifies what it looks like to provide accessible interactive experiences using WCAG-compliant target sizes.",
    "content": "There are many rumors and misconceptions about conforming to WCAG criteria for the minimum sizing of interactive elements. I‚Äôd like to use this post to demystify what is needed for baseline compliance and to point out an approach for making successful and inclusive interactive experiences using ample target sizes.\nGetting right to it: When it comes to pure Web Content Accessibility Guidelines (WCAG) conformance, the bare minimum pixel size for an interactive, non-inline element is 24√ó24 pixels. This is outlined in Success Criterion 2.5.8: Target Size (Minimum).\nSuccess Criterion 2.5.8 is level AA, which is the most commonly used level for public, mass-consumed websites. This Success Criterion (or SC for short) is sometimes confused for SC 2.5.5 Target Size (Enhanced), which is level AAA. The two are distinct and provide separate guidance for properly sizing interactive elements, even if they appear similar at first glance.\nSC 2.5.8 is relatively new to WCAG, having been released as part of WCAG version 2.2, which was published on October 5th, 2023. WCAG 2.2 is the most current version of the standard, but this newer release date means that knowledge of its existence isn‚Äôt as widespread as the older SC, especially outside of web accessibility circles. That said, WCAG 2.2 will remain the standard until WCAG 3.0 is released, something that is likely going to take 10‚Äì15 years or more to happen.\nSC 2.5.5 calls for larger interactive elements sizes that are at least 44√ó44 pixels (compared to the SC 2.5.8 requirement of 24√ó24 pixels). At the same time, notice that SC 2.5.5 is level AAA (compared to SC 2.5.8, level AA) which is a level reserved for specialized support beyond level AA.\nSites that need to be fully WCAG Level AAA conformant are rare. Chances are that if you are making a website or web app, you‚Äôll only need to support level AA. Level AAA is often reserved for large or highly specialized institutions.\nThe family of padding-related properties in CSS can be used to extend the interactive area of an element to make it conformant. For example, declaring padding: 4px; on an element that measures 16√ó16 pixels invisibly increases its bounding box to a total of 24√ó24 pixels. This, in turn, means the interactive element satisfies SC 2.5.8.\nThis is a good trick for making smaller interactive elements easier to click and tap. If you want more information about this sort of thing, I enthusiastically recommend Ahmad Shadeed‚Äôs post, ‚ÄúDesigning better target sizes‚Äù.\nI think it‚Äôs also worth noting that CSS margin could also hypothetically be used to achieve level AA conformance since the SC includes a spacing exception:\nThe difference here is that padding extends the interactive area, while margin does not. Through this lens, you‚Äôll want to honor the spirit of the success criterion because partial conformance is adversarial conformance. At the end of the day, we want to help people successfully click or tap interactive elements, such as buttons.\nWe tend to think of targets in terms of block elements ‚Äî elements that are displayed on their own line, such as a button at the end of a call-to-action. However, interactive elements can be inline elements as well. Think of links in a paragraph of text.\nInline interactive elements, such as text links in paragraphs, do not need to meet the 24√ó24 pixel minimum requirement. Just as margin is an exception in SC 2.5.8: Target Size (Minimum), so are inline elements with an interactive target:\nIf the differences between interactive elements that are inline and block are still confusing, that‚Äôs probably because the whole situation is even further muddied by third-party human interface guidelines requiring interactive sizes closer to what the level AAA Success Criterion 2.5.5 Target Size (Enhanced) demands.\nFor example, Apple‚Äôs ‚ÄúHuman Interface Guidelines‚Äù and Google‚Äôs ‚ÄúMaterial Design‚Äù are guidelines for how to design interfaces for their respective platforms. Apple‚Äôs guidelines recommend that interactive elements are 44√ó44 points, whereas Google‚Äôs guides stipulate target sizes that are at least 48√ó48 using density-independent pixels.\nThese may satisfy Apple and Google requirements for designing interfaces, but are they WCAG-conformant Apple and Google ‚Äî not to mention any other organization with UI guidelines ‚Äî can specify whatever interface requirements they want, but are they copasetic with WCAG SC 2.5.5 and SC 2.5.8?\nIt‚Äôs important to ask this question because there is a hierarchy when it comes to accessibility compliance, and it contains legal levels:\nHuman interface guidelines often inform design systems, which, in turn, influence the sites and apps that are built by authors like us. But they‚Äôre not the ‚Äúauthority‚Äù on accessibility compliance. Notice how everything is (and ought to be) influenced by WCAG at the very top of the chain.\nEven if these third-party interface guidelines conform to SC 2.5.5 and 2.5.8, it‚Äôs still tough to tell when they are expressed in ‚Äúpoints‚Äù and ‚Äúdensity independent pixels‚Äù which aren‚Äôt pixels, but often get conflated as such. I‚Äôd advise not getting too deep into researching what a pixel truly is. Trust me when I say it‚Äôs a road you don‚Äôt want to go down. But whatever the case, the inconsistent use of unit sizes exacerbates the issue.\nI‚Äôve also observed some developers attempting to use the pointer media feature as a clever ‚Äútrick‚Äù to detect when a touchscreen is present, then conditionally adjust an interactive element‚Äôs size as a way to get around the WCAG requirement.\nAfter all, mouse cursors are for fine movements, and touchscreens are for more broad gestures, right? Not always. The thing is, devices are multimodal. They can support many different kinds of input and don‚Äôt require a special switch to flip or button to press to do so. A straightforward example of this is switching between a trackpad and a keyboard while you browse the web. A less considered example is a device with a touchscreen that also supports a trackpad, keyboard, mouse, and voice input.\nYou might think that the combination of trackpad, keyboard, mouse, and voice inputs sounds like some sort of absurd, obscure Frankencomputer, but what I just described is a Microsoft Surface laptop, and guess what? They‚Äôre pretty popular.\nThere is a difference between the two, even though they are often used interchangeably. Let‚Äôs delineate the two as clearly as possible:\nThe other end of this consideration is that people with motor control conditions ‚Äî like hand tremors or arthritis ‚Äî can and do use mice inputs. This means that fine input actions may be painful and difficult, yet ultimately still possible to perform.\nPeople also use more precise input mechanisms for touchscreens all the time, including both official accessories and aftermarket devices. In other words, some devices designed to accommodate coarse input can also be used for fine detail work.\nI‚Äôd be remiss if I didn‚Äôt also point out that people plug mice and keyboards into smartphones. We cannot automatically say that they only support coarse pointers:\nMy point is that a mode-based approach to inclusive design is a trap. This isn‚Äôt even about view‚Äìtap asymmetry. Creating entire alternate experiences based on assumed input mode reinforces an ugly ‚Äúus versus them‚Äù mindset. It‚Äôs also far more work to set up, maintain, and educate others.\nIt‚Äôs better to proactively accommodate an unknown number of unknown people using an unknown suite of devices in unknown ways by providing an inclusive experience by default. Doing so has a list of benefits:\nAfter all, that tap input might be coming from a tongue, and that click event might be someone raising their eyebrows.\nA WCAG-conformant 24√ó24 minimum pixel size requirement for interactive elements is our industry‚Äôs best understanding of what can accommodate most access needs distributed across a global population accessing an unknown amount of content dealing with unknown topics in unknown ways under unknown circumstances.\nThe load-bearing word in that previous sentence is minimum. The guidance ‚Äî and the pixel size it mandates ‚Äî is likely a balancing act between:\nEven the SC itself acknowledges this potential limitation:\nLarger interactive areas can be a good thing to strive for. This is to say a minimum of approximately 40 pixels may be beneficial for individuals who struggle with the smaller yet still WCAG-conformant size.\nWe should also be careful not to overcorrect by dropping in gigantic interactive elements in all of our work. If an interactive area is too large, it risks being activated by accident. This is important to note when an interactive element is placed in close proximity to other interactive elements and even more important to consider when activating those elements can result in irrevocable consequences.\nThere is also a phenomenon where elements, if large enough, are not interpreted or recognized as being interactive. Consequently, users may inadvertently miss them, despite large sizing.\nConformant and successful interactive areas ‚Äî both large and small ‚Äî require knowing the ultimate goals of your website or web app. When you arm yourself with this context, you are empowered to make informed decisions about the kinds of people who use your service, why they use the service, and how you can accommodate them.\nFor example, the Glow Baby app uses larger interactive elements because it knows the user is likely holding an adorable, albeit squirmy and fussy, baby while using the application. This allows Glow Baby to emphasize the interactive targets in the interface to accommodate parents who have their hands full.\nIn the same vein, SC SC 2.5.8 acknowledges that smaller touch targets ‚Äî such as those used in map apps ‚Äî may contextually be exempt:\nNote that this exemption language is not carte blanche to make your own work an exception to the rule. It is more of a mechanism, and an acknowledgment that broadly applied rules may have exceptions that are worth thinking through and documenting for future reference.\nWe also want to consider the larger context of the device itself as well as the environment the device will be used in.\nLarger, more fixed position touchscreens compel larger interactive areas. Smaller devices that are moved around in space a lot (e.g., smartwatches) may benefit from alternate input mechanisms such as voice commands.\nWhat about people who are driving in a car? People in this context probably ought to be provided straightforward, simple interactions that are facilitated via large interactive areas to prevent them from taking their eyes off the road. The same could also be said for high-stress environments like hospitals and oil rigs.\nSimilarly, devices and apps that are designed for children may require interactive areas that are larger than WCAG requirements for interactive areas. So would experiences aimed at older demographics, where age-derived vision and motor control disability factors tend to be more present.\nMinimum conformant interactive area experiences may also make sense in their own contexts. Data-rich, information-dense experiences like the Bloomberg terminal come to mind here.\nWhile you can control what components you include in a design system, you cannot control where and how they‚Äôll be used by those who adopt and use that design system. Because of this, I suggest defensively baking accessible defaults into your design systems because they can go a long way toward incorporating accessible practices when they‚Äôre integrated right out of the box.\nOne option worth consideration is providing an accessible range of choices. Components, like buttons, can have size variants (e.g., small, medium, and large), and you can provide a minimally conformant interactive target on the smallest variant and then offer larger, equally conformant versions.\nThere is no magic number or formula to get you that perfect Goldilocks ‚Äúnot too small, not too large, but just right‚Äù interactive area size. It requires knowledge of what the people who want to use your service want, and how they go about getting it.\nThe best way to learn that? Ask people.\nAccessibility research includes more than just asking people who use screen readers what they think. It‚Äôs also a lot easier to conduct than you might think! For example, prototypes are a great way to quickly and inexpensively evaluate and de-risk your ideas before committing to writing production code. ‚ÄúConducting Accessibility Research In An Inaccessible Ecosystem‚Äù by Dr. Michele A. Williams is chock full of tips, strategies, and resources you can use to help you get started with accessibility research.\nThe bottom line is that\nTo sum things up:\nAnd, perhaps most importantly, all of this is about people and enabling them to get what they need."
  },
  {
    "url": "/2024/07/rethinking-role-ux-teams-mov-beyond-firefighting/",
    "title": "Rethinking The Role Of Your UX Teams And Move Beyond Firefighting",
    "author": "Paul Boag",
    "date": "Jul 29, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX",
      "User Experience",
      "Teams",
      "Workflow"
    ],
    "summary": "Many UX professionals often find themselves working alone, and usually face more projects impacting user experience than they can handle. In this article, Paul Boag explains how UX teams can be transformed into a significant driver of customer-centric innovation within organizations.",
    "content": "In my experience of building and supporting UX teams, most of them are significantly under-resourced. In fact, the term ‚Äúteam‚Äù can often be a stretch, with many user experience professionals finding themselves alone in their roles.\nTypically, there are way more projects that impact the user experience than the team can realistically work on. Consequently, most UX teams are in a constant state of firefighting and achieve relatively little in improving the overall experience.\nWe can complain about being under-resourced as much as we want, but the truth is that our teams are unlikely to grow to a size where we have sufficient staff to address every detail of the experience. Therefore, in this post, I want to step back and reconsider the role of user experience professionals and how UX teams can best improve the user experience of an organization.\nThere is a danger that as UX professionals, we focus too much on the tools of our trade rather than the desired outcome.\nIn other words, we tend to think that our role involves activities such as:\nBut these are merely the means to an end, not the end goal itself. These activities are also time-consuming and resource-intensive, potentially monopolizing the attention of a small UX team.\nOur true role is to improve the user experience as they interact with our organization‚Äôs digital channels.\nThis reframing of our role opens up new possibilities for how we can best serve our organizations and their customers. Instead of solely focusing on the tactical activities of UX, we must proactively identify the most impactful opportunities to enhance the overall customer experience.\nIf our goal is to elevate the customer experience, rather than solely executing UX activities, we need to change how we approach our role, especially in under-resourced teams.\nTo maximize our impact, we must shift from a tactical, project-based mindset to a more strategic, leadership-oriented one.\nAs I help shape UX teams in organizations, I achieve this by focusing on four critical areas:\nLet‚Äôs explore these in turn.\nIt is important for any UX team to demonstrate its value to the organization. One way to achieve this is by creating a set of tangible resources that can be utilized by others throughout the organization.\nTherefore, when creating a new UX team, I initially focus on establishing a core set of resources that provide value and leave an impressive impression.\nSome of the resources I typically focus on producing include:\nThese resources need to be viewed as living services that your UX team supports and refines over time. Note as well that these resources include educational elements. The importance of education and training cannot be overstated.\nBy providing training and educational resources, your UX team can empower and upskill the broader organization, enabling them to better prioritize and champion user experience improvements. This approach effectively extends the team‚Äôs reach beyond its limited internal headcount, seeking to turn everybody into user experience practitioners.\nThis training provision should include a blend of ‚Äòlive‚Äô learning and self-learning materials, with a greater focus on the latter since it can be created once and updated periodically.\nMost of the self-learning content will be integrated into the playbook and will either be custom-created by your UX team (when specific to your organization) or purchased (when more generic).\nIn addition to this self-learning content, the team can also offer longer workshops, lunchtime inspirational presentations, and possibly even in-house conferences.\nOf course, the devil can be in the details when it comes to the user experience, so colleagues across the organization will also need individual support.\nAlthough your UX team may not have the capacity to work directly on every customer experience initiative, you can provide consultative services to guide and support other teams. This strategic approach enables your UX team to have a more significant impact by empowering and upskilling the broader organization, rather than solely concentrating on executing design artifacts.\nServices I tend to offer include:\nBut it is important that your UX team limits their involvement and resists the urge to get deeply involved in the execution of every project. Their role is to be an advisor, not an implementer.\nThrough the provision of these consultative services, your UX team will start identifying individuals across the organization who value user experience and recognize its importance to some degree. The ultimate goal is to transform these individuals into advocates for UX, a process that can be facilitated by establishing a UX community within your organization.\nBuilding a UX community within the organization can amplify the impact of your UX team‚Äôs efforts and create a cohesive culture focused on customer experience. This community can serve as a network of champions and advocates for user experience, helping spread awareness and best practices throughout the organization.\nBegin by creating a mailing list or a Teams/Slack channel. Using these platforms, your UX team can exchange best practices, tips, and success stories. Additionally, you can interact with the community by posing questions, creating challenges, and organizing group activities.\nFor example, your UX team could facilitate the creation of design principles by the community, which could then be promoted organization-wide. The team could also nurture a sense of friendly competition by encouraging community members to rate their digital services against the System Usability Scale or another metric.\nThe goal is to keep UX advocates engaged and advocating for UX within their teams, with a continual focus on growing the group and bringing more people into the fold.\nFinally, this community can be rewarded for their contributions. For example, they could have priority access to services or early access to educational programs. Anything to make them feel like they are a part of something special.\nI understand that many of my suggestions may seem unattainable. Undoubtedly, you are deeply immersed in day-to-day project tasks and troubleshooting. I acknowledge that it is much easier to establish this model when starting from a blank canvas. However, it is possible to transition an existing UX team from tactical project work to UX leadership.\nThe key to success lies in establishing a new, clear mandate for the group, rather than having it defined by past expectations. This new mandate needs to be supported by senior management, which means securing their buy-in and understanding of the broader value that user experience can provide to the organization.\nI tend to approach this by suggesting that your UX team be redefined as a center of excellence (CoE). A CoE refers to a team or department that develops specialized expertise in a particular area and then disseminates that knowledge throughout the organization.\nThis term is familiar to management and helps shift management and colleague thinking away from viewing the team as UX implementors to a leadership role. Alongside this new definition, I also seek to establish new objectives and key performance indicators with management.\nThese new objectives should focus on education and empowerment, not implementation. When it comes to key performance indicators, they should revolve around the organization‚Äôs understanding of UX, overall user satisfaction, and productivity metrics, rather than the success or failure of individual projects.\nIt is not an easy shift to make, but if you do it successfully, your UX team can evolve into a powerful force for driving customer-centric innovation throughout the organization."
  },
  {
    "url": "/2024/08/how-build-multilingual-website-nuxt-i18n/",
    "title": "How To Build A Multilingual Website With Nuxt.js",
    "author": "Tim Benniks",
    "date": "Aug 1, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "JavaScript",
      "Frameworks",
      "Nuxt.js",
      "Coding",
      "Internationalization"
    ],
    "summary": "Handling translations for multilingual websites is famously difficult and, yet, crucial for many companies and organizations that serve a global audience. Thankfully, modern tooling abstracts away a great deal of the work, allowing for seamless translations that dynamically update the rendered content on a page, as demonstrated in this step-by-step tutorial.",
    "content": "Internationalization, often abbreviated as i18n, is the process of designing and developing software applications in a way that they can be easily adapted to various spoken languages like English, German, French, and more without requiring substantial changes to the codebase. It involves moving away from hardcoded strings and techniques for translating text, formatting dates and numbers, and handling different character encodings, among other tasks.\nInternationalization can give users the choice to access a given website or application in their native language, which can have a positive impression on them, making it crucial for reaching a global audience.\nIn this tutorial, we‚Äôre making a website that puts these i18n pieces together using a combination of libraries and a UI framework. You‚Äôll want to have intermediate proficiency with JavaScript, Vue, and Nuxt to follow along. Throughout this article, we will learn by examples and incrementally build a multilingual Nuxt website. Together, we will learn how to provide i18n support for different languages, lazy-load locale messages, and switch locale on runtime.\nAfter that, we will explore features like interpolation, pluralization, and date/time translations.\nAnd finally, we will fetch dynamic localized content from an API server using Hygraph as our API server to get localized content. If you do not have a Hygraph account please create one for free before jumping in.\nAs a final detail, we will use Vuetify as our UI framework, but please feel free to use another framework if you want. The final code for what we‚Äôre building is published in a GitHub repository for reference. And finally, you can also take a look at the final result in a live demo.\nnuxt-i18n is a library for implementing internationalization in Nuxt.js applications, and it‚Äôs what we will be using in this tutorial. The library is built on top of Vue I18n, which, again, is the de facto standard library for implementing i18n in Vue applications.\nWhat makes nuxt-i18n ideal for our work is that it provides the comprehensive set of features included in Vue I18n while adding more functionalities that are specific to Nuxt, like lazy loading locale messages, route generation and redirection for different locales, SEO metadata per locale, locale-specific domains, and more.\nStart a new Nuxt.js project and set it up with a UI framework of your choice. Again, I will be using Vue to establish the interface for this tutorial.\nLet us add a basic layout for our website and set up some sample Vue templates.\nFirst, a ‚ÄúBlog‚Äù page:\nNext, an ‚ÄúAbout‚Äù page:\nThis gives us a bit of a boilerplate that we can integrate our i18n work into.\nThe page templates look good, but notice how the text is hardcoded. As far as i18n goes, hardcoded content is difficult to translate into different locales. That is where the nuxt-i18n library comes in, providing the language-specific strings we need for the Vue components in the templates.\nWe‚Äôll start by installing the library via the command line:\nInside the nuxt.config.ts file, we need to ensure that we have @nuxtjs/i18n inside the modules array. We can use the i18n property to provide module-specific configurations.\nSince the nuxt-i18n library is built on top of the Vue I18n library, we can utilize its features in our Nuxt application as well. Let us create a new file, i18n.config.ts, which we will use to provide all vue-i18n configurations.\nHere, we have specified internationalization configurations, like using the en locale, and added messages for the en locale. These messages can be used inside the markup in the templates we made with the help of a $t function from Vue I18n.\nNext, we need to link the i18n.config.ts configurations in our Nuxt config file.\nNow, we can use the $t function in our components ‚Äî as shown below ‚Äî to parse strings from our internationalization configurations.\nNote: There‚Äôs no need to import $t since we have Nuxt‚Äôs default auto-import functionality.\nWe have the title and description served from the configurations. Next, we can add more languages to the same config. For example, here‚Äôs how we can establish translations for English (en), French (fr) and Spanish (es):\nFor a production website with a lot of content that needs translating, it would be unwise to bundle all of the messages from different locales in the main bundle. Instead, we should use the nuxt-i18 lazy loading feature asynchronously load only the required language rather than all of them at once. Also, having messages for all locales in a single configuration file can become difficult to manage over time, and breaking them up like this makes things easier to find.\nLet‚Äôs set up the lazy loading feature in nuxt.config.ts:\nThis enables lazy loading and specifies the locales directory that will contain our locale files. The locales array configuration specifies from which files Nuxt.js should pick up messages for a specific language.\nNow, we can create individual files for each language. I‚Äôll drop all three of them right here:\nWe have set up lazy loading, added multiple languages to our application, and moved our locale messages to separate files. The user gets the right locale for the right message, and the locale messages are kept in a maintainable manner inside the code base.\nWe have different locales, but to see them in action, we will build a component that can be used to switch between the available locales.\nThis component uses the useI18n hook provided by the Vue I18n library and a computed property language to get and set the global locale from a <select> input. To make this even more like a real-world website, we‚Äôll include a small navigation bar that links up all of the website‚Äôs pages.\nThat‚Äôs it! Now, we can switch between languages on the fly.\nWe have a basic layout, but I thought we‚Äôd take this a step further and build a playground page we can use to explore more i18n features that are pretty useful when building a multilingual website.\nInterpolation and pluralization are internationalization techniques for handling dynamic content and grammatical variations across different languages. Interpolation allows developers to insert dynamic variables or expressions into translated strings. Pluralization addresses the complexities of plural forms in languages by selecting the appropriate grammatical form based on numeric values. With the help of interpolation and pluralization, we can create more natural and accurate translations.\nTo use pluralization in our Nuxt app, we‚Äôll first add a configuration to the English locale file.\nThe pluralization configuration set up for the key apple defines an output ‚Äî No Apple ‚Äî if a count of 0 is passed to it, a second output ‚Äî One Apple ‚Äî if a count of 1 is passed, and a third ‚Äî 2 Apples, 3 Apples, and so on ‚Äî if the count passed in is greater than 1.\nHere is how we can use it in your component: Whenever you click on the add button, you will see pluralization in action, changing the strings.\nTo use interpolation in our Nuxt app, first, add a configuration in the English locale file:\nThe message for sayHello expects an object passed to it having a key name when invoked ‚Äî a process known as named interpolation.\nThe message hobby expects an array to be passed to it and will pick up the 0th element, which is known as list interpolation.\nThe message email expects an object with keys account, and domain and joins both with a literal string \"@\". This is known as literal interpolation.\nBelow is an example of how to use it in the Vue components:\nTranslating dates and times involves translating date and time formats according to the conventions of different locales. We can use Vue I18n‚Äôs features for formatting date strings, handling time zones, and translating day and month names for managing date time translations. We can give the configuration for the same using the datetimeFormats key inside the vue-i18n config object.\nHere, we have set up short and long formats for all three languages. If you are coding along, you will be able to see available configurations for fields, like month and year, thanks to TypeScript and Intellisense features provided by your code editor. To display the translated dates and times in components, we should use the $d function and pass the format to it.\nWe saw how to implement localization with static content. Now, we‚Äôll attempt to understand how to fetch dynamic localized content in Nuxt.\nWe can build a blog page in our Nuxt App that fetches data from a server. The server API should accept a locale and return data in that specific locale.\nHygraph has a flexible localization API that allows you to publish and query localized content. If you haven‚Äôt created a free Hygraph account yet, you can do that on the Hygraph website to continue following along.\nGo to Project Settings ‚Üí Locales and add locales for the API.\nWe have added two locales: English and French. Now we need aq localized_post model in our schema that only two fields: title and body. Ensure to make these ‚ÄúLocalized‚Äù fields while creating them.\nAdd permissions to consume the localized content, go to Project settings ‚Üí Access ‚Üí API Access ‚Üí Public Content API, and assign Read permissions to the localized_post model.\nNow, we can go to the Hygrapgh API playground and add some localized data to the database with the help of GraphQL mutations. To limit the scope of this example, I am simply adding data from the Hygraph API playground. In an ideal world, a create/update mutation would be triggered from the front end after receiving user input.\nRun this mutation in the Hygraph API playground:\nThe mutation above creates a post with the en locale and includes a fr version of the same post. Feel free to add more data to your model if you want to see things work from a broader set of data.\nNow that we have Hygraph API content ready for consumption let‚Äôs take a moment to understand how it‚Äôs consumed inside the Nuxt app.\nTo do this, we‚Äôll install nuxt-graphql-client to serve as the app‚Äôs GraphQL client. This is a minimal GraphQL client for performing GraphQL operations without having to worry about complex configurations, code generation, typing, and other setup tasks.\nNext, let‚Äôs add our GraphQL queries in graphql/queries.graphql.\nThe GraphQL client will automatically scan .graphql and .gql files and generate client-side code and typings in the .nuxt/gql folder. All we need to do is stop and restart the Nuxt application. After restarting the app, the GraphQL client will allow us to use a GqlGetPosts function to trigger the query.\nNow, we will build the Blog page where by querying the Hygraph server and showing the dynamic data.\nThis code fetches only the current locale from the useI18n hook and sends it to the fetchPosts function when the Vue component is mounted. The fetchPosts function will pass the locale to the GraphQL query as a variable and obtain localized data from the Hygraph server. We also have a watcher on the locale so that whenever the global locale is changed by the user we make an API call to the server again and fetch posts in that locale.\nAnd, finally, let‚Äôs add markup for viewing our fetched data!\nAwesome! If all goes according to plan, then your app should look something like the one in the following video.\nCheck that out ‚Äî we just made the functionality for translating content for a multilingual website! Now, a user can select a locale from a list of options, and the app fetches content for the selected locale and automatically updates the displayed content.\nDid you think that translations would require more difficult steps? It‚Äôs pretty amazing that we‚Äôre able to cobble together a couple of libraries, hook them up to an API, and wire everything up to render on a page.\nOf course, there are other libraries and resources for handling internationalization in a multilingual context. The exact tooling is less the point than it is seeing what pieces are needed to handle dynamic translations and how they come together."
  },
  {
    "url": "/2024/07/integrating-image-to-text-and-text-to-speech-models-part1/",
    "title": "Integrating Image-To-Text And Text-To-Speech Models (Part¬†1)",
    "author": "Joas Pambou",
    "date": "Jul 24, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "AI",
      "Tools",
      "Techniques"
    ],
    "summary": "Joas Pambou built an app that integrates vision language models (VLMs) and text-to-speech (TTS) AI technologies to describe images audibly with speech. This audio description tool can be a big help for people with sight challenges to understand what‚Äôs in an image. But how this does it even work? Joas explains how these AI systems work and their potential uses, including how he built the app and ways to further improve it.",
    "content": "Audio descriptions involve narrating contextual visual information in images or videos, improving user experiences, especially for those who rely on audio cues.\nAt the core of audio description technology are two crucial components: the description and the audio. The description involves understanding and interpreting the visual content of an image or video, which includes details such as actions, settings, expressions, and any other relevant visual information. Meanwhile, the audio component converts these descriptions into spoken words that are clear, coherent, and natural-sounding.\nSo, here‚Äôs something we can do: build an app that generates and announces audio descriptions. The app can integrate a pre-trained vision-language model to analyze image inputs, extract relevant information, and generate accurate descriptions. These descriptions are then converted into speech using text-to-speech technology, providing a seamless and engaging audio experience.\nBy the end of this tutorial, you will gain a solid grasp of the components that are used to build audio description tools. We‚Äôll spend time discussing what VLM and TTS models are, as well as many examples of them and tooling for integrating them into your work.\nWhen we finish, you will be ready to follow along with a second tutorial in which we level up and build a chatbot assistant that you can interact with to get more insights about your images or videos.\nVLMs are a form of artificial intelligence that can understand and learn from visuals and linguistic modalities.\nThey are trained on vast amounts of data that include images, videos, and text, allowing them to learn patterns and relationships between these modalities. In simple terms, a VLM can look at an image or video and generate a corresponding text description that accurately matches the visual content.\nVLMs typically consist of three main components:\nGenerally speaking, the image model ‚Äî also known as the vision encoder ‚Äî extracts visual features from input images and maps them to the language model‚Äôs input space, creating visual tokens. The text model then processes and understands natural language by generating text embeddings. Lastly, these visual and textual representations are combined through the fusion mechanism, allowing the model to integrate visual and textual information.\nVLMs bring a new level of intelligence to applications by bridging visual and linguistic understanding. Here are some of the applications where VLMs shine:\nThis is merely an overview of what VLMs are and the pieces that come together to generate audio descriptions. To get a clearer idea of how VLMs work, let‚Äôs look at a few real-world examples that leverage VLM processes.\nBased on the use cases we covered alone, you can probably imagine that VLMs come in many forms, each with its unique strengths and applications. In this section, we will look at a few examples of VLMs that can be used for a variety of different purposes.\nIDEFICS is an open-access model inspired by Deepmind‚Äôs Flamingo, designed to understand and generate text from images and text inputs. It‚Äôs similar to OpenAI‚Äôs GPT-4 model in its multimodal capabilities but is built entirely from publicly available data and models.\nIDEFICS is trained on public data and models ‚Äî like LLama V1 and Open Clip ‚Äî and comes in two versions: the base and instructed versions, each available in 9 billion and 80 billion parameter sizes.\nThe model combines two pre-trained unimodal models (for vision and language) with newly added Transformer blocks that allow it to bridge the gap between understanding images and text. It‚Äôs trained on a mix of image-text pairs and multimodal web documents, enabling it to handle a wide range of visual and linguistic tasks. As a result, IDEFICS can answer questions about images, provide detailed descriptions of visual content, generate stories based on a series of images, and function as a pure language model when no visual input is provided.\nPaliGemma is an advanced VLM that draws inspiration from PaLI-3 and leverages open-source components like the SigLIP vision model and the Gemma language model.\nDesigned to process both images and textual input, PaliGemma excels at generating descriptive text in multiple languages. Its capabilities extend to a variety of tasks, including image captioning, answering questions from visuals, reading text, detecting subjects in images, and segmenting objects displayed in images.\nThe core architecture of PaliGemma includes a Transformer decoder paired with a Vision Transformer image encoder that boasts an impressive 3 billion parameters. The text decoder is derived from Gemma-2B, while the image encoder is based on SigLIP-So400m/14.\nThrough training methods similar to PaLI-3, PaliGemma achieves exceptional performance across numerous vision-language challenges.\nPaliGemma is offered in two distinct sets:\nThe Phi-3-Vision-128K-Instruct model is a Microsoft-backed venture that combines text and vision capabilities. It‚Äôs built on a dataset of high-quality, reasoning-dense data from both text and visual sources. Part of the Phi-3 family, the model has a context length of 128K, making it suitable for a range of applications.\nYou might decide to use Phi-3-Vision-128K-Instruct in cases where your application has limited memory and computing power, thanks to its relatively lightweight that helps with latency. The model works best for generally understanding images, recognizing characters in text, and describing charts and tables.\nYi-VL is an open-source AI model developed by 01-ai that can have multi-round conversations with images by reading text from images and translating it. This model is part of the Yi LLM series and has two versions: 6B and 34B.\nWhat distinguishes Yi-VL from other models is its ability to carry a conversation, whereas other models are typically limited to a single text input. Plus, it‚Äôs bilingual making it more versatile in a variety of language contexts.\nThere are many, many VLMs and we only looked at a few of the most notable offerings. As you commence work on an application with image-to-text capabilities, you may find yourself wondering where to look for VLM options and how to compare them.\nThere are two resources in the Hugging Face community you might consider using to help you find and compare VLMs. I use these regularly and find them incredibly useful in my work.\nVision Arena is a leaderboard that ranks VLMs based on anonymous user voting and reviews. But what makes it great is the fact that you can compare any two models side-by-side for yourself to find the best fit for your application.\nAnd when you compare two models, you can contribute your own anonymous votes and reviews for others to lean on as well.\nOpenVLM is another leaderboard hosted on Hugging Face for getting technical specs on different models. What I like about this resource is the wealth of metrics for evaluating VLMs, including the speed and accuracy of a given VLM.\nFurther, OpenVLM lets you filter models by size, type of license, and other ranking criteria. I find it particularly useful for finding VLMs I might have overlooked or new ones I haven‚Äôt seen yet.\nEarlier, I mentioned that the app we are about to build will use vision-language models to generate written descriptions of images, which are then read aloud. The technology that handles converting text to audio speech is known as text-to-speech synthesis or simply text-to-speech (TTS).\nTTS converts written text into synthesized speech that sounds natural. The goal is to take published content, like a blog post, and read it out loud in a realistic-sounding human voice.\nSo, how does TTS work? First, it breaks down text into the smallest units of sound, called phonemes, and this process allows the system to figure out proper word pronunciations. Next, AI enters the mix, including deep learning algorithms trained on hours of human speech data. This is how we get the app to mimic human speech patterns, tones, and rhythms ‚Äî all the things that make for ‚Äúnatural‚Äù speech. The AI component is key as it elevates a voice from robotic to something with personality. Finally, the system combines the phoneme information with the AI-powered digital voice to render the fully expressive speech output.\nThe result is automatically generated speech that sounds fairly smooth and natural. Modern TTS systems are extremely advanced in that they can replicate different tones and voice inflections, work across languages, and understand context. This naturalness makes TTS ideal for humanizing interactions with technology, like having your device read text messages out loud to you, just like Apple‚Äôs Siri or Microsoft‚Äôs Cortana.\nBased on the use cases we covered alone, you can probably imagine that VLMs come in many forms, each with its unique strengths and applications. In this section, we will look at a few examples of VLMs that can be used for a variety of different purposes.\nJust as we took a moment to review existing vision language models, let‚Äôs pause to consider some of the more popular TTS resources that are available.\nStraight from Bark‚Äôs model card in Hugging Face:\nThe non-verbal communication cues are particularly interesting and a distinguishing feature of Bark. Check out the various things Bark can do to communicate emotion, pulled directly from the model‚Äôs GitHub repo:\nThis could be cool or creepy, depending on how it‚Äôs used, but reflects the sophistication we‚Äôre working with. In addition to laughing and gasping, Bark is different in that it doesn‚Äôt work with phonemes like a typical TTS model:\n\nCoqui/XTTS-v2 can clone voices in different languages. All it needs for training is a short six-second clip of audio. This means the model can be used to translate audio snippets from one language into another while maintaining the same voice.\nAt the time of writing, Coqui currently supports 16 languages, including English, Spanish, French, German, Italian, Portuguese, Polish, Turkish, Russian, Dutch, Czech, Arabic, Chinese, Japanese, Hungarian, and Korean.\n\nParler-TTS excels at generating high-quality, natural-sounding speech in the style of a given speaker. In other words, it replicates a person‚Äôs voice. This is where many folks might draw an ethical line because techniques like this can be used to essentially imitate a real person, even without their consent, in a process known as ‚Äúdeepfake‚Äù and the consequences can range from benign impersonations to full-on phishing attacks.\nBut that‚Äôs not really the aim of Parler-TTS. Rather, it‚Äôs good in contexts that require personalized and natural-sounding speech generation, such as voice assistants and possibly even accessibility tooling to aid visual impairments by announcing content.\n\nDo you know how I shared the OpenVLM Leaderboard for finding and comparing vision language models? Well, there‚Äôs an equivalent leadership for TTS models as well over at the Hugging Face community called TTS Arena.\nTTS models are ranked by the ‚Äúnaturalness‚Äù of their voices, with the most natural-sounding models ranked first. Developers like you and me vote and provide feedback that influences the rankings.\nWhat we just looked at are TTS models that are baked into whatever app we‚Äôre making. However, some models are consumable via API, so it‚Äôs possible to get the benefits of a TTS model without the added bloat if a particular model is made available by an API provider.\nWhether you decide to bundle TTS models in your app or integrate them via APIs is totally up to you. There is no right answer as far as saying one method is better than another ‚Äî it‚Äôs more about the app‚Äôs requirements and whether the dependability of a baked-in model is worth the memory hit or vice-versa.\nAll that being said, I want to call out a handful of TTS API providers for you to keep in your back pocket.\nElevenLabs offers a TTS API that uses neural networks to make voices sound natural. Voices can be customized for different languages and accents, leading to realistic, engaging voices.\nTry the model out for yourself on the ElevenLabs site. You can enter a block of text and choose from a wide variety of voices that read the submitted text aloud.\nColossyan‚Äôs text-to-speech API converts text into natural-sounding voice recordings in over 70 languages and accents. From there, the service allows you to match the audio to an avatar to produce something like a complete virtual presentation based on your voice ‚Äî or someone else‚Äôs.\nOnce again, this is encroaching on deepfake territory, but it‚Äôs really interesting to think of Colossyan‚Äôs service as a virtual casting call for actors to perform off a script.\nMurf.ai is yet another TTS API designed to generate voiceovers based on real human voices. The service provides a slew of premade voices you can use to generate audio for anything from explainer videos and audiobooks to course lectures and entire podcast episodes.\nAmazon has its own TTS API called Polly. You can customize the voices using lexicons and Speech Synthesis Markup (SSML) tags for establishing speaking styles with affordances for adjusting things like pitch, speed, and volume.\nThe PlayHT TTS API generates speech in 142 languages. Type what you want it to say, pick a voice, and download the output as an MP3 or WAV file.\nSo far, we have discussed the two primary components for generating audio from text: vision-language models and text-to-speech models. We‚Äôve covered what they are, where they fit into the process of generating real-sounding speech, and various examples of each model.\nNow, it‚Äôs time to apply those concepts to the app we are building in this tutorial (and will improve in a second tutorial). We will use a VLM so the app can glean meaning and context from images, a TTS model to generate speech that mimics a human voice, and then integrate our work into a user interface for submitting images that will lead to generated speech output.\nI have decided to base our work on a VLM by Salesforce called BLIP, a TTS model from Kakao Enterprise called VITS, and Gradio as a framework for the design interface. I‚Äôve covered Gradio extensively in other articles, but the gist is that it is a Python library for building web interfaces ‚Äî only it offers built-in tools for working with machine learning models that make Gradio ideal for a tutorial like this.\nYou can use completely different models if you like. The whole point is less about the intricacies of a particular model than it is to demonstrate how the pieces generally come together.\nOh, and one more detail worth noting: I am working with the code for all of this in Google Collab. I‚Äôm using it because it‚Äôs hosted and ideal for demonstrations like this. But you can certainly work in a more traditional IDE, like VS Code.\nFirst, we need to install the necessary libraries:\nWe can upgrade the transformers library to the latest version if we need to:\nNot sure if you need to upgrade? Here‚Äôs how to check the current version:\nOK, now we are ready to import the libraries:\nThese libraries will help us process images, use models on the Hugging Face hub, handle audio files, and build the UI.\nSince we will pull our models directly from Hugging Face‚Äôs model hub, we can tap into them using pipelines. This way, we‚Äôre working with an API for tasks that involve natural language processing and computer vision without carrying the load in the app itself.\nWe set up our pipeline like this:\nThis establishes a pipeline for us to access BLIP for converting images into textual descriptions. Again, you could establish a pipeline for any other model in the Hugging Face hub.\nWe‚Äôll need a pipeline connected to our TTS model as well:\nNow, we have a pipeline where we can pass our image text to be converted into natural-sounding speech.\nWhat we need now is a function that handles the audio conversion. Your code will differ depending on the TTS model in use, but here is how I approached the conversion based on the VITS model:\nThat‚Äôs great, but we need to make sure there‚Äôs a bridge that connects the text that the app generates from an image to the speech conversion. We can write a function that uses BLIP to generate the text and then calls the generate_audio() function we just defined:\nOur app would be pretty useless if there was no way to interact with it. This is where Gradio comes in. We will use it to create a form that accepts an image file as an input and then outputs the generated text for display as well as the corresponding file containing the speech.\nThe interface is quite plain and simple, but that‚Äôs OK since our work is purely for demonstration purposes. You can always add to this for your own needs. The important thing is that you now have a working application you can interact with.\nAt this point, you could run the app and try it in Google Collab. You also have the option to deploy your app, though you‚Äôll need hosting for it. Hugging Face also has a feature called Spaces that you can use to deploy your work and run it without Google Collab. There‚Äôs even a guide you can use to set up your own Space.\nHere‚Äôs the final app that you can try by uploading your own photo:\n\nWe covered a lot of ground in this tutorial! In addition to learning about VLMs and TTS models at a high level, we looked at different examples of them and then covered how to find and compare models.\nBut the rubber really met the road when we started work on our app. Together, we made a useful tool that generates text from an image file and then sends that text to a TTS model to convert it into speech that is announced out loud and downloadable as either an MP3 or WAV file.\nBut we‚Äôre not done just yet! What if we could glean even more detailed information from images and our app not only describes the images but can also carry on a conversation about them?\nSounds exciting, right? This is exactly what we‚Äôll do in the second part of this tutorial."
  },
  {
    "url": "/2024/07/designing-sustainable-e-commerce-experiences/",
    "title": "When Friction Is A Good Thing: Designing Sustainable E-Commerce Experiences",
    "author": "Anna R√°tkai",
    "date": "Jul 10, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "E-Commerce",
      "Product Strategy",
      "Business"
    ],
    "summary": "Today, UX design contributes to the problem of encouraging and facilitating excessive consumption through persuasive e-commerce practices and designing for companies with linear and exploitative business models. Anna R√°tkai explores practical steps we can take to reduce material consumption and the massive environmental impact that comes along with it by designing mindful shopping experiences.",
    "content": "As lavish influencer lifestyles, wealth flaunting, and hauls dominate social media feeds, we shouldn‚Äôt be surprised that excessive consumption has become the default way of living. We see closets filled to the brim with cheap, throw-away items and having the latest gadget arsenal as signifiers of an aspirational life.\nConsumerism, however, is more than a cultural trend; it‚Äôs the backbone of our economic system. Companies eagerly drive excessive consumption as an increase in sales is directly connected to an increase in profit.\nWhile we learned to accept this level of material consumption as normal, we need to be reminded of the massive environmental impact that comes along with it. As Yvon Chouinard, founder of Patagonia, writes in a New York Times article:\nIn the paper, Scientists‚Äô Warning on Affluence, a group of researchers concluded that reducing material consumption today is essential to avoid the worst of the looming climate change in the coming years. This need for lowering consumption is also reflected in the UN‚Äôs Sustainability goals, specifically Goal 17, ‚ÄúEnsuring sustainable consumption and production patterns‚Äù.\nFor a long time, design has been a tool for consumer engineering by for example, designing products with artificially limited useful life (planned obsolescence) to ensure continuous consumption. And if we want to understand specifically UX design‚Äôs role in influencing how much and what people buy, we have to take a deeper look at pushy online shopping experiences.\nToday, most online shopping experiences are designed with persuasion, gamification, nudging and even deception to get unsuspecting users to add more things to their basket.\nThere are ‚ÄúHurry, only one item left in stock‚Äù type messages and countdown clocks that exploit well-known cognitive biases to nudge users to make impulse purchase decisions. As Michael Keenan explains,\nTo make buying things quick and effortless, we remove friction from the checkout process, for example, with the one-click-buy button. As practitioners of user-centered design, we might implement the button and say: thanks to this frictionless and easy checkout process, we improved the customer experience. Or did we just do a huge disservice to our users?\nGliding through the checkout process in seconds leaves no time for the user to ask, ‚ÄúDo I actually want this?‚Äù or ‚ÄúDo I have the money for this?‚Äù. Indeed, putting users on autopilot to make thoughtless decisions is the goal.\nAs a business.com article says: ‚ÄúClick to buy helps customers complete shopping within seconds and reduces the amount of time they have to reconsider their purchase.‚Äù\nAmanda Mull writes from a user perspective about how it has become ‚Äútoo easy to buy stuff you don‚Äôt want‚Äù:\nThis quote also highlights that this thoughtless consumption is not only harmful to the environment but also to the very same user we say we center our design process around. The rising popularity of buy-now-pay-later services, credit card debt, and personal finance gurus to help ‚ÄúOvercoming Overspending‚Äù are indicators that people are spending more than they can afford, a huge source of stress for many.\nThe one-click-buy button is not about improving user experience but building an environment where users are ‚Äúmore likely to buy more and buy often.‚Äù If we care to put this bluntly, frictionless and persuasive e-commerce design is not user-centered but business-centered design.\nWhile it is not unusual for design to be a tool to achieve business goals, we, designers, should be clear about who we are serving and at what cost with the power of design. To reckon with our impact, first, we have to understand the source of power we yield ‚Äî the power asymmetry between the designer and the user.\nImagine a scale: on one end sits the designer and the user on the other. Now, let‚Äôs take an inventory of the sources of power each party has in their hands in an online shopping situation and see how the scale balances.\nDesigners are equipped with knowledge about psychology, biases, nudging, and persuasion techniques. If we don‚Äôt have the time to learn all that, we can reach for an out-of-the-box solution that uses those exact psychological and behavioral insights. For example, Nudgify, a Woocommerce integration, promises to help ‚Äúyou get more sales and reduce shopping cart abandonment by creating Urgency and removing Friction.‚Äù\nErika Hall puts it this way: ‚ÄúWhen you are designing, you are making choices on behalf of other people.‚Äù We even have a word for this: choice architecture. Choice architecture refers to the deliberate crafting of decision-making environments. By subtly shaping how options are presented, choice architecture influences individual decision-making, often without their explicit awareness.\nOn top of this, we also collect funnel metrics, behavioral data, and A/B test things to make sure our designs work as intended. In other words, we control the environment where the user is going to make decisions, and we are knowledgeable about how to tweak it in a way to encourage the decisions we want the user to make. Or, as Vitaly Friedman says in one of his articles:\nOn the other end of the scale, we have the user who is usually unaware of our persuasion efforts, oblivious about their own biases, let alone understanding when and how those are triggered.\nLuckily, regulation around Deceptive Design on e-commerce is increasing. For example, companies are not allowed to use fake countdown timers. However, these regulations are not universal, and enforcement is lax, so often users are still not protected by law against pushy shopping experiences.\nAfter this overview, let‚Äôs see how the scale balances:\nWhen we understand this power asymmetry between designer and user, we need to ask ourselves:\nIf we look at e-commerce design today, more often than not, the unfortunate answer is mindless and excessive consumption.\nThis needs to change. We need to use the power of design to encourage sustainable user behavior and thus move us toward a sustainable future.\nThe discussion about sustainable e-commerce usually revolves around recyclable packaging, green delivery, and making the site energy-efficient with sustainable UX. All these actions and angles are important and should be part of our design process, but can we build a truly sustainable e-commerce if we are still encouraging unsustainable user behavior by design?\nTo achieve truly sustainable e-commerce, designers must shift from encouraging impulse purchases to supporting thoughtful decisions. Instead of using persuasion, gamification, and deception to boost sales, we should use our design skills to provide users with the time, space, and information they need to make mindful purchase decisions. I call this approach Kind Commerce.\nWhile the intent of designing Kind Commerce is noble, we have a bitter reality to deal with: we live and work in an economic system based on perpetual growth. We are often measured on achieving KPIs like ‚Äúincreased conversion‚Äù or ‚Äúreduced cart abandonment rate‚Äù. We are expected to use UX to achieve aggressive sales goals, and often, we are not in a position to change that.\nIt is a frustrating situation to be in because we can argue that the system needs to change, so it is possible for UXers to move away from persuasive e-commerce design. However, system change won‚Äôt happen unless we push for it. A catch-22 situation. So, what are the things we could do today?\nHelping users find the right products and make decisions they won‚Äôt regret can help the company save all the resources they would need to spend on dealing with complaints and returns. On top of this, the company can save millions of dollars by avoiding lawsuits for unfair commercial practices.\nI know, I know, it sounds like an insane proposition in a profession obsessed with eliminating friction, but hear me out. Instead of ‚Äúhelping‚Äù users glide through the checkout process with one-click buy buttons, adding a step to review their order and give them a pause could help reduce unnecessary purchases. A positive reframing for this technique could be helpful to express our true intentions.\nInstead of saying ‚Äúadding friction,‚Äù we could say ‚Äúadding a protective step‚Äù. Another example of ‚Äúadding a protective step‚Äù could be getting rid of the ‚ÄúQuick Add‚Äù buttons and making users go to the product page to take a look at what they are going to buy. For example, Organic Basics doesn‚Äôt have a ‚ÄúQuick Add‚Äù button; users can only add things to their cart from the product page.\nOnce we make sure users will visit product pages, we can help them make more informed decisions. We can be transparent about the social and environmental impact of an item or provide guidelines on how to care for the product to last a long time.\nFor example, Asket has a section called ‚ÄúLifecycle‚Äù where they highlight how to care for, repair and recycle their products. There is also a ‚ÄúFull Transparency‚Äù section to inform about the cost and impact of the garment.\nAggressive landing pages where everything is moving, blinking, modals popping up, 10 different discounts are presented are overwhelming, confusing and distracting, a fertile environment for impulse decisions.\nRespect your user‚Äôs attention by designing pages that don‚Äôt raise their blood pressure to 180 the second they open them. No modals automatically popping up, no flashing carousels, and no discount dumping. Aim for static banners and display offers in a clear and transparent way. For example, H&M shows only one banner highlighting a discount on their landing page, and that‚Äôs it. If a fast fashion brand like H&M can design calm pages, there is no excuse why others couldn‚Äôt.\nFake urgency and social proof can not only get you fined for millions of dollars but also can turn users away. So simply do not add urgency messages and countdown clocks where there is no real deadline behind an offer. Don‚Äôt use fake social proof messages. Don‚Äôt say something has a limited supply when it doesn‚Äôt.\nI would even take this a step further and recommend using persuasion sparingly, even if they are honest. Instead of overloading the product page with every possible persuasion method (urgency, social proof, incentive, assuming they are all honest), choose one yet impactful persuasion point.\nTo make it clear, I‚Äôm not advocating for designing bad or cumbersome user experiences to obstruct customers from buying things. Of course, I want a delightful and easy way to buy things we need.\nI‚Äôm also well aware that design is never neutral. We need to present options and arrange user flows, and whichever way we choose to do that will influence user decisions and actions.\nWhat I‚Äôm advocating for is at least putting the user back in the center of our design process. We read earlier that users think it is ‚Äútoo easy to buy things you don‚Äôt need‚Äù and feel that the current state of e-commerce design is contributing to their excessive spending. Understanding this and calling ourselves user-centered, we ought to change our approach significantly.\nOn top of this, I‚Äôm advocating for expanding our perspective to consider the wider environmental and social impact of our designs and align our work with the move toward a sustainable future.\nE-commerce design is a practical example of how design is a part of encouraging excessive, unnecessary consumption today. In this article, we looked at what we can do on this practical level to help our users shop more mindfully. However, transforming online shopping experiences is only a part of a bigger mission: moving away from a culture where excessive consumption is the aspiration for customers and the ultimate goal of companies.\nAs Cliff Kuang says in his article,\nOr, as Manuel Lima puts in his book, The New Designer,\nSo buckle up, designers, we have work to do!\nToday, design is part of the problem of encouraging and facilitating excessive consumption through persuasive e-commerce design and through designing for companies with linear and exploitative business models. For a liveable future, we need to change this. On a tactical level, we need to start advocating and designing mindful shopping experiences, and on a strategic level, we need to use our knowledge and skills to elevate sustainable businesses.\nI‚Äôm not saying that it is going to be an easy or quick transition, but the best time to start is now. In a dire state of need for sustainable transformation, designers with power and agency can‚Äôt stay silent or continue proliferating the problem."
  },
  {
    "url": "/2024/07/customer-journey-maps-figma-miro-templates/",
    "title": "Useful Customer Journey Maps (+ Figma & Miro Templates)",
    "author": "Vitaly Friedman",
    "date": "Jul 8, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "User Experience",
      "UX",
      "Design"
    ],
    "summary": "Visualize the user experience with user journey maps. Here are some helpful templates, real-world applications, and insights on the importance of mapping both successful and unsuccessful touchpoints. Part of Smart Interface Design Patterns by yours truly.",
    "content": "User journey maps are a remarkably effective way to visualize the user‚Äôs experience for the entire team. Instead of pointing to documents scattered across remote fringes of Sharepoint, we bring key insights together ‚Äî in one single place.\nLet‚Äôs explore a couple of helpful customer journey templates to get started and how companies use them in practice.\nThis article is part of our ongoing series on UX. You might want to take a look at Smart Interface Design Patterns¬†üç£ and the upcoming live UX training as well. Use code BIRDIE to save 15% off.\nAirBnB Customer Journey Blueprint (also check Google Drive example) is a wonderful practical example of how to visualize the entire customer experience for two personas, across eight touch points, with user policies, UI screens and all interactions with the customer service ‚Äî all on one single page.\nNow, unlike AirBnB, your product might not need a mapping against user policies. However, it might need other lanes that would be more relevant for your team. For example, include relevant findings and recommendations from UX research. List key actions needed for the next stage. Include relevant UX metrics and unsuccessful touchpoints.\nWhatever works for you, works for you ‚Äî just make sure to avoid assumptions and refer to facts and insights from research.\nSpotify Customer Journey Blueprint (high resolution) breaks down customer experiences by distinct user profiles, and for each includes mobile and desktop views, pain points, thoughts, and actions. Also, notice branches for customers who skip authentication or admin tasks.\nTo get started with user journey maps, we first choose a lens: Are we reflecting the current state or projecting a future state? Then, we choose a customer who experiences the journey ‚Äî and we capture the situation/goals that they are focusing on.\nNext, we list high-level actions users are going through. We start by defining the first and last stages and fill in between. Don‚Äôt get too granular: list key actions needed for the next stage. Add the user‚Äôs thoughts, feelings, sentiments, and emotional curves.\nEventually, add user‚Äôs key touchpoints with people, services, tools. Map user journey across mobile and desktop screens. Transfer insights from other research (e.g., customer support). Fill in stage after stage until the entire map is complete.\nThen, identify pain points and highlight them with red dots. Add relevant jobs-to-be-done, metrics, channels if needed. Attach links to quotes, photos, videos, prototypes, Figma files. Finally, explore ideas and opportunities to address pain points.\nYou don‚Äôt have to reinvent the wheel from scratch. Below, you will find a few useful starter kits to get up and running fast. However, please make sure to customize these templates for your needs, as every product will require its own specific details, dependencies, and decisions.\nKeep in mind that customer journeys are often non-linear, with unpredictable entry points and integrations way beyond the final stage of a customer journey map. It‚Äôs in those moments when things leave a perfect path that a product‚Äôs UX is actually stress-tested.\nSo consider mapping unsuccessful touchpoints as well ‚Äî failures, error messages, conflicts, incompatibilities, warnings, connectivity issues, eventual lock-outs and frequent log-outs, authentication issues, outages, and urgent support inquiries.\nAlso, make sure to question assumptions and biases early. Once they live in your UX map, they grow roots ‚Äî and it might not take long until they are seen as the foundation of everything, which can be remarkably difficult to challenge or question later. Good luck, everyone!\nIf you are interested in UX and design patterns, take a look at Smart Interface Design Patterns, our 10h-video course with 100s of practical examples from real-life projects ‚Äî with a live UX training later this year. Everything from mega-dropdowns to complex enterprise tables ‚Äî with 5 new segments added every year. Jump to a free preview. Use code BIRDIE to save 15% off.\n100 design patterns & real-life\nexamples.10h-video course + live UX training. Free preview.\n(yk)Explore more onUser ExperienceUXDesign"
  },
  {
    "url": "/2024/07/desktop-wallpaper-calendars-august-2024/",
    "title": "Sweet Nostalgia In August (2024 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "Jul 31, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "Do you need a little inspiration boost? Well, then our new batch of desktop wallpapers might be for you. Designed by the community for the community, they come in versions with and without a calendar for August 2024. Enjoy!",
    "content": "Everybody loves a beautiful wallpaper to freshen up their desktops and home screens, right? To cater for new and unique artworks on a regular basis, we started our monthly wallpapers series more than 13 years ago, and from the very beginning to today, artists and designers from across the globe have accepted the challenge and submitted their designs to it. Just like this month.\nIn this post, you‚Äôll find their wallpaper designs for August 2024. All of them come in versions with and without a calendar and can be downloaded for free. As a little bonus goodie, we also added a selection of August favorites from our wallpapers archives that are just too good to be forgotten. A big thank-you to everyone who shared their designs with us this month! Happy August!\nNostalgia‚ÄúAugust, the final breath of summer, brings with it a wistful nostalgia for a season not yet past.‚Äù ‚Äî Designed by Ami Totorean from Romania.previewwith calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nRelax In Bora-Bora‚ÄúAs we have taken a liking to diving through the coral reefs, we‚Äôll also spend August diving and took the leap to Bora-Bora. There we enjoy the sea and nature and above all, we rest to gain strength for the new course that is to come.‚Äù ‚Äî Designed by Veronica Valenzuela from Spain.previewwithout calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nSandcastle Day‚ÄúJoin us on Sandcastle Day for a fun-filled beach adventure, where creativity meets the sand ‚Äî build, play, and enjoy the sun!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBanana!Designed by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nCullionDesigned by Bhabna Basak from India.previewwith calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nPirate Aged RumDesigned by Ricardo Gimenes from Spain.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nWorld Friendship Day‚ÄúCherish the bonds of friendship, share smiles, and create beautiful memories with your friends. Let‚Äôs spread love and joy together!‚Äù ‚Äî Designed by Reethu from London.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSummer DayDesigned by Kasturi Palmal from India.previewwithout calendar: 800x600, 1280x1024, 1600x1200, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nRetro Road Trip‚ÄúAs the sun dips below the horizon, casting a warm glow upon the open road, the retro van finds a resting place for the night. A campsite bathed in moonlight or a cozy motel straight from a postcard become havens where weary travelers can rest, rejuvenate, and prepare for the adventures that await with the dawn of a new day.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSpooky Campfire StoriesDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nHappiness Happens In August‚ÄúMany people find August one of the happiest months of the year because of holidays. You can spend days sunbathing, swimming, birdwatching, listening to their joyful chirping, and indulging in sheer summer bliss. August 8th is also known as the Happiness Happens Day, so make it worthwhile.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBee Happy!‚ÄúAugust means that fall is just around the corner, so I designed this wallpaper to remind everyone to ‚Äòbee happy‚Äô even though summer is almost over. Sweeter things are ahead!‚Äù ‚Äî Designed by Emily Haines from the United States.previewwithout calendar: 640x480, 800x600, 1280x720, 1280x800, 1280x960, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nColorful Summer‚Äú‚ÄòAlways keep mint on your windowsill in August, to ensure that the buzzing flies will stay outside where they belong. Don‚Äôt think summer is over, even when roses droop and turn brown and the stars shift position in the sky. Never presume August is a safe or reliable time of the year.‚Äô (Alice Hoffman)‚Äù ‚Äî Designed by L√≠vi from Hungary.previewwithout calendar: 800x480, 1024x768, 1280x720, 1280x1024, 1400x1050, 1680x1050, 1680x1200, 1920x1200, 2560x1440, 3475x4633\nPsst, It‚Äôs Camping Time‚Ä¶‚ÄúAugust is one of my favorite months, when the nights are long and deep and crackling fire makes you think of many things at once and nothing at all at the same time. It‚Äôs about heat and cold which allow you to touch the eternity for a few moments.‚Äù ‚Äî Designed by Igor Izhik from Canada.previewwithout calendar: 1024x768, 1024x1024, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nOh La La‚Ä¶ Paris‚Äô Night‚ÄúI like the Paris‚Äô night! All is very bright!‚Äù ‚Äî Designed by Ver√≥nica Valenzuela from Spain.previewwithout calendar: 800x480, 1024x768, 1152x864, 1280x800, 1280x960, 1440x900, 1680x1200, 1920x1080, 2560x1440\nSummer NapDesigned by Dorvan Davoudi from Canada.previewwithout calendar: 800x480, 800x600, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nShrimp Party‚ÄúA nice summer shrimp party!‚Äù ‚Äî Designed by Pedro Rolo from Portugal.previewwithout calendar: 320x480, 800x600, 1280x800, 1440x900, 1600x1200, 1920x1080, 2560x1440\nCowabungaDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nChildhood MemoriesDesigned by Francesco Paratici from Australia.previewwithout calendar: 320x480, 1024x768, 1024x1024, 1280x800, 1280x1024, 1366x768, 1440x900, 1680x1050, 1920x1080, 1920x1200, 2560x1440\nLive In The Moment‚ÄúMy dog Sami inspired me for this one. He lives in the moment and enjoys every second with a big smile on his face. I wish we could learn to enjoy life like he does! Happy August everyone!‚Äù ‚Äî Designed by Westie Vibes from Portugal.previewwithout calendar: 320x480, 1024x1024, 1080x1920, 1680x1200, 1920x1080, 2560x1440\nSwimming In The Summer‚ÄúIt‚Äôs the perfect evening and the water is so warm! Can you feel it? You move your legs just a little bit and you feel the water bubbles dancing around you! It‚Äôs just you in there, floating in the clean lake and small sparkly lights shining above you! It‚Äôs a wonderful feeling, isn‚Äôt it?‚Äù ‚Äî Designed by Creative Pinky from the Netherlands.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nIt‚Äôs Vacation O‚ÄôClock!‚ÄúIt‚Äôs vacation o‚Äôclock! Or is it? While we bend our backs in front of a screen, it‚Äôs hard not to think about sandy beaches, flipping the pages of a corny book under the umbrella while waves splash continuously. Summer days! So hard to bear them in the city, so pleasant when you‚Äôre living the dolce far niente.‚Äù ‚Äî Designed by ActiveCollab from the United States.previewwithout calendar: 1080x1920, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nLaunch‚ÄúThe warm, clear summer nights make me notice the stars more ‚Äî that‚Äôs what inspired this space-themed design!‚Äù ‚Äî Designed by James Mitchell from the United Kingdom.previewwithout calendar: 1280x720, 1280x800, 1366x768, 1440x900, 1680x1050, 1920x1080, 1920x1200, 2560x1440, 2880x1800\nAhoyDesigned by Webshift 2.0 from South Africa.previewwithout calendar: 1366x768, 1440x900, 1680x1050, 1920x1080, 1920x1200, 2560x1440\nRain, Rain Go Away!‚ÄúRemember the nursery rhyme where the little boy pleads the rain to go away? It is one of the most pleasant and beautiful seasons when the whole universe buckles up to dance to the rhythm of the drizzles that splash across the earth. And, it is August, the time of the year when monsoons add a lot of color and beauty to nature. We welcome everyone to enjoy the awesomeness of monsoons.‚Äù ‚Äî Designed by Acodez from India.previewwithout calendar: 320x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x960, 1280x1024, 1366x768, 1440x900, 1440x1050, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nOlympic Summer‚ÄúThe Summer Olympic Games promise two weeks of superhuman struggle for eternal glory. Support your favorites and enjoy hot August.‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nHandwritten August‚ÄúI love typography handwritten style.‚Äù ‚Äî Designed by Chalermkiat Oncharoen from Thailand.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nHello Again‚ÄúIn Melbourne it is the last month of quite a cool winter so we are looking forward to some warmer days to come.‚Äù ‚Äî Designed by Tazi from Australia.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x960, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nEl Pollo Pepe‚ÄúSummer is beach and swimming pool, but it means countryside, too. We enjoy those summer afternoons with our friend ‚ÄòEl pollo Pepe‚Äô. Happy summer!‚Äù ‚Äî Designed by Veronica Valenzuela from Spain.previewwithout calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nCoffee Break TimeDesigned by Ricardo Gimenes from Spain.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSubtle August Chamomiles‚ÄúOur designers wanted to create something summery, but not very colorful, something more subtle. The first thing that came to mind was chamomile because there are a lot of them in Ukraine and their smell is associated with a summer field.‚Äù ‚Äî Designed by MasterBundles from Ukraine.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nWork Hard, Play Hard‚ÄúIt seems the feeling of summer breaks we had back in school never leaves us. The mere thought of alarm clocks feels wrong in the summer, especially if you‚Äôve recently come back from a trip to the seaside. So, we try to do our best during working hours and then compensate with fun activities and plenty of rest. Cheers!‚Äù ‚Äî Designed by ActiveCollab from the United States.previewwithout calendar: 1080x1920, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2024/07/how-design-effective-conversational-ai-experiences-guide/",
    "title": "How To Design Effective Conversational AI Experiences: A Comprehensive Guide",
    "author": "Yinjian Huang",
    "date": "Jul 15, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "AI",
      "User Interaction",
      "Design",
      "Guides"
    ],
    "summary": "This in-depth guide takes you through the three crucial phases of conversational search, revealing how users express their needs, explore results, and refine their queries. Learn how AI agents can overcome communication barriers, personalize the search experience, and adapt to evolving user intent. Discover practical strategies and real-world examples to guide your development of intuitive, effective, and user-centric conversational interfaces.",
    "content": "Conversational AI is revolutionizing information access, offering a personalized, intuitive search experience that delights users and empowers businesses. A well-designed conversational agent acts as a knowledgeable guide, understanding user intent and effortlessly navigating vast data, which leads to happier, more engaged users, fostering loyalty and trust. Meanwhile, businesses benefit from increased efficiency, reduced costs, and a stronger bottom line. On the other hand, a poorly designed system can lead to frustration, confusion, and, ultimately, abandonment.\nAchieving success with conversational AI requires more than just deploying a chatbot. To truly harness this technology, we must master the intricate dynamics of human-AI interaction. This involves understanding how users articulate needs, explore results, and refine queries, paving the way for a seamless and effective search experience.\nThis article will decode the three phases of conversational search, the challenges users face at each stage, and the strategies and best practices AI agents can employ to enhance the experience.\nTo analyze these complex interactions, Trippas et al. (2018) (PDF) proposed a framework that outlines three core phases in the conversational search process:\nBuilding on this framework, Azzopardi et al. (2018) (PDF) identified five key user actions within these phases: reveal, inquire, navigate, interrupt, interrogate, and the corresponding agent actions ‚Äî inquire, reveal, traverse, suggest, and explain.\nIn the following sections, I‚Äôll break down each phase of the conversational search journey, delving into the actions users take and the corresponding strategies AI agents can employ, as identified by Azzopardi et al. (2018) (PDF). I‚Äôll also share actionable tactics and real-world examples to guide the implementation of these strategies.\nIn the initial phase of query formulation, users attempt to translate their needs into prompts. This process involves conscious disclosures‚Ää‚Äî‚Ääsharing details they believe are relevant‚Ää‚Äî‚Ääand unconscious non-disclosure‚Ää‚Äî‚Ääomitting information they may not deem important or struggle to articulate.\nThis process is fraught with challenges. As Jakob Nielsen aptly pointed out,\nThis can manifest as:\nThese challenges can lead to frustration for users and less relevant results from the AI agent.\nTo bridge the articulation gap, AI agents can employ three core strategies:\nFor example,\nThis rapid-fire questioning can overwhelm the user and make them feel like they‚Äôre being interrogated. A more effective approach is to start with a few open-ended questions and gradually elicit more details based on the user‚Äôs responses.\nAs Azzopardi et al. (2018) (PDF) stated in the paper,\nFor example, after clicking one of the initial prompts, ‚ÄúCreate a personal webpage,‚Äù ChatGPT added another sentence, ‚ÄúAsk me 3 questions first on whatever you need to know,‚Äù to elicit more details from the user.\nFor example, after clicking one of the initial prompts in Gemini, ‚ÄúGenerate a stunning, playful image,‚Äù more details are added in blue in the input.\nOnce the query is formed, the focus shifts to exploration. Users embark on a multifaceted journey through search results, seeking to understand their options and make informed decisions.\nTwo primary user actions mark this phase:\nTo guide users through the vast landscape of information, AI agents can employ these strategies:\nDuring discovery, it‚Äôs vital to avoid information overload, which can overwhelm users and hinder their decision-making. For example,\nInstead, AI agents should offer the most relevant results and allow users to filter or sort them based on their needs. This might include presenting a few top recommendations based on ratings or popularity, with options to refine the search by price range, location, amenities, and so on.\nAdditionally, AI agents should understand natural language navigation. For example, if a user asks, ‚ÄúTell me more about the second hotel,‚Äù the AI should provide additional details about that specific option without requiring the user to rephrase their query. This level of understanding is crucial for flexible navigation and a seamless user experience.\nAs users interact with results, their understanding deepens, and their initial query might not fully capture their evolving needs. During query re-formulation, users refine their search based on exploration and new insights, often involving interrupting and interrogating. Query re-formulation empowers users to course-correct and refine their search.\nTo navigate the query re-formulation phase effectively, AI agents need to be responsive, transparent, and proactive. Two core strategies for AI agents:\nAI agents should balance suggestions with relevance and explain why certain options are suggested while avoiding overwhelming them with unrelated suggestions that increase conversational effort. A bad example would be the following:\nThis could frustrate the user and reduce trust in the AI.\nA better answer could be, ‚ÄúI found these highly-rated Italian restaurants. Would you like to see more options based on different price ranges?‚Äù This ensures users understand the reasons behind recommendations, enhancing their satisfaction and trust in the AI‚Äôs guidance.\nWhile the strategies discussed above can significantly improve the conversational search experience, LLMs still have inherent limitations that can hinder their intuitiveness. These include the following:\nTo create truly effective and user-centric conversational AI, it‚Äôs crucial to address these limitations and make interactions more intuitive. Here are some key strategies:\nUnderstanding and evaluating user satisfaction is fundamental to building effective conversational AI agents. However, directly measuring user satisfaction in the open-domain search context can be challenging, as Zhumin Chu et al. (2022) highlighted. Traditionally, metrics like session abandonment rates or task completion were used as proxies, but these don‚Äôt fully capture the nuances of user experience.\nTo address this, Clemencia Siro et al. (2023) offer a comprehensive approach to gathering and leveraging user feedback:\nAdditionally, consider these practical tips for incorporating user satisfaction feedback into the AI agent‚Äôs training process:\nThe evolution of conversational search is far from over. As AI technologies continue to advance, we can anticipate exciting developments:"
  },
  {
    "url": "/2024/07/build-design-systems-penpot-components/",
    "title": "Build Design Systems With Penpot Components",
    "author": "Miko≈Çaj Dobrucki",
    "date": "Jul 18, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Design Systems",
      "Design",
      "UI",
      "Workflow"
    ],
    "summary": "In today‚Äôs turbulent landscape of design, Penpot stands out with its commitment to open-source, free unlimited access, and its unique, robust features. An example could be its new components system that takes another leap forward in aligning design with code. Let‚Äôs dive into how it empowers both designers and developers to create more maintainable and scalable design systems.",
    "content": "If you‚Äôve been following along with our Penpot series, you‚Äôre already familiar with this exciting open-source design tool and how it is changing the game for designer-developer collaboration. Previously, we‚Äôve explored Penpot‚Äôs Flex Layout and Grid Layout features, which bring the power of CSS directly into the hands of designers.\nToday, we‚Äôre diving into another crucial aspect of modern web design and development: components. This feature is a part of Penpot‚Äôs major 2.0 release, which introduces a host of new capabilities to bridge the gap between design and code further. Let‚Äôs explore how Penpot‚Äôs implementation of components can supercharge your design workflow and foster even better collaboration across teams.\nComponents are reusable building blocks that form the foundation of modern user interfaces. They encapsulate a piece of UI or functionality that can be reused across your application. This concept of composability ‚Äî building complex systems from smaller, reusable parts ‚Äî is a cornerstone of modern web development.\nWhy does composability matter? There are several key benefits:\nIn the realm of design, this philosophy is best expressed in the concept of design systems. When done right, design systems help to bring your design and code together, reducing ambiguity and streamlining the processes.\nHowever, that‚Äôs not so easy to achieve when your designs are built using logic and standards that are much different from the code they‚Äôre related to. Penpot works to solve this challenge through its unique approach. Instead of building visual artifacts that only mimic real-world interfaces, UIs in Penpots are built using the same technologies and standards as real working products.\nThis gives us much better parity between the media and allows designers to build interfaces that are already expressed as code. It fosters easier collaboration as designers and developers can speak the same language when discussing their components. The final result is more maintainable, too. Changes created by designers can propagate consistently, making it easier to manage large-scale systems.\nNow, let‚Äôs take a look at how components in Penpot work in practice! As an example, I‚Äôm going to use the following fictional product page and recreate it in Penpot:\nTo create a component in Penpot, simply select the objects you want to include and select ‚ÄúCreate component‚Äù from the context menu. This transforms your selection into a reusable element.\nPenpot allows you to create variants of your components. These are alternative versions that share the same basic structure but differ in specific aspects like color, size, or state.\nYou can create variants by using slashes (/) in the components name, for example, by naming your buttons Button/primary and Button/secondary. This will allow you to easily switch between types of a Button component later.\nComponents in Penpot can be nested, allowing you to build complex UI elements from simpler parts. This mirrors how developers often structure their code. In other words, you can place components inside one another.\nMoreover, the components you use don‚Äôt have to come from the same file or even from the same organization. You can easily share libraries of components across projects just as you would import code from various dependencies into your codebase. You can also import components from external libraries, such as UI kits and icon sets. Penpot maintains a growing list of such resources for you to choose from, including everything from the large design systems like Material Design to the most popular icon libraries.\nThe new major release of Penpot comes with a redesigned Assets panel, which is where your components live. In the Assets panel, you can easily access your components and drag and drop them into designs.\nFor the better maintenance of design systems, Penpot allows you to store your colors and typography as reusable styles. Same as components, you can name your styles and organize them into hierarchical structures.\nOne of the main benefits of using composable components in front-end libraries such as React is their support of props. Component props (short for properties) allow you a great deal of flexibility in how you configure and customize your components, depending on how, where, and when they are used.\nPenpot offers similar capabilities in a design tool with variants and overrides. You can switch variants, hide elements, change styles, swap nested components within instances, or even change the whole layout of a component, providing flexibility while maintaining the link to the original component.\nAllowing you to modify Flex and Grid layouts in component instances is where Penpot really shines. However, the power of these layout features goes beyond the components themselves.\nWith Flex Layout and Grid Layout, you can build components that are much more faithful to their code and easier to modify and maintain. But having those powerful features at your fingertips means that you can also place your components in other Grid and Flex layouts. That‚Äôs a big deal as it allows you to test your components in scenarios much closer to their real environment. Directly in a design tool, you can see how your component would behave if you put it in various places on your website or app. This allows you to fine-tune how your components fit into a larger system. It can dramatically reduce friction between design and code and streamline the handoff process.\nAs Penpot‚Äôs components are just web-ready code, one of the greatest benefits of using it is how easily you can export code for your components. This feature, like all of Penpot‚Äôs capabilities, is completely free.\nUsing Penpot‚Äôs Inspect panel, you can quickly grab all the layout properties and styles as well as the full code snippets for all components.\nTo make design systems in Penpot even more maintainable, it includes annotation features to help you document your components. This is crucial for maintaining a clear design system and ensuring a smooth handoff to developers.\nPenpot‚Äôs implementation of components and its support for real CSS layouts make it a standout tool for designers who want to work closely with developers. By embracing web standards and providing powerful, flexible components, Penpot enables designers to create more developer-friendly designs without sacrificing creativity or control.\nAll of Penpot‚Äôs features are completely free for both designers and developers. As open-source software, Penpot lets you fully own your design tool experience and makes it accessible for everyone, regardless of team size and budget.\nReady to dive in? You can explore the file used in this article by downloading it and importing into your Penpot account.\nAs the design tool landscape continues to evolve, Penpot is taking charge of bringing designers and developers closer together. Whether you‚Äôre a designer looking to understand the development process or a developer seeking to streamline your workflow with designers, Penpot‚Äôs component system is worth exploring."
  },
  {
    "url": "/2024/06/website-improvement-after-launch/",
    "title": "So Your Website Or App Is Live‚Ä¶ Now What?",
    "author": "Paul Boag",
    "date": "Jun 24, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX",
      "User Experience",
      "Testing"
    ],
    "summary": "The biggest mistake you can make in UX design is to launch a website or app and then walk away. Monitoring and improving after launch will benefit users and your metrics. Nothing will bring bigger gains.",
    "content": "Whether you‚Äôve launched a redesign of your website or rolled out a new feature in your app, that is the point where people normally move on to the next project. But, that is a mistake.\nIt‚Äôs only once a site, app, or feature goes live that we get to see actual users interacting with it in a completely natural way. It‚Äôs only then that we know if it has succeeded or failed.\nNot that things are ever that black and white. Even if it does seem successful, there‚Äôs always room for improvement. This is particularly true with conversion rate optimization. Even small tweaks can lead to significant increases in revenue, leads, or other key metrics.\nWant to learn more on testing and improving your website? Join Paul Boag in his upcoming live workshop on Fast and Budget-Friendly User Research and Testing, starting July 11.\nThe key is to build in time for post-launch optimization from the very beginning. When you define your project timeline or sprint, don‚Äôt equate launch with the end. Instead, set the launch of the new site, app, or feature about two-thirds of the way through your timeline. This leaves time after launch for monitoring and iteration.\nBetter still, divide your team‚Äôs time into two work streams. One would focus on ‚Äúinnovation‚Äù ‚Äî rolling out new features or content. The second would focus on ‚Äúoptimization‚Äù and improving what is already online.\nIn short, do anything you can to ring-fence at least some time for optimizing the experience post-launch.\nOnce you‚Äôve done that, you can start identifying areas in your site or app that are underperforming and could do with improvement.\nThis is where analytics can help. Look for areas with high bounce rates or exit points. Users are dropping off at these points. Also, look for low-performing conversion points. But don‚Äôt forget to consider this as a percentage of the traffic the page or feature gets. Otherwise, your most popular pages will always seem like the biggest problem.\nTo be honest, this is more fiddly than it should be in Google Analytics 4, so if you‚Äôre not familiar with the platform you might need some help.\nNot that Google Analytics is the only tool that can help; I also highly recommend Microsoft Clarity. This free tool provides detailed user data. It includes session recordings and heatmaps. These help you find where to improve on your website or app.\nPlay particular attention to ‚Äúinsights‚Äù which will show you metrics including:\nAlong with exits and bounces, these metrics indicate that something is wrong and should be looked at in more depth.\nOnce you‚Äôve found a problem page, the next challenge is diagnosing exactly what‚Äôs going wrong.\nI tend to start by looking at heat maps of the page that you can find in Clarity or similar tools. These heatmaps will show you where people are engaged on the page and potentially indicate problems.\nIf that doesn‚Äôt help, I will watch recordings of people showing the problem behavior. Watching these session recordings can provide priceless insights. They show the specific pain points users are facing. They can guide you to potential solutions.\nIf I am still confused about the problem, I may run a survey. I‚Äôll ask users about their experience. Or, I may recruit some people and run usability testing on the page.\nSurveys are easier to run, but can be somewhat disruptive and don‚Äôt always provide the desired insights. If I do use a survey, I will normally only display it on exit-intent to minimize disruption to the user experience.\nIf I run usability testing, I favor facilitated testing in this scenario. Although more time-consuming to run, it allows me to ask questions that almost always uncover the problem on the page. Normally, you can get away with only testing with 3 to 6 people.\nOnce you‚Äôve identified the specific issue, you can then start experimenting with solutions to address it.\nThere are almost always multiple ways of addressing any given issue, so it‚Äôs important to test different approaches to find the best. How you approach this testing will depend on the complexity of your solution.\nSometimes a problem can be fixed with a simple solution involving some UI tweaks or content changes. In this case, you can simply test the variations using A/B testing to see which performs better.\nIf you haven‚Äôt done A/B testing before, it really isn‚Äôt that complicated. The only downside is that A/B testing tools are massively overpriced in my opinion. That said, Crazy Egg is more reasonable (although not as powerful) and there is a free tier with VWO.\nUsing an A/B testing tool starts by setting a goal, like adding an item to the basket. Then, you make versions of the page with your proposed improvement. These are shown to a percentage of visitors.\nMaking the changes is normally done through a simple WYSIWYG interface and it only takes a couple of minutes.\nIf your site has lots of traffic, I would encourage you to explore as many possible solutions as possible. If you have a smaller site, focus on testing just a couple of ideas. Otherwise, it will take forever to see results.\nAlso, with lower-traffic sites, keep the goal as close to the experiment as possible to maximize the amount of traffic. If there‚Äôs a big gap between goal and experiment, a lot of people will drop out during the process, and you‚Äôll have to wait longer for results.\nNot that A/B testing is always the right way to test ideas. When your solution is more complex, involving new functionality or multiple screens, A/B testing won‚Äôt work well. That‚Äôs because to A/B test that level of change, you need to effectively build the solution, negating most of the benefits A/B testing provides.\nInstead, your best option in such circumstances is to build a prototype that you can test with remote testing.\nIn the first instance, I tend to run unfacilitated testing using a tool like Maze. Unfacilitated testing is quick to set up, takes little of your time, and Maze will even provide you with analytics on success rates.\nBut, if unfacilitated testing finds problems and you doubt how to fix them, then consider facilitated testing. That‚Äôs because facilitated testing allows you to ask questions and get to the heart of any issues that might arise.\nThe only drawback of usability testing over A/B testing is recruitment. It can be hard to find the right participants. If that‚Äôs the case, consider using a service like Askable, who will carry out recruitment for you for a small fee.\nFailing that, don‚Äôt be afraid to use friends and family as in most cases getting the exact demographic is less important than you might think. As long as people have comparable physical and cognitive abilities, you shouldn‚Äôt have a problem. The only exception is if the content of your website or app is highly specialized.\nThat said, I would avoid using anybody who works for the organization. They will inevitably be institutionalized and unable to provide unbiased feedback.\nWhatever approach you use to test your solution, once you‚Äôre happy, you can push that change live for all users. But, your work is still not done.\nOnce you‚Äôve solved one issue, return to your analytics. Find the next biggest problem. Repeat the whole process. As you fix some problems, more will become apparent, and so you‚Äôll quickly find yourself with an ongoing program of improvements that can be made.\nThe more you carry out this kind of work, the more the benefits will become obvious. You will gradually see improvements in metrics like engagement, conversion, and user satisfaction. You can use these metrics to make the case to management for ongoing optimization. This is better than the trap of releasing feature after feature with no regard for their performance.\nIf you are interested in User Research and Testing, check out Paul‚Äôs workshop on Fast and Budget-Friendly User Research and Testing, kicking off July 11.\nLive workshop with real-life examples.5h live workshop + friendly Q&A.\n(cr, cm, il)Explore more onUXUser ExperienceTesting"
  },
  {
    "url": "/2024/06/how-make-strong-case-accessibility/",
    "title": "How To Make A Strong Case For Accessibility",
    "author": "Vitaly Friedman",
    "date": "Jun 26, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Accessibility",
      "User Experience",
      "Design"
    ],
    "summary": "Gaining buy-in for accessibility can be challenging due to common myths and misunderstandings. For many, accessibility remains a big mystery. Here are some practical techniques for winning stakeholder support. Part of Smart Interface Design Patterns by yours truly.",
    "content": "Getting support for accessibility efforts isn‚Äôt easy. There are many accessibility myths, wrong assumptions, and expectations that make accessibility look like a complex, expensive, and time-consuming project. Let‚Äôs fix that!\nBelow are some practical techniques that have been working well for me to convince stakeholders to support and promote accessibility in small and large companies.\nThis article is part of our ongoing series on UX. You might want to take a look at Smart Interface Design Patterns¬†üç£ and the upcoming live UX training as well. Use code BIRDIE to save 15% off.\nA common way to address accessibility is to speak to stakeholders through the lens of corporate responsibility and ethical and legal implications. Personally, I‚Äôve never been very successful with this strategy. People typically dismiss concerns that they can‚Äôt relate to, and as designers, we can‚Äôt build empathy with facts, charts, or legal concerns.\nThe problem is that people often don‚Äôt know how accessibility applies to them. There is a common assumption that accessibility is dull and boring and leads to ‚Äúunexciting‚Äù and unattractive products. Unsurprisingly, businesses often neglect it as an irrelevant edge case.\nSo, I use another strategy. I start conversations about accessibility by visualizing it. I explain the different types of accessibility needs, ranging from permanent to temporary to situational ‚Äî and I try to explain what exactly it actually means to our products. Mapping a more generic understanding of accessibility to the specifics of a product helps everyone explore accessibility from a point that they can relate to.\nAnd then I launch a small effort ‚Äî just a few usability sessions, to get a better understanding of where our customers struggle and where they might be blocked. If I can‚Äôt get access to customers, I try to proxy test via sales, customer success, or support. Nothing is more impactful than seeing real customers struggling in their real-life scenario with real products that a company is building.\nFrom there, I move forward. I explain inclusive design, accessibility, neurodiversity, EAA, WCAG, ARIA. I bring people with disabilities into testing as we need a proper representation of our customer base. I ask for small commitments first, then ask for more. I reiterate over and over and over again that accessibility doesn‚Äôt have to be expensive or tedious if done early, but it can be very expensive when retrofitted or done late.\nThroughout that entire journey, I try to anticipate objections about costs, timing, competition, slowdowns, dullness ‚Äî and keep explaining how accessibility can reduce costs, increase revenue, grow user base, minimize risks, and improve our standing in new markets. For that, I use a few templates that I always keep nearby just in case an argument or doubts arise.\n‚ùå ‚ÄúBut accessibility is an edge case. Given the state of finances right now, unfortunately, we really can‚Äôt invest in it right now.‚Äù\nüôÖüèΩ‚ôÄÔ∏è ‚ÄúI respectfully disagree. 1 in 6 people around the world experience disabilities. In fact, our competitors [X, Y, Z] have launched accessibility efforts ([references]), and we seem to be lagging behind. Plus, it doesn‚Äôt have to be expensive. But it will be very expensive once we retrofit much later.‚Äù\n‚ùå ‚ÄúWe know that accessibility is important, but at the moment, we need to focus on efforts that will directly benefit business.‚Äù\nüôÖüèº‚ôÇÔ∏è ‚ÄúI understand what you are saying, but actually, accessibility directly benefits business. Globally, the extended market is estimated at 2.3 billion people, who control an incremental $6.9 trillion in annual disposable income. Prioritizing accessibility very much aligns with your goal to increase leads, customer engagement, mitigate risk, and reduce costs.‚Äù (via Yichan Wang)\n‚ùå ‚ÄúWhy should we prioritize accessibility? Looking at our data, we don‚Äôt really have any disabled users at all. Seems like a waste of time and resources.‚Äù\nüôÖ‚ôÄÔ∏è ‚ÄúWell, if a product is inaccessible, users with disabilities can‚Äôt and won‚Äôt be using it. But if we do make our product more accessible, we open the door for prospect users for years to come. Even small improvements can have a high impact. It doesn‚Äôt have to be expensive nor time-consuming.‚Äù\n‚ùå ‚ÄúOur application is very complex and used by expert users. Would it even work at all with screen readers?‚Äù\nüôÖüèª‚ôÄÔ∏è ‚ÄúIt‚Äôs not about designing only for screen readers. Accessibility can be permanent, but it can also be temporary and situational ‚Äî e.g., when you hold a baby in your arms or if you had an accident. Actually, it‚Äôs universally useful and beneficial for everyone.‚Äù\n‚ùå ‚ÄúTo increase our market share, we need features that benefit everyone and improve our standing against competition. We can‚Äôt win the market with accessibility.‚Äù\nüôÖüèæ‚ôÇÔ∏è ‚ÄúModern products succeed not by designing more features, but by designing better features that improve customer‚Äôs efficiency, success rate, and satisfaction. And accessibility is one of these features. For example, voice control and auto-complete were developed for accessibility but are now widely used by everyone. In fact, the entire customer base benefits from accessibility features.‚Äù\n‚ùå ‚ÄúOur research clearly shows that our customers are young and healthy, and they don‚Äôt have accessibility needs. We have other priorities, and accessibility isn‚Äôt one of them.‚Äù\nüôÖ‚ôÄÔ∏è ‚ÄúI respectfully disagree. People of all ages can have accessibility needs. In fact, accessibility features show your commitment to inclusivity, reaching out to every potential customer of any age, regardless of their abilities.\nThis not only resonates with a diverse audience but also positions your brand as socially responsible and empathetic. As you know, our young user base increasingly values corporate responsibility, and this can be a significant differentiator for us, helping to build a loyal customer base for years to come.‚Äù (via Yichan Wang)\n‚ùå ‚ÄúAt the moment, we need to focus on the core features of our product. We can always add accessibility later once the product is more stable.‚Äù\nüôÖüèº ‚ÄúI understand concerns about timing and costs. However, it‚Äôs important to note that integrating accessibility from the start is far more cost-effective than retrofitting it later. If accessibility is considered after development is complete, we will face significant additional expenses for auditing accessibility, followed by potentially extensive work involving a redesign and redevelopment.\nThis process can be significantly more expensive than embedding accessibility from the beginning. Furthermore, delaying accessibility can expose your business to legal risks. With the increasing number of lawsuits for non-compliance with accessibility standards, the cost of legal repercussions could far exceed the expense of implementing accessibility now. The financially prudent move is to work on accessibility now.‚Äù\nYou can find more useful ready-to-use templates in Yichan Wang‚Äôs Designer‚Äôs Accessibility Advocacy Toolkit ‚Äî a fantastic resource to keep nearby.\nAs mentioned above, nothing is more impactful than visualizing accessibility. However, it requires building accessibility research and accessibility practices from scratch, and it might feel like an impossible task, especially in large corporations. In ‚ÄúHow We‚Äôve Built Accessibility Research at Booking.com‚Äù, Maya Alvarado presents a fantastic case study on how to build accessibility practices and inclusive design into UX research from scratch.\nMaya rightfully points out that automated accessibility testing alone isn‚Äôt reliable. Compliance means that a user can use your product, but it doesn‚Äôt mean that it‚Äôs a great user experience. With manual testing, we make sure that customers actually meet their goals and do so effectively.\nStart by gathering colleagues and stakeholders interested in accessibility. Document what research was done already and where the gaps are. And then whenever possible, include 5‚Äì12 users with disabilities in accessibility testing.\nThen, run a small accessibility initiative around key flows. Tap into critical touch points and research them. As you are making progress, extend to components, patterns, flows, and service design. And eventually, incorporate inclusive sampling into all research projects ‚Äî at least 15% of usability testers should have a disability.\nCompanies often struggle to recruit testers with disabilities. One way to find participants is to reach out to local chapters, local training centers, non-profits, and public communities of users with disabilities in your country. Ask the admin‚Äôs permission to post your research announcement, and it won‚Äôt be rejected. If you test on site, add extra $25‚Äì$50 depending on disability transportation.\nI absolutely love the idea of extending Microsoft‚Äôs Inclusive Design Toolkit to meet specific user needs of a product. It adds a different dimension to disability considerations which might be less abstract and much easier to relate for the entire organization.\nAs Maya noted, inclusive design is about building a door that can be opened by anyone and lets everyone in. Accessibility isn‚Äôt a checklist ‚Äî it‚Äôs a practice that goes beyond compliance. A practice that involves actual people with actual disabilities throughout all UX research activities.\nTo many people, accessibility is a big mystery box. They might have never seen a customer with disabilities using their product, and they don‚Äôt really understand what it involves and requires. But we can make accessibility relatable, approachable, and visible by bringing accessibility testing to our companies ‚Äî even if it‚Äôs just a handful of tests with people with disabilities.\nNo manager really wants to deliberately ignore the needs of their paying customers ‚Äî they just need to understand these needs first. Ask for small commitments, and get the ball rolling from there.\nSet up an accessibility roadmap with actions, timelines, roles and goals. Frankly, this strategy has been working for me much better than arguing about legal and moral obligations, which typically makes stakeholders defensive and reluctant to commit.\nFingers crossed! And a huge thank-you to everyone working on and improving accessibility in your day-to-day work, often without recognition and often fueled by your own enthusiasm and passion ‚Äî thank you for your incredible work in pushing accessibility forward! üëèüèºüëèüèΩüëèüèæ\nIf you are interested in UX and design patterns, take a look at Smart Interface Design Patterns, our 10h-video course with 100s of practical examples from real-life projects ‚Äî with a live UX training later this year. Everything from mega-dropdowns to complex enterprise tables ‚Äî with 5 new segments added every year. Jump to a free preview. Use code BIRDIE to save 15% off.\n100 design patterns & real-life\nexamples.10h-video course + live UX training. Free preview.\n(yk)Explore more onAccessibilityUser ExperienceDesign"
  },
  {
    "url": "/2024/06/how-improve-microcopy-ux-writing-tips-non-ux-writers/",
    "title": "How To Improve Your Microcopy: UX Writing Tips For Non-UX Writers",
    "author": "Irina Silyanova",
    "date": "Jun 28, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX",
      "Workflow",
      "Design",
      "Content"
    ],
    "summary": "Not all companies can afford to hire a full-time UX writer (or are mature enough to consider it yet). As a result, UX writing is often outsourced to team members who may not have sufficient expertise in working with text, such as UX designers and product managers, or to the content or marketing team, who may lack expertise in UX. Meanwhile, interface copy plays a crucial role in the overall user experience, helping guide users smoothly, allowing them to navigate easily through the app, discover and start using product features, and more. In this article, you‚Äôll find simple, practical tips and a checklist to help you create a clear and concise microcopy, ensuring a seamless user experience.",
    "content": "Throughout my UX writing career, I‚Äôve held many different roles: a UX writer in a team of UX writers, a solo UX writer replacing someone who left, the first and only UX writer at a company, and even a teacher at a UX writing course, where I reviewed more than 100 home assignments. And oh gosh, what I‚Äôve seen.\nCrafting microcopy is not everyone‚Äôs strong suit, and it doesn‚Äôt have to be. Still, if you‚Äôre a UX designer, product manager, analyst, or marketing content writer working in a small company, on an MVP, or on a new product, you might have to get by without a UX writer. So you have the extra workload of creating microcopy. Here are some basic rules that will help you create clear and concise copy and run a quick health check on your designs.\nWhen crafting microcopy, think of the interface as a dialog between your product and your user, where:\nIdeally, you should be able to role-play your interface copy: a product asks the user to do something ‚Äî the user does it; a product asks for information ‚Äî the user types it in or selects an item from the menu; a product informs or warns the user about something ‚Äî the user takes action.\nFor example, if your screen is devoted to an event and the CTA is for the user to register, you should opt for a button label like ‚ÄúSave my spot‚Äù rather than ‚ÄúSave your spot.‚Äù This way, when a user clicks the button, it‚Äôs as if they are pronouncing the phrase themselves, which resonates with their thoughts and intentions.\nSome topics, such as personal data, health, or money, are extremely sensitive for people. If your product involves any limitations, peculiarities, or possible negative outcomes related to these sensitive topics, you should convey this information clearly and unequivocally. You will also need to collaborate with your UX/UI Designer closely to ensure you deliver this information in a timely manner and always make it visible without requiring the user to take additional actions (e.g., don‚Äôt hide it in tooltips that are only shown by tapping).\nHere‚Äôs a case from my work experience. For quite some time, I‚Äôve been checking homework assignments for a UX writing course. In this course, all the tasks have revolved around an imaginary app for dog owners. One of the tasks students worked on was creating a flow for booking a consultation with a dog trainer. The consultation had to be paid in advance. In fact, the money was blocked on the user‚Äôs bank card and charged three hours before the consultation. That way, a user could cancel the meeting for free no later than three hours before the start time. A majority of the students added this information as a tooltip on the checkout screen; if a user didn‚Äôt tap on it, they wouldn‚Äôt be warned about the possibility of losing money.\nIn a real-life situation, this would cause immense negativity from users: they may post about it on social media, and it will show the company in a bad light. Even if you occasionally resort to dark patterns, make sure you can afford any reputational risks.\nSo, when creating microcopy on sensitive topics:\nThe button label should reflect the specific action that occurs when the user clicks or taps it.\nIt might seem valid to use a button label that reflects the user‚Äôs goal or target action, even if it actually happens a bit later. For example, if your product allows users to book accommodations for vacations or business trips, you might consider using a ‚ÄúBook now‚Äù button in the booking flow. However, if tapping it leads the user to an order screen where they need to select a room, fill out personal details, and so on, the accommodation is not booked immediately. So you might want to opt for ‚ÄúShow rooms,‚Äù ‚ÄúSelect a rate,‚Äù or another button label that better reflects what happens next.\nMoreover, labels like ‚ÄúBuy now‚Äù or ‚ÄúBook now‚Äù might seem too pushy and even off-putting (especially when it comes to pricey products involving a long decision-making process), causing users to abandon your website or app in favor of ones with buttons that create the impression they can browse peacefully for as long as they need. You might want to let your users ‚ÄúExplore,‚Äù ‚ÄúLearn more,‚Äù ‚ÄúBook a call,‚Äù or ‚ÄúStart a free trial‚Äù first.\nAs a product manager or someone with a marketing background, you might want to create catchy and fancy button labels to boost conversion rates. For instance, when working on an investment app, you might label a button for opening a brokerage account as ‚ÄúBecome an investor.‚Äù While this might appeal to users‚Äô egos, it can also come across as pretentious and cheap. Additionally, after opening an account, users may still need to do many things to actually become investors, which can be frustrating. Opt for a straightforward ‚ÄúOpen an account‚Äù button instead.\nIn this regard, it‚Äôs better not to promise users things that we can‚Äôt guarantee or that aren‚Äôt entirely up to us. For example, in a flow that includes an OTP password, it‚Äôs better to opt for the ‚ÄúSend a code‚Äù button rather than ‚ÄúGet a code‚Äù since we can‚Äôt guarantee there won‚Äôt be any network outages or other issues preventing the user from receiving an SMS or a push notification.\nFinally, avoid using generic ‚ÄúYes‚Äù or ‚ÄúNo‚Äù buttons as they do not clearly reflect what happens next. Users might misread the text above or fail to notice a negation, leading to unexpected outcomes. For example, when asking for a confirmation, such as ‚ÄúAre you sure you want to quit?‚Äù you might want to go with button labels like ‚ÄúQuit‚Äù and ‚ÄúStay‚Äù rather than just ‚ÄúYes‚Äù and ‚ÄúNo.‚Äù\nAn ideal interface is self-explanatory and needs no microcopy. However, sometimes, we need to convince users to do something for us, especially when it involves providing personal information or interacting with third-party products.\nYou can use the following formula: ‚ÄúTo [get this], do [this] + UI element to make it happen.‚Äù For example, ‚ÄúTo get your results, provide your email,‚Äù followed by an input field.\nIt‚Äôs better to provide the reasoning (‚Äúto get your results‚Äù) first and then the instructions (‚Äúprovide your email‚Äù ): this way, the guidance is more likely to stick in the user‚Äôs memory, smoothly leading to the action. If you reverse the order ‚Äî giving the instructions first and then the reasoning ‚Äî the user might forget what they need to do and will have to reread the beginning of the sentence, leading to a less smooth and slightly hectic experience.\nEvery now and then, I come across meaningless placeholders or excessive toggle copy that explains how to interact with the field or toggle. The most frequent example is the ‚ÄúSearch‚Äù placeholder for a search field. Occasionally, I see button labels like ‚ÄúPress to continue.‚Äù\nMobile and web interfaces have been around for quite a while, and users understand how to interact with buttons, toggles, and fields. Therefore, explanations such as ‚Äúclick,‚Äù ‚Äútap,‚Äù ‚Äúenter,‚Äù and so on seem excessive in most cases. Perhaps it‚Äôs only with a group of checkboxes that you might add something like ‚ÄúSelect up to 5.‚Äù\nYou might want to add something more useful. For example, instead of a generic ‚ÄúSearch‚Äù placeholder for a search field, use specific instances a user might type in. If you‚Äôre a fashion marketplace, try placeholders like ‚Äúoversized hoodies,‚Äù ‚Äúwomen‚Äôs shorts,‚Äù and so on. Keep in mind the specifics of your website or app: ensure the placeholder is neither too broad nor too specific, and if a user types something like you‚Äôve provided, their search will be successful.\nUsers have short attention spans, scan text instead of reading it thoroughly, and can‚Äôt process multiple ideas simultaneously. That‚Äôs why it‚Äôs crucial to break information down into easily digestible chunks instead of, for example, trying to squeeze all the restrictions into one tooltip.\nThe golden rule is to provide users only with the information they need at this particular stage to take a specific action or make a decision.\nYou‚Äôll need to collaborate closely with your designer to ensure the information is distributed over the screen evenly and you don‚Äôt overload one design element with a lot of text.\nTitles, written in bold and larger font sizes, grab users‚Äô attention. Sometimes, titles are the only text users actually read. Titles stick better in their memory, so they must be understandable as a standalone text.\nTitles like ‚ÄúOne more thing‚Äù or ‚ÄúAlmost there‚Äù might work well if they align with a product‚Äôs tone of voice and the flows where they appear are cohesive and can hardly be interrupted. But keep in mind that users might get distracted.\nUse this quick check: set your design aside for about 20 minutes, do something else, and then open only the screen for which you‚Äôre writing a title. Is what happens on this screen still understandable from the title? Do you easily recall what has or hasn‚Äôt happened, what you were doing, and what should be done next?\nSome products (e.g., any B2B or financial ones) involve many rules and restrictions that must be explained to the user. To make this more understandable, use real-life examples (with specific numbers, dates, and so on) rather than distilling abstract information into a hint, tooltip, or bottom sheet.\nIt‚Äôs better to provide explanations using real-life examples that users can relate to. Check with engineers if it‚Äôs possible to get specific data for each user and add variables and conditions to show every user the most relevant microcopy. For example, instead of saying, ‚ÄúYour deposit limit is $1,000 per calendar month,‚Äù you could say, ‚ÄúUntil Jan 31, you can deposit $400 more.‚Äù This relieves the user of unnecessary work, such as figuring out the start date of the calendar month in their case and calculating the remaining amount.\nAs a rule of thumb, it‚Äôs recommended to avoid double negatives, such as ‚ÄúDo not unfollow.‚Äù However, I‚Äôd go further and advise avoiding single negatives as well. The issue is that to decipher such a message, a user has to perform an excessive logical operation: first eliminating the negation, then trying to understand the gist.\nFor example, when listing requirements for a username, saying ‚ÄúDon‚Äôt use special characters, spaces, or symbols‚Äù forces a user to speculate (‚ÄúIf this is not allowed, then the opposite is allowed, which must be‚Ä¶‚Äù). It can take additional time to figure out what falls under ‚Äúspecial characters.‚Äù To simplify the task for the user, opt for something like ‚ÄúUse only numbers and letters.‚Äù\nMoreover, a user can easily overlook the ‚Äúnot‚Äù part and misread the message.\nAnother aspect worth noting is that negation often seems like a restriction or prohibition, which nobody likes. In some cases, especially in finance, all those *don‚Äôt*s might be perceived with suspicion rather than as precaution.\nWhen describing an action, use a verb, not a noun. Nouns that convey the meaning of verbs make texts harder to read and give off a legalistic vibe.\nHere are some sure signs you need to paraphrase your text for brevity and simplicity:\nEnsure you use the same term for the same object or action throughout the entire app. For example, instead of using ‚Äúaccount‚Äù and ‚Äúprofile‚Äù interchangeably, choose one and stick to it to avoid confusing your users.\nThe more complicated and/or regulated your product is, the more vital it is to choose precise wording and ensure it aligns with legal terms, the wording users see in the help center, and communication with support agents.\nAt first glance, ‚ÄúOops‚Äù may seem sweet and informal (yet with an apologetic touch) and might be expected to decrease tension. However, in the case of repetitive or serious errors, the effect will be quite the opposite.\nUse ‚ÄúOops‚Äù and similar words only if you‚Äôre sure it suits your brand‚Äôs tone of voice and you can finesse it.\nAs a rule of thumb, good error messages explain what has happened or is happening, why (if we know the reason), and what the user should do. Additionally, include any sensitive information related to the process or flow where the error appears. For example, if an error occurs during the payment process, provide users with information concerning their money.\nI‚Äôm not suggesting we remove every single ‚Äúplease‚Äù from the microcopy. However, when it comes to interfaces, our priority is to convey meaning clearly and concisely and explain to users what to do next and why. Often, if you start your microcopy with ‚Äúplease,‚Äù you won‚Äôt have enough space to convey the essence of your message. Users will appreciate clear guidelines to perform the desired action more than a polite message they struggle to follow.\nAs tech specialists, we‚Äôre often subject to the curse of knowledge, and despite our efforts to prioritize users, tech jargon can sneak into our interface copy. Especially if our product targets a wider audience, users may not be tech-savvy enough to understand terms like ‚Äúicon.‚Äù\nTo ensure your interface doesn‚Äôt overwhelm users with professional jargon, a quick and effective method is to show the interface to individuals outside your product group. If that‚Äôs not feasible, here‚Äôs how to identify jargon: it‚Äôs the terminology you use in daily meetings among yourselves or in Jira task titles (e.g., authorization, authentication, and so on), or abbreviations (e.g., OTP code, KYC process, AML rules, and so on).\nQuite often, a good empty state message is a self-destructing one, i.e. one that helps a user to get rid of this emptiness. An empty state message shouldn‚Äôt just state ‚Äúthere‚Äôs nothing here‚Äù ‚Äî that‚Äôs obvious and therefore unnecessary. Instead, it should provide users with a way out, smoothly guiding them into using the product or a specific feature. A well-crafted empty message can even boost conversions.\nOf course, there are exceptions, for example, in a reactive interface like a CRM system for a restaurant displaying the status of orders to workers. If there are no orders in progress and, therefore, no corresponding empty state message, you can‚Äôt nudge or motivate restaurant workers to create new orders themselves.\nAs mentioned earlier, users have short attention spans and often don‚Äôt want to focus on the texts they read, especially microcopy. Therefore, ensure you place all necessary information at the beginning of your text. Omit lead-ins, introductory words, and so on. Save less vital details for later in the text.\nThere‚Äôs a phenomenon called the serial position effect: people tend to remember information better if it‚Äôs at the beginning or end of a text or sentence, often overlooking the middle part. When it comes to UX/UI design, this effect is reinforced by the visual hierarchy, which includes the bigger font size of the title and the accentuated buttons. What‚Äôs more, the body text is often longer, which puts it at risk of being missed. Since users tend to scan rather than read, ensure your title and buttons make sense even without the body text.\nTrying to find the balance between providing a user with all the necessary explanations, warnings, and reasonings on one hand and keeping the UI intuitive and frictionless on the other hand is a tricky task.\nYou can facilitate the process of creating microcopy with the help of ChatGPT and AI-based Figma plugins such as Writer or Grammarly. But beware of the limitations these tools have as of now.\nFor instance, creating a prompt that includes all the necessary details and contexts can take longer than actually writing a title or a label on your own. Grammarly is a nice tool to check the text for typos and mistakes, but when it comes to microcopy, its suggestions might be a bit inaccurate or confusing: you might want to, say, omit articles for brevity or use elliptical sentences, and Grammarly will identify it as a mistake.\nYou‚Äôll still need a human eye to evaluate the microcopy &mdahs and I hope this checklist will come in handy.\nGeneral\n‚úÖ Microcopy is role-playable (titles, body text, tooltips, etc., are your ‚Äúphrases‚Äù; button labels, input fields, toggles, menu items, etc. are the user‚Äôs ‚Äúphrases‚Äù).\nInformation presentation & structure\n‚úÖ The user has the exact amount of information they need right now to perform an action ‚Äî not less, not more.‚úÖ Important information is placed at the beginning of the text.‚úÖ It‚Äôs clear to the user why they need to perform the action.‚úÖ Everything related to sensitive topics is always visible and static and doesn‚Äôt require actions from a user (e.g., not hidden in tooltips).‚úÖ You provide a user with specific information rather than generic examples.‚úÖ 1 microcopy item = 1 idea.‚úÖ 1 entity = 1 term.‚úÖ Empty state messages provide users with guidelines on what to do (when possible and appropriate).\nStyle\n‚úÖ No tech jargon.‚úÖ No excessive politeness, esp. at the expense of meaning.‚úÖ Avoid or reduce the use of ‚Äúnot,‚Äù ‚Äúun-,‚Äù and other negatives.‚úÖ Actions are expressed with verbs, not nouns.\nSyntax\n‚úÖ UI element copy doesn‚Äôt explain how to interact with this very element.‚úÖ Button label accurately reflects what happens next.‚úÖ Fewer titles like ‚Äúdone,‚Äù ‚Äúalmost there,‚Äù and ‚Äúattention.‚Äù‚úÖ ‚ÄúOopsies‚Äù in error messages are not frequent and align well with the brand‚Äôs tone of voice.‚úÖ Title and buttons are understandable without body text."
  },
  {
    "url": "/2024/06/uniting-web-native-apps-unknown-javascript-apis/",
    "title": "Uniting Web And Native Apps With 4 Unknown JavaScript APIs",
    "author": "Juan Diego Rodr√≠guez",
    "date": "Jun 20, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "JavaScript",
      "API",
      "Apps"
    ],
    "summary": "Have you heard of the Screen Orientation API? What about the Device Orientation API, Vibration API, or the Contact Picker API? Juan Diego Rodriguez is interested in these under-the-radar web features and discusses how they can be used to create more usable and robust progressive web apps if and when they gain broader support.",
    "content": "A couple of years ago, four JavaScript APIs that landed at the bottom of awareness in the State of JavaScript survey. I took an interest in those APIs because they have so much potential to be useful but don‚Äôt get the credit they deserve. Even after a quick search, I was amazed at how many new web APIs have been added to the ECMAScript specification that aren‚Äôt getting their dues and with a lack of awareness and browser support in browsers.\nThat situation can be a ‚Äúcatch-22‚Äù:\nMost of these APIs are designed to power progressive web apps (PWA) and close the gap between web and native apps. Bear in mind that creating a PWA involves more than just adding a manifest file. Sure, it‚Äôs a PWA by definition, but it functions like a bookmark on your home screen in practice. In reality, we need several APIs to achieve a fully native app experience on the web. And the four APIs I‚Äôd like to shed light on are part of that PWA puzzle that brings to the web what we once thought was only possible in native apps.\nYou can see all these APIs in action in this demo as we go along.\nThe Screen Orientation API can be used to sniff out the device‚Äôs current orientation. Once we know whether a user is browsing in a portrait or landscape orientation, we can use it to enhance the UX for mobile devices by changing the UI accordingly. We can also use it to lock the screen in a certain position, which is useful for displaying videos and other full-screen elements that benefit from a wider viewport.\nUsing the global screen object, you can access various properties the screen uses to render a page, including the screen.orientation object. It has two properties:\nOn mobile devices, if the angle is 0 degrees, the type is most often going to evaluate to \"portrait\" (vertical), but on desktop devices, it is typically \"landscape\" (horizontal). This makes the type property precise for knowing a device‚Äôs true position.\nThe screen.orientation object also has two methods:\nAnd lastly, screen.orientation counts with an \"orientationchange\" event to know when the orientation has changed.\nLet‚Äôs code a short demo using the Screen Orientation API to know the device‚Äôs orientation and lock it in its current position.\nThis can be our HTML boilerplate:\nOn the JavaScript side, we inject the screen orientation type and angle properties into our HTML.\nNow, we can see the device‚Äôs orientation and angle properties. On my laptop, they are \"landscape-primary\" and 0¬∞.\nIf we listen to the window‚Äôs orientationchange event, we can see how the values are updated each time the screen rotates.\nTo lock the screen, we need to first be in full-screen mode, so we will use another extremely useful feature: the Fullscreen API. Nobody wants a webpage to pop into full-screen mode without their consent, so we need transient activation (i.e., a user click) from a DOM element to work.\nThe Fullscreen API has two methods:\nWe want the entire page to be full-screen so we can invoke the method from the root element at the document.documentElement object:\nNext, we can lock the screen in its current orientation:\nAnd do the opposite with the unlock button:\nYes! We can indeed check page orientation via the orientation media feature in a CSS media query. However, media queries compute the current orientation by checking if the width is ‚Äúbigger than the height‚Äù for landscape or ‚Äúsmaller‚Äù for portrait. By contrast,\nYou may have noticed how PWAs like Instagram and X force the screen to be in portrait mode even when the native system orientation is unlocked. It is important to notice that this behavior isn‚Äôt achieved through the Screen Orientation API, but by setting the orientation property on the manifest.json file to the desired orientation type.\nAnother API I‚Äôd like to poke at is the Device Orientation API. It provides access to a device‚Äôs gyroscope sensors to read the device‚Äôs orientation in space; something used all the time in mobile apps, mainly games. The API makes this happen with a deviceorientation event that triggers each time the device moves. It has the following properties:\nIn this case, we will make a 3D cube with CSS that can be rotated with your device! The full instructions I used to make the initial CSS cube are credited to David DeSandro and can be found in his introduction to 3D transforms.\nYou can see raw full HTML in the demo, but let‚Äôs print it here for posterity:\nTo keep this brief, I won‚Äôt explain the CSS code here. Just keep in mind that it provides the necessary styles for the 3D cube, and it can be rotated through all axes using the CSS rotate() function.\nNow, with JavaScript, we listen to the window‚Äôs deviceorientation event and access the event orientation data:\nTo see how the data changes on a desktop device, we can open Chrome‚Äôs DevTools and access the Sensors Panel to emulate a rotating device.\nTo rotate the cube, we change its CSS transform properties according to the device orientation data:\nThis is the result:\nLet‚Äôs turn our attention to the Vibration API, which, unsurprisingly, allows access to a device‚Äôs vibrating mechanism. This comes in handy when we need to alert users with in-app notifications, like when a process is finished or a message is received. That said, we have to use it sparingly; no one wants their phone blowing up with notifications.\nThere‚Äôs just one method that the Vibration API gives us, and it‚Äôs all we need: navigator.vibrate().\nvibrate() is available globally from the navigator object and takes an argument for how long a vibration lasts in milliseconds. It can be either a number or an array of numbers representing a patron of vibrations and pauses.\nLet‚Äôs make a quick demo where the user inputs how many milliseconds they want their device to vibrate and buttons to start and stop the vibration, starting with the markup:\nWe‚Äôll add an event listener for a click and invoke the vibrate() method:\nTo stop vibrating, we override the current vibration with a zero-millisecond vibration.\nIn the past, it used to be that only native apps could connect to a device‚Äôs ‚Äúcontacts‚Äù. But now we have the fourth and final API I want to look at: the Contact Picker API.\nThe API grants web apps access to the device‚Äôs contact lists. Specifically, we get the contacts.select() async method available through the navigator object, which takes the following two arguments:\nI‚Äôm afraid that browser support is next to zilch on this one, limited to Chrome Android, Samsung Internet, and Android‚Äôs native web browser at the time I‚Äôm writing this.\nWe will make another demo to select and display the user‚Äôs contacts on the page. Again, starting with the HTML:\nThen, in JavaScript, we first construct our elements from the DOM and choose which properties we want to pick from the contacts.\nNow, we asynchronously pick the contacts when the user clicks the getContactsButton.\nUsing DOM manipulation, we can then append a list item to each contact and an icon to the contactList element.\nAppending an image is a little tricky since we will need to convert it into a URL and append it for each item in the list.\nAnd here‚Äôs the outcome:\nNote: The Contact Picker API will only work if the context is secure, i.e., the page is served over https:// or wss:// URLs.\nThere we go, four web APIs that I believe would empower us to build more useful and robust PWAs but have slipped under the radar for many of us. This is, of course, due to inconsistent browser support, so I hope this article can bring awareness to new APIs so we have a better chance to see them in future browser updates.\nAren‚Äôt they interesting? We saw how much control we have with the orientation of a device and its screen as well as the level of access we get to access a device‚Äôs hardware features, i.e. vibration, and information from other apps to use in our own UI.\nBut as I said much earlier, there‚Äôs a sort of infinite loop where a lack of awareness begets a lack of browser support. So, while the four APIs we covered are super interesting, your mileage will inevitably vary when it comes to using them in a production environment. Please tread cautiously and refer to Caniuse for the latest support information, or check for your own devices using WebAPI Check."
  },
  {
    "url": "/2024/06/t-shaped-vs-v-shaped-designers/",
    "title": "T-Shaped vs. V-Shaped Designers",
    "author": "Vitaly Friedman",
    "date": "Jun 19, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX",
      "User Experience",
      "Design",
      "Career"
    ],
    "summary": "Job openings typically cast a very restrictive frame for candidates, with long lists of expectations and requirements. But what if this narrow focus can overlook the value of ‚ÄúV‚Äù-shaped designers who excel by crossing boundaries, connecting dots, and innovating beyond rigid boxes?",
    "content": "Many job openings in UX assume very specific roles with very specific skills. Product designers should be skilled in Figma. Researchers should know how to conduct surveys. UX writers must be able to communicate brand values.\nThis article is part of our ongoing series on UX. You might want to take a look at Smart Interface Design Patterns¬†üç£ and the upcoming live UX training as well. Use code BIRDIE to save 15% off.\nSuccessful candidates must neatly fit within established roles and excel at tools and workflows that are perceived as the best practice in the industry ‚Äî from user needs to business needs and from the problem space to the solution space.\nThere is nothing wrong with that, of course. However, many companies don‚Äôt exactly know what expertise they actually need until they find the right person who actually has it. But too often, job openings don‚Äôt allow for any flexibility unless the candidate checks off the right boxes.\nIn fact, typically, UX roles have to fit into some of those rigorously defined and refined boxes:\nJob openings typically cast a very restrictive frame for candidates. It comes with a long list of expectations and requirements, mostly aimed at T-shaped designers ‚Äî experts in one area of UX, with a high-level understanding of adjacent areas and perhaps a dash of expertise in business and operations.\nBut as Brad Frost noted, people don‚Äôt always fit squarely into a specific discipline. Their value comes not from staying within the boundaries of their roles but from intentionally crossing these boundaries. They are ‚ÄúV‚Äù-shaped ‚Äî experts in one or multiple areas, with a profound understanding and immense curiosity in adjacent areas.\nIn practice, they excel at bridging the gaps and connecting the dots. They establish design KPIs and drive accessibility efforts. They streamline handoff and scale design systems. But to drive success, they need to rely on specialists, their T-shaped colleagues.\nI sincerely wish more companies would encourage their employees to shape their own boxes instead of defining confined boxes for them ‚Äî their own unique boxes of any form and shade and color and size employees desire, along with deliverables that other teams would benefit from and could build upon.\nüèîÔ∏è Hiring? ‚Üí Maybe replace a long list of mandatory requirements with an open invitation to apply, even if it‚Äôs not a 100% match ‚Äî as long as a candidate believes they can do their best work for the job at hand.\nüé¢ Seek a challenge? ‚Üí Don‚Äôt feel restricted by your current role in a company. Explore where you drive the highest impact, shape this role, and suggest it.\n‚úÖ Searching for a job? ‚Üí Don‚Äôt get discouraged if you don‚Äôt tick all the boxes in a promising job opening. Apply! Just explain in fine detail what you bring to the table.\nYou‚Äôve got this ‚Äî and good luck, everyone! ‚úäüèΩ\nIf you are interested in UX and design patterns, take a look at Smart Interface Design Patterns, our 10h-video course with 100s of practical examples from real-life projects ‚Äî with a live UX training later this year. Everything from mega-dropdowns to complex enterprise tables ‚Äî with 5 new segments added every year. Jump to a free preview.\n100 design patterns & real-life\nexamples.10h-video course + live UX training. Free preview.\n(yk, il)Explore more onUXUser ExperienceDesignCareer"
  },
  {
    "url": "/2024/06/desktop-wallpaper-calendars-july-2024/",
    "title": "Tales Of An Eternal Summer (July 2024 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "Jun 30, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "Let‚Äôs welcome the new month with some fresh desktop wallpapers! Created by artists and designers from across the globe, they come in versions with and without a calendar for July 2024. Enjoy!",
    "content": "For many of us, July is the epitome of summer. The time for spending every free minute outside to enjoy the sun and those seemingly endless summer days, be it in a nearby park, by a lake, or on a trip exploring new places. So why not bring a bit of that summer joy to your desktop, too?\nFor this month‚Äôs wallpapers post, artists and designers from across the globe once again tickled their creativity to capture the July feeling in a collection of desktop wallpapers. They all come in versions with and without a calendar for July 2024 and can be downloaded for free ‚Äî as it has been a Smashing tradition for more than 13 years already. A huge thank-you to everyone who submitted their artworks this month ‚Äî this post wouldn‚Äôt exist without you!\nAs a little bonus goodie, we also compiled a selection of July favorites from our wallpapers archives at the end of this post. So maybe you‚Äôll discover one of your almost-forgotten favorites in here, too? Have a fantastic July, no matter what your plans are!\nDiving Among Corals‚ÄúThe long-awaited vacation is coming closer. After working all year, we find ourselves with months that, although we don‚Äôt stop completely, are lived differently. We enjoy the days and nights more, and if we can, the beach will keep us company. Therefore, we‚Äôll spend this month in Australia, enjoying the coral reefs and diving without limits.‚Äù ‚Äî Designed by Veronica Valenzuela from Spain.previewwith calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440without calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nLevel Up‚ÄúJoin gamers worldwide on National Video Game Day to honor the rich history and vibrant culture of gaming. Enjoy exclusive discounts on top titles, participate in exciting online tournaments, and dive into special events featuring your favorite games. Whether you‚Äôre a casual player or a dedicated enthusiast, there‚Äôs something for everyone to celebrate on this epic day!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBigfoot And The Little Girl‚ÄúThis heartwarming moment captures an unlikely friendship of a gentle Bigfoot and an adorable little girl set against the backdrop of a magical and serene evening in nature.‚Äù ‚Äî Designed by Reethu M from London.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nGood NightDesigned by Ricardo Gimenes from Sweden.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nFloral Elegance Of July‚ÄúThe inspiration came from the lush gardens and floral landscapes that thrive in the height of summer. I wanted to bring the elegance and tranquility of these blooming flowers into a calendar that people can enjoy throughout the month of July.‚Äù ‚Äî Designed by Hyfa K from India.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nNo More HugsDesigned by Ricardo Gimenes from Sweden.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nOlympics Stadium‚ÄúWe have been waiting for it for many months: The Paris 2024 Olympics Games are coming in July! My drawing is a vision of the joyful activity of athletes in the stadium, with only colored tracks. I chose to use the colors of the Olympics rings. Let‚Äôs go to Paris or watch it on TV.‚Äù ‚Äî Designed by Philippe Brouard from France.previewwith calendar: 1366x768, 1920x1080, 1920x1200, 2560x1440, 2560x1600, 2880x1800, 3840x2160without calendar: 1366x768, 1920x1080, 1920x1200, 2560x1440, 2560x1600, 2880x1800, 3840x2160\nFull Buck Moon‚ÄúJuly is the month of the full buck moon, named after the fact that many deer regrow their antlers around this time. It is also when the United States celebrate their Independence Day with fireworks and fun. I decided to combine these aspects into a magical encounter during the fourth of July. It takes place in a field of larkspur which is a flower associated with July.‚Äù ‚Äî Designed by Quincy van Geffen from the Netherlands.previewwith calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nCelebrating World Chocolate Day‚ÄúWorld Chocolate Day, celebrated on July 7th, invites chocolate lovers worldwide to indulge in their favorite treat. Commemorating chocolate‚Äôs introduction to Europe, this day celebrates its global popularity. Enjoy dark, milk, or white chocolate, bake delicious desserts, and share the sweetness with loved ones.‚Äù ‚Äî Designed by Reethu M from London.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBirdie JulyDesigned by L√≠vi L√©n√°rt from Hungary.previewwithout calendar: 800x600, 1024x1024, 1152x864, 1280x960, 1280x1024, 1600x1200, 1920x1080, 2560x1440\nSummer Cannonball‚ÄúSummer is coming in the northern hemisphere and what better way to enjoy it than with watermelons and cannonballs.‚Äù ‚Äî Designed by Maria Keller from Mexico.\nIn SpaceDesigned by Lieke Dol from the Netherlands.previewwithout calendar: 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nA Flamboyance Of Flamingos‚ÄúJuly in South Africa is dreary and wintery so we give all the southern hemisphere dwellers a bit of color for those gray days. And for the northern hemisphere dwellers a bit of pop for their summer!‚Äù ‚Äî Designed by Wonderland Collective from South Africa.\nEternal Summer‚ÄúAnd once you let your imagination go, you find yourself surrounded by eternal summer, unexplored worlds, and all-pervading warmth, where there are no rules of physics and colors tint the sky under your feet.‚Äù ‚Äî Designed by Ana Masnikosa from Belgrade, Serbia.\nDay Turns To NightDesigned by Xenia Latii from Germany.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nTropical Lilies‚ÄúI enjoy creating tropical designs. They fuel my wanderlust and passion for the exotic, instantaneously transporting me to a tropical destination.‚Äù ‚Äî Designed by Tamsin Raslan from the United States.\nRoad Trip In July‚ÄúJuly is the middle of summer, when most of us go on road trips, so I designed a calendar inspired by my love of traveling and summer holidays.‚Äù ‚Äî Designed by Patricia Coroi from Romania.previewwithout calendar: 640x1136, 1024x768, 1280x800, 1280x1024, 1366x768, 1920x1080, 1920x1200, 2560x1440\nThe Ancient DeviceDesigned by Ricardo Gimenes from Sweden.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nTaste Like Summer‚ÄúIn times of clean eating and the world of superfoods there is one vegetable missing. An old, forgotten one. A flower actually. Rare and special. Once it had a royal reputation (I cheated a bit with the blue). The artichocke ‚Äî this is my superhero in the garden! I am a food lover ‚Äî you too? Enjoy it ‚Äî dip it!‚Äù ‚Äî Designed by Alexandra Tamgnou√© from Germany.previewwithout calendar: 320x480, 640x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1440x900, 1440x1050, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nIsland River‚ÄúMake sure you have a refreshing source of ideas, plans and hopes this July. Especially if you are to escape from urban life for a while.‚Äù ‚Äî Designed by Igor Izhik from Canada.previewwithout calendar: 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nCactus HugDesigned by Ilaria Bagnasco from Italy.previewwithout calendar: 320x480, 800x600, 1024x1024, 1280x800, 1280x1024, 1366x768, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 2560x1440, 2560x1600\nUnder The Enchanting Moonlight‚ÄúTwo friends sat under the enchanting moonlight, enjoying the serene ambiance as they savoured their cups of tea. It was a rare and precious connection that transcended the ordinary, kindled by the magic of the moonlight. Eventually, as the night began to wane, they reluctantly stood, their empty cups in hand. They carried with them the memories and the tranquility of the moonlit tea session, knowing that they would return to this special place to create new memories in the future.‚Äù ‚Äî Designed by Bhabna Basak from India.previewwithout calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nDJ Little BirdDesigned by Ricardo Gimenes from Sweden.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nHeated Mountains‚ÄúWarm summer weather inspired the color palette.‚Äù ‚Äî Designed by Marijana Pivac from Croatia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nJuly FlavorDesigned by Natalia Szendzielorz from Poland.previewwithout calendar: 540x960, 600x800, 1366x768, 1440x900, 1600x1200, 1920x1080, 1920x1200, 2560x1440, 2880x1800\nSummer HeatDesigned by Xenia Latii from Berlin, Germany.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMason Jar‚ÄúMake the days count this summer!‚Äù ‚Äî Designed by Meghan Pascarella from the United States.previewwithout calendar: 1280x800, 1366x768, 1440x900, 1680x1050, 1920x1080, 1920x1200, 2560x1440, 2880x1800\nSummer Essentials‚ÄúA few essential items for the summertime weather at the beach, park, and everywhere in-between.‚Äù ‚Äî Designed by Zach Vandehey from the United States.previewwithout calendar: 1024√ó768, 1440√ó900, 1600√ó1200, 1920√ó1200, 2560√ó1440\nCaptain Amphicar‚ÄúMy son and I are obsessed with the Amphicar right now, so why not have a little fun with it?‚Äù ‚Äî Designed by 3 Bicycles Creative from the United States.\nHotdogDesigned by Ricardo Gimenes from Sweden.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nLess Busy Work, More Fun!Designed by ActiveCollab from the United States.previewwithout calendar: 1080x1920, 1400x1050, 1440x900, 1600x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nSweet Summer‚ÄúIn summer everything inspires me.‚Äù ‚Äî Designed by Maria Karapaunova from Bulgaria.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1440x900, 1440x1050, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nFire Camp‚ÄúWhat‚Äôs better than a starry summer night with an (unexpected) friend around a fire camp with some marshmallows? Happy July!‚Äù ‚Äî Designed by Etienne Mansard from the UK.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1440x900, 1440x1050, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2048x1536, 2560x1440\nRiding In The Drizzle‚ÄúRain has come, showering the existence with new seeds of life. Everywhere life is blooming, as if they were asleep and the falling music of raindrops have awakened them. Feel the drops of rain. Feel this beautiful mystery of life. Listen to its music, melt into it.‚Äù ‚Äî Designed by DMS Software from India.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nAn Intrusion Of Cockroaches‚ÄúEver watched Joe‚Äôs Apartment when you were a kid? Well, that movie left a soft spot in my heart for the little critters. Don‚Äôt get me wrong: I won‚Äôt invite them over for dinner, but I won‚Äôt grab my flip flop and bring the wrath upon them when I see one running in the house. So there you have it‚Ä¶ three roaches‚Ä¶ bringing the smack down on that pesky human‚Ä¶ ZZZZZZZAP!!‚Äù ‚Äî Designed by Wonderland Collective from South Africa.previewwithout calendar: 320x480, 800x600, 1024x768, 1280x960, 1680x1050, 1920x1200, 2560x1440\nJuly Rocks!Designed by Joana Moreira from Portugal.previewwithout calendar: 320x480, 1024x768, 1280x1024, 1920x1080\nFrogs In The Night‚ÄúJuly is coming and the nights are warmer. Frogs look at the moon while they talk about their day.‚Äù ‚Äî Designed by Veronica Valenzuela from Spain.previewwithout calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2024/06/what-are-css-container-style-queries-good-for/",
    "title": "What Are CSS Container Style Queries Good For?",
    "author": "Juan Diego Rodr√≠guez",
    "date": "Jun 14, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS",
      "Tools",
      "Techniques"
    ],
    "summary": "What are these CSS Container Style Queries, and why should you use them? Juan Diego Rodr√≠guez delves deeply into style queries, and not at the syntax level, but at what exactly they are solving and what sort of use cases you would find yourselves reaching for them in your work if and when they gain browser support.",
    "content": "We‚Äôve relied on media queries for a long time in the responsive world of CSS but they have their share of limitations and have shifted focus more towards accessibility than responsiveness alone. This is where CSS Container Queries come in. They completely change how we approach responsiveness, shifting the paradigm away from a viewport-based mentality to one that is more considerate of a component‚Äôs context, such as its size or inline-size.\nQuerying elements by their dimensions is one of the two things that CSS Container Queries can do, and, in fact, we call these container size queries to help distinguish them from their ability to query against a component‚Äôs current styles. We call these container style queries.\nExisting container query coverage has been largely focused on container size queries, which enjoy 90% global browser support at the time of this writing. Style queries, on the other hand, are only available behind a feature flag in Chrome 111+ and Safari Technology Preview.\nThe first question that comes to mind is What are these style query things? followed immediately by How do they work?. There are some nice primers on them that others have written, and they are worth checking out.\nBut the more interesting question about CSS Container Style Queries might actually be Why we should use them? The answer, as always, is nuanced and could simply be it depends. But I want to poke at style queries a little more deeply, not at the syntax level, but what exactly they are solving and what sort of use cases we would find ourselves reaching for them in our work if and when they gain browser support.\nTalking purely about responsive design, media queries have simply fallen short in some aspects, but I think the main one is that they are context-agnostic in the sense that they only consider the viewport size when applying styles without involving the size or dimensions of an element‚Äôs parent or the content it contains.\nThis usually isn‚Äôt a problem since we only have a main element that doesn‚Äôt share space with others along the x-axis, so we can style our content depending on the viewport‚Äôs dimensions. However, if we stuff an element into a smaller parent and maintain the same viewport, the media query doesn‚Äôt kick in when the content becomes cramped. This forces us to write and manage an entire set of media queries that target super-specific content breakpoints.\nContainer queries break this limitation and allow us to query much more than the viewport‚Äôs dimensions.\nContainer size queries work similarly to media queries but allow us to apply styles depending on the container‚Äôs properties and computed values. In short, they allow us to make style changes based on an element‚Äôs computed width or height regardless of the viewport. This sort of thing was once only possible with JavaScript or the ol‚Äô jQuery, as this example shows.\nAs noted earlier, though, container queries can query an element‚Äôs styles in addition to its dimensions. In other words, container style queries can look at and track an element‚Äôs properties and apply styles to other elements when those properties meet certain conditions, such as when the element‚Äôs background-color is set to hsl(0 50% 50%).\nThat‚Äôs what we mean when talking about CSS Container Style Queries. It‚Äôs a proposed feature defined in the same CSS Containment Module Level 3 specification as CSS Container Size Queries ‚Äî and one that‚Äôs currently unsupported by any major browser ‚Äî so the difference between style and size queries can get a bit confusing as we‚Äôre technically talking about two related features under the same umbrella.\nWe‚Äôd do ourselves a favor to backtrack and first understand what a ‚Äúcontainer‚Äù is in the first place.\nAn element‚Äôs container is any ancestor with a containment context; it could be the element‚Äôs direct parent or perhaps a grandparent or great-grandparent.\nA containment context means that a certain element can be used as a container for querying. Unofficially, you can say there are two types of containment context: size containment and style containment.\nSize containment means we can query and track an element‚Äôs dimensions (i.e., aspect-ratio, block-size, height, inline-size, orientation, and width) with container size queries as long as it‚Äôs registered as a container. Tracking an element‚Äôs dimensions requires a little processing in the client. One or two elements are a breeze, but if we had to constantly track the dimensions of all elements ‚Äî including resizing, scrolling, animations, and so on ‚Äî it would be a huge performance hit. That‚Äôs why no element has size containment by default, and we have to manually register a size query with the CSS container-type property when we need it.\nOn the other hand, style containment lets us query and track the computed values of a container‚Äôs specific properties through container style queries. As it currently stands, we can only check for custom properties, e.g. --theme: dark, but soon we could check for an element‚Äôs computed background-color and display property values. Unlike size containment, we are checking for raw style properties before they are processed by the browser, alleviating performance and allowing all elements to have style containment by default.\nDid you catch that? While size containment is something we manually register on an element, style containment is the default behavior of all elements. There‚Äôs no need to register a style container because all elements are style containers by default.\nAnd how do we register a containment context? The easiest way is to use the container-type property. The container-type property will give an element a containment context and its three accepted values ‚Äî normal, size, and inline-size ‚Äî define which properties we can query from the container.\nThis example formally establishes a size containment. If we had done nothing at all, the .parent element is already a container with a style containment.\nThat last example illustrates size containment based on the element‚Äôs inline-size, which is a fancy way of saying its width. When we talk about normal document flow on the web, we‚Äôre talking about elements that flow in an inline direction and a block direction that corresponds to width and height, respectively, in a horizontal writing mode. If we were to rotate the writing mode so that it is vertical, then ‚Äúinline‚Äù would refer to the height instead and ‚Äúblock‚Äù to the width.\nConsider the following HTML:\nWe could give the .cards-container element a containment context in the inline direction, allowing us to make changes to its descendants when its width becomes too small to properly display everything in the current layout. We keep the same syntax as in a normal media query but swap @media for @container\nContainer syntax works almost the same as media queries, so we can use the and, or, and not operators to chain different queries together to match multiple conditions.\nElements in a size query look for the closest ancestor with size containment so we can apply changes to elements deeper in the DOM, like the .card element in our earlier example. If there is no size containment context, then the @container at-rule won‚Äôt have any effect.\nJust looking for the closest container is messy, so it‚Äôs good practice to name containers using the container-name property and then specifying which container we‚Äôre tracking in the container query just after the @container at-rule.\nWe can use the shorthand container property to set the container name and type in a single declaration:\nThe other container-type we can set is size, which works exactly like inline-size ‚Äî only the containment context is both the inline and block directions. That means we can also query the container‚Äôs height sizing in addition to its width sizing.\nAnd it‚Äôs worth noting here that if two separate (not chained) container rules match, the most specific selector wins, true to how the CSS Cascade works.\nSo far, we‚Äôve touched on the concept of CSS Container Queries at its most basic. We define the type of containment we want on an element (we looked specifically at size containment) and then query that container accordingly.\nThe third value that is accepted by the container-type property is normal, and it sets style containment on an element. Both inline-size and size are stable across all major browsers, but normal is newer and only has modest support at the moment.\nI consider normal a bit of an oddball because we don‚Äôt have to explicitly declare it on an element since all elements are style containers with style containment right out of the box. It‚Äôs possible you‚Äôll never write it out yourself or see it in the wild.\nIf you do write it or see it, it‚Äôs likely to undo size containment declared somewhere else. But even then, it‚Äôs possible to reset containment with the global initial or revert keywords.\nLet‚Äôs look at a simple and somewhat contrived example to get the point across. We can define a custom property in a container, say a --theme.\nFrom here, we can check if the container has that desired property and, if it does, apply styles to its descendant elements. We can‚Äôt directly style the container since it could unleash an infinite loop of changing the styles and querying the styles.\nSee that style() function? In the future, we may want to check if an element has a max-width: 400px through a style query instead of checking if the element‚Äôs computed value is bigger than 400px in a size query. That‚Äôs why we use the style() wrapper to differentiate style queries from size queries.\nBoth types of container queries look for the closest ancestor with a corresponding containment-type. In a style() query, it will always be the parent since all elements have style containment by default. In this case, the direct parent of the .cards element in our ongoing example is the .cards-container element. If we want to query non-direct parents, we will need the container-name property to differentiate between containers when making a query.\nStyle queries are completely new and bring something never seen in CSS, so they are bound to have some confusing qualities as we wrap our heads around them ‚Äî some that are completely intentional and well thought-out and some that are perhaps unintentional and may be updated in future versions of the specification.\nOne intentional perk, for example, is that a container can have both size and style containment. No one would fault you for expecting that size and style containment are mutually exclusive concerns, so setting an element to something like container-type: inline-size would make all style queries useless.\nHowever, another funny thing about container queries is that elements have style containment by default, and there isn‚Äôt really a way to remove it. Check out this next example:\nSee that? We can still query the elements by style even when we explicitly set the container-type to inline-size. This seems contradictory at first, but it does make sense, considering that style and size queries are computed independently. It‚Äôs better this way since both queries don‚Äôt necessarily conflict with each other; a style query could change the colors in an element depending on a custom property, while a container query changes an element‚Äôs flex-direction when it gets too small for its contents.\nIf active style and size queries are configured to apply conflicting styles, the most specific selector wins according to the cascade, so the elements have a black background color until the container gets below 700px and the size query (which is written with more specificity in this example than the last one) kicks in.\nIn that last example, you may have noticed another weird thing in style queries: The .card element is inside an unnamed style query, so since all elements have a style containment, it should be querying its parent, .cards. However, the .cards element doesn‚Äôt have any kind of --theme property; it‚Äôs the .cards-container element that does, but the style query is active!\nHow does this happen? Don‚Äôt unnamed style queries query only their parent element? Well, not exactly. If the parent doesn‚Äôt have the custom property, then the unnamed style query looks for ancestors higher up the chain. If we add a --theme property on the parent with another value, you will see the style query will use that element as the container, and the query no longer matches.\nI don‚Äôt know how intentional this behavior is, but it shows how messy things can get when working with unnamed containers.\nThe fact that style queries are the default container-type and size is the default query seems a little mismatched in that we have to explicitly declare a style() function to write the default type of query while there is no corresponding size() function. This isn‚Äôt a knock on the specification, but one of those things in CSS you just have to remember.\nAt first look, style queries seem like a feature that opens up endless possibilities. But after playing with them, you don‚Äôt really get a clear idea of what problem they‚Äôd solve ‚Äî at least not after the time I‚Äôve spent with them. All the use cases I‚Äôve seen or thought up aren‚Äôt immediately all that useful, and the most obvious ones solve problems with well-established solutions already in place. A new way of writing CSS based on styles reacting to other styles seems liberating (the more ways to write CSS, the merrier!), but if we‚Äôre already having trouble generally naming things, imagine how tough managing and maintaining those states and styles can be.\nI know all these are bold statements, but they aren‚Äôt unfounded, so let me unpack them.\nAs we‚Äôve discussed, we can only query custom properties with style queries at the moment, so the clearest use for them is storing bits of state that can be used to change UI styles when they change.\nLet‚Äôs say we have a web app, perhaps a game featuring a global leaderboard of top players. Each item in the leaderboard is a component based on a player that needs different styling depending on that player‚Äôs position on the leaderboard. We could style the first-place player with a gold background, the second-place player with silver, and the third-place with bronze, while the remaining players are all styled with the same background color.\nLet‚Äôs also assume that this is not a static leaderboard. Players change places as their scores change. That means we‚Äôre most likely serving the using a server-side rendering (SSR) framework to keep the leaderboard up to date with the latest data, so we could insert that data into the UI through inline styles with each position as a custom property, --position: number.\nHere‚Äôs how we might structure the markup:\nNow, we can use style queries to check the current item‚Äôs position and apply their respective shiny backgrounds to the leaderboard.\nSome browser clients don‚Äôt fully support style queries from an embedded CodePen, but it should work if you fully open the demo in another tab. In any case, here is a screenshot of how it looks just in case.\nMost container query guides and tutorials I‚Äôve seen use similar examples to demonstrate the general concept, but I can‚Äôt stop thinking no matter how cool style queries are, we can achieve the same result using classes or IDs and with less boilerplate. Instead of passing the state as an inline style, we could simply add it as a class.\nAlternatively, we could add the position number directly inside an id so we don‚Äôt have to convert the number into a string:\nBoth of these approaches leave us with cleaner HTML than the container queries approach. With style queries, we have to wrap our elements inside a container ‚Äî even if we don‚Äôt semantically need it ‚Äî because of the fact that containers (rightly) are unable to style themselves.\nWe also have less boilerplate-y code on the CSS side:\nAs an aside, I know that using IDs as styling hooks is often viewed as a no-no, but that‚Äôs only because IDs must be unique in the sense that no two instances of the same ID are on the page at the same time. In this instance, there will never be more than one first-place, second-place, or third-place player on the page, making IDs a safe and appropriate choice in this situation. But, yes, we could also use some other type of selector, say a data-* attribute.\nThere is something that could add a lot of value to style queries: a range syntax for querying styles. This is an open feature that Miriam Suzanne proposed in 2023, the idea being that it queries numerical values using range comparisons just like size queries.\nImagine if we wanted to apply a light purple background color to the rest of the top ten players in the leaderboard example. Instead of adding a query for each position from four to ten, we could add a query that checks a range of values. The syntax is obviously not in the spec at this time, but let‚Äôs say it looks something like this just to push the point across:\nIn this fictional and hypothetical example, we‚Äôre:\nThis is very cool, but if this kind of behavior is likely to be done using components in modern frameworks, like React or Vue, we could also set up a range in JavaScript and toggle on a .top-ten class when the condition is met.\nSure, it‚Äôs great to see that we can do this sort of thing directly in CSS, but it‚Äôs also something with an existing well-established solution.\nSo far, style queries don‚Äôt seem to be the most convenient solution for the leaderboard use case we looked at, but I wouldn‚Äôt deem them useless solely because we can achieve the same thing with JavaScript. I am a big advocate of reaching for JavaScript only when necessary and only in sprinkles, but style queries, the ones where we can only check for custom properties, are most likely to be useful when paired with a UI framework where we can easily reach for JavaScript within a component. I have been using Astro an awful lot lately, and in that context, I don‚Äôt see why I would choose a style query over programmatically changing a class or ID.\nHowever, a case can be made that implementing style logic inside a component is messy. Maybe we should keep the logic regarding styles in the CSS away from the rest of the logic logic, i.e., the stateful changes inside a component like conditional rendering or functions like useState and useEffect in React. The style logic would be the conditional checks we do to add or remove class names or IDs in order to change styles.\nIf we backtrack to our leaderboard example, checking a player‚Äôs position to apply different styles would be style logic. We could indeed check that a player‚Äôs leaderboard position is between four and ten using JavaScript to programmatically add a .top-ten class, but it would mean leaking our style logic into our component. In React (for familiarity, but it would be similar to other frameworks), the component may look like this:\nBesides this being ugly-looking code, adding the style logic in JSX can get messy. Meanwhile, style queries can pass the --position value to the styles and handle the logic directly in the CSS where it is being used.\nMuch cleaner, and I think this is closer to the value proposition of style queries. But at the same time, this example makes a large leap of assumption that we will get a range syntax for style queries at some point, which is not a done deal.\nThere are lots of teams working on making modern CSS better, and not all features have to be groundbreaking miraculous additions.\nIt simply doesn‚Äôt solve any specific issue or is better enough to replace other approaches, at least as far as I am aware.\nEven if, in the future, style queries will be able to check for any property, that introduces a whole new can of worms where styles are capable of reacting to other styles. This seems exciting at first, but I can‚Äôt shake the feeling it would be unnecessary and even chaotic: styles reacting to styles, reacting to styles, and so on with an unnecessary side of boilerplate. I‚Äôd argue that a more prudent approach is to write all your styles declaratively together in one place.\nMaybe it would be useful for web extensions (like Dark Reader) so they can better check styles in third-party websites? I can‚Äôt clearly see it. If you have any suggestions on how CSS Container Style Queries can be used to write better CSS that I may have overlooked, please let me know in the comments! I‚Äôd love to know how you‚Äôre thinking about them and the sorts of ways you imagine yourself using them in your work."
  },
  {
    "url": "/2024/06/useful-email-newsletters-for-designers/",
    "title": "Useful Email Newsletters For Designers",
    "author": "Cosima Mielke",
    "date": "Jun 17, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Resources",
      "Tools",
      "Newsletters",
      "Guides"
    ],
    "summary": "Whether you want to take your user research skills to the next level, get better at UX writing, or stay up-to-date on the latest design trends, a newsletter is the perfect opportunity to get the best of the best resources delivered straight to your inbox on a regular basis. In this post, we highlight some design newsletters that you might want to consider subscribing to.",
    "content": "Struggling to keep our inboxes under control and aim for that magical state of inbox zero, the notification announcing an incoming email isn‚Äôt the most appreciated sound for many of us. However, there are some emails to actually look forward to: A newsletter, curated and written with love and care, can be a nice break in your daily routine, providing new insights and sparking ideas and inspiration for your work.\nWith so many wonderful design newsletters out there, we know it can be a challenge to decide which newsletter (or newsletters) to subscribe to. That‚Äôs why we want to shine a light on some newsletter gems today to make your decision at least a bit easier ‚Äî and help you discover newsletters you might not have heard of yet. Ranging from design systems to UX writing, motion design, and user research, there sure is something in it for you.\nA huge thank you to everyone who writes, edits, and publishes these newsletters to help us all get better at our craft. You are truly smashing! üëèüèºüëèüèΩüëèüèæ\nBelow you‚Äôll find quick jumps to newsletters on specific topics you might be interested in. Scroll down to browse the complete list or skip the table of contents.\nüóì Delivered every Mondayüñã Written by Tamas SariAimed at product people, UXers, PMs, and design engineers, the HeyDesigner newsletter is packed with a carefully curated selection of the latest design and front-end articles, tools, and resources.\nüóì Delivered weeklyüñã Written by St√©phanie WalterSt√©phanie Walter‚Äôs Pixels of the Week newsletter keeps you informed about the latest UX research, design, tech (HTML, CSS, SVG) news, tools, methods, and other resources that caught St√©phanie‚Äôs interest.\nüóì Delivered dailyüñã Written by Dan NiYou‚Äôre looking for some bite-sized design inspiration? TLDR Design is a daily newsletter highlighting news, tools, tutorials, trends, and inspiration for design professionals.\nüóì Delivered every two weeksüñã Written by Ch'an ArmstrongThe DesignOps newsletter provides the DesignOps community with the best hand-picked articles all around design, code, AI, design tools, no-code tools, developer tools, and, of course, design ops.\nüóì Delivered weeklyüñã Written by Adam SilverEvery week, Adam Silver sends out a newsletter aimed at designers, content designers, and front-end developers. It includes short and sweet, evidence-based design tips, mostly about forms UX, but not always.\nüóì Delivered every Tuesdayüñã Written by the Smashing Editorial teamEvery Tuesday, we publish the Smashing Newsletter with useful tips and techniques on front-end and UX, covering everything from design systems and UX research to CSS and JavaScript. Each issue is curated, written, and edited with love and care, no third-party mailings or hidden advertising.\nüóì Delivered every Mondayüñã Written by Kenny ChenUX Design Weekly provides you with a weekly dose of hand-picked user experience design links. Every issue features articles, tools and resources, a UX portfolio, and a quote to spark ideas and get you thinking.\nüóì Delivered weeklyüñã Written by Fabricio Teixeira and Caio Braga‚ÄúDesigners are thinkers as much as they are makers.‚Äù Following this credo, the UX Collective newsletter helps designers think more critically about their work. Every issue highlights thought-provoking reads, little gems, tools, and resources.\nüóì Delivered every few weeksüñã Written by Peter RamseyThe Built for Mars newsletter brings Peter Ramsey‚Äôs UX research straight to your inbox. It includes in-depth UX case studies and bite-sized UX ideas and experiments.\nüóì Delivered weeklyüñã Written by the Nielsen Norman GroupStudying users around the world, the Nielsen Norman Group provides research-based UX guidance. If you don‚Äôt want to miss their latest articles and videos about usability, design, and UX research, you can subscribe to the NN/g newsletter to stay up-to-date.\nüóì Delivered weeklyüñã Written by Sarah DoodyThe UX Notebook Newsletter is aimed at UX and product professionals who want to learn how to apply UX and design principles to design and grow their teams, products, and careers.\nüóì Delivered weeklyüñã Written by Vitaly FriedmanEvery issue of the Smart Interface Design Patterns newsletter is dedicated to a common interface challenge and how to solve it to avoid issues down the line. A treasure chest of design patterns and UX techniques.\nüóì Delivered weeklyüñã Written by the Interaction Design FoundationThe Interaction Design Foundation is known for their UX courses and webinars for both aspiring designers and advanced professionals. Their UX Weekly newsletter delivers design tips and educational material to help you leverage the power of design.\nüóì Delivered every first Tuesday of a monthüñã Written by Alex BilsteinHealthcare systems desparately need UX designers to improve the status quo for both healthcare professionals and patients. The Design With Care newsletter empowers UX designers to create better healthcare experiences and make an impact that matters.\nüóì Delivered every Mondayüñã Written by Slater KatzWhether you‚Äôre about to start your UX content education or want to get better at UX writing, The UX Gal newsletter is for you. Every Monday, Slater Katz sends out a new newsletter with prompts, thoughts, and exercises to build your UX writing and content design skills.\nüóì Delivered weeklyüñã Written by the UX Content CollectiveThe newsletter by the UX Content Collective is perfect for anyone interested in content design. In it, you‚Äôll find curated UX writing resources, new job openings, and exclusive discounts.\nüóì Delivered weeklyüñã Written by the GatherContent teamThe GatherContent newsletter is a weekly email full of content strategy goodies. It features articles, webinars and masterclasses, new books, free templates, and industry news.\nüóì Delivered weeklyüñã Written by Nikki AndersonIf you want to get more creative and confident when conducting user research, the User Research Academy might be for you. With carefully curated articles, podcasts, events, books, and academic resources all around user research, the newsletter is perfect for beginners and senior UX researchers alike.\nüóì Delivered weeklyüñã Written by Jan AhrendWhat mattered in UX research this week? To keep you up-to-date on trends, methods, and insights across the UX research industry, Jan Ahrend captures the pulse of the UX research community in his User Weekly newsletter.\nüóì Delivered weeklyüñã Written by the User Interviews teamThe UX Research Newsletter by the folks at User Interviews delivers the latest UX research articles, reports, podcast episodes, and special features. For professional user researchers just like teams who need to conduct user research without a dedicated research team.\nüóì Delivered weeklyüñã Written by the Baymard InstituteUser experience, web design, and e-commerce are the topics which the Baymard Institute newsletter covers. It features ad-free full-length research articles to give you precious insights into the field.\nüóì Delivered every other Sundayüñã Written by Chester How, Duncan Leo, and Rick LeeWhether it‚Äôs micro-interactions or easter eggs, Design Spells celebrates the design details that feel like magic and add a spark of delight to a design.\nüñã Written by Justin VolzGetting you ready for the future of motion design is the goal of Justin Volz‚Äôs newsletter. It features UX motion design trends, new UX motion design articles, and more to ‚Äúmake your UI tap dance.‚Äù\nüóì Delivered weeklyüñã Written by Romina KavcicAccompanying her interactive step-by-step guide to design systems, Romina Kavcic sends out the weekly Design System Guide newsletter on all things design systems, design process, and design strategy.\nüóì Delivered weeklyüñã Written by Eugene FedorenkoThe Figmalion newsletter keeps you up-to-date on what is happening in the Figma community, with curated design resources and a weekly roundup of Figma and design tool news.\nüóì Delivered every other Sundayüñã Written by Jorge ArangoThe Informa(c)tion newsletter explores the intersection of information, cognition, and design. Each issue includes an essay about information architecture and/or personal knowledge management and a list of interesting links.\nüóì Delivered weeklyüñã Written by Artiom DashinskyHow about a weekly design challenge to work on your core design skills, improve your portfolio, or prepare for your next job interview? The Weekly Product Design Challenges newsletter has got you covered. Every week, Artiom Dashinsky shares a new exercise inspired and used by companies like Facebook, Google, and WeWork to interview UX design candidates.\nüóì Delivered every other Thursdayüñã Written by Arkadiusz Radek and Mateusz LitarowiczWith Fundament, Arkadiusz Radek and Mateusz Litarowicz created a place to share what they‚Äôve learned in their ten-year UX and Product Design careers. The newsletter is about the things that matter in design, the practicalities of the job, the lesser-known bits, and content that will help you grow as a UX or Product Designer.\nüóì Delivered weeklyüñã Written by Jan HaalandHow do people design digital products? With curated UX case studies, the Case Study Club newsletter grants insights into other designers‚Äô processes.\nüóì Delivered monthlyüñã Written by Trine FalbeThe Ethical Design Network is a space for digital professionals to share, discuss, and self-educate about ethical design. You can sign up to the newsletter to receive monthly news, resources, and event updates all around ethical design.\nüóì Delivered monthlyüñã Written by Thorsten JonasAs designers, we have to take responsibility for more than our users. Shining a light on how to design and build more sustainable digital products, the SUX Newsletter by the Sustainable UX Network helps you stand up to that responsibility.\nüóì Delivered weeklyüñã Written by Ioana TeleanuA brand-new newsletter on AI, design, and UX goodies comes from Ioana Teleanu: AI Goodies. Every week, it covers the latest resources, trends, news, and tools from the world of AI.\nüóì Delivered weeklyüñã Written by Alen FaljicLearning business can help you become a better designer. The d.MBA newsletter is your weekly source of briefings from the business world, hand-picked for the design community by Alen Faljic and the d.MBA team.\nüóì Delivered weeklyüñã Written by Dan MallTips, tricks, and tools about design systems, process, and leadership, delivered to your inbox every week. That‚Äôs the Dan Mall Teaches newsletter.\nüóì Delivered weeklyüñã Written by Ryan RumseyTo do things differently, you must look at your work in a new light. That‚Äôs the idea behind the Stratatics newsletter. Each week, Ryan Rumsey provides design leaders and executives (and those who work alongside them) with a new idea to reimagine and deliver their best work.\nDo you have a favorite newsletter that isn‚Äôt featured in the post? Or maybe you‚Äôre writing and publishing a newsletter yourself? We‚Äôd love to hear about it in the comments below!\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  },
  {
    "url": "/2024/06/scent-ux-unrealized-potential-olfactory-design/",
    "title": "The Scent Of UX: The Unrealized Potential Of Olfactory Design",
    "author": "Kristian Mikhel",
    "date": "Jun 12, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX",
      "Design",
      "Inspiration"
    ],
    "summary": "Kristian Mikhel covers various practical applications of scents in product experience, from immersive entertainment to healing spaces and medical appliances, and how designers can drive innovation across spheres and disciplines.",
    "content": "Imagine that you could smell this page. The introduction would emit a subtle scent of sage and lavender to set the mood. Each paragraph would fill your room with the coconut oil aroma, helping you concentrate and immerse in reading. The fragrance of the comments section, resembling a busy farmer‚Äôs market, would nudge you to share your thoughts and debate with strangers.\nHow would the presence of smells change your experience reading this text or influence your takeaways?\nScents are everywhere. They fill our spaces, bind our senses to objects and people, alert us to dangers, and arouse us. Smells have so much influence over our mood and behavior that hundreds of companies are busy designing fragrances for retail, enticing visitors to purchase more, hotels, making customers feel at home, and amusement parks, evoking a warm sense of nostalgia.\nAt the same time, the digital world, where we spend our lives working, studying, shopping, and resting, remains entirely odorless. Our smart devices are not designed to emit or recognize scents, and every corner of the Internet, including this page, smells exactly the same.\nWe watch movies, play games, study, and order dinner, but our sense of smell is left unengaged. The lack of odors rarely bothers us, but occasionally, we choose analog things like books merely because their digital counterparts fail to connect with us at the same level.\nCould the presence of smells improve our digital experiences? What would it take to build the ‚Äúsmelly‚Äù Internet, and why hasn‚Äôt it been done before? Last but not least, what power do scents hold over our senses, memory, and health, and how could we harness it for the digital world?\nLet‚Äôs dive deep into a fascinating and underexplored realm of odors.\nIn his novel In Search of Lost Time, French writer Marcel Proust describes a sense of d√©j√† vu he experienced after tasting a piece of cake dipped in tea:\nThe Proust Effect, the phenomenon of an ‚Äòinvoluntary memory‚Äô evoked by scents, is a common occurrence. It explains how the presence of a familiar smell activates areas in our brain responsible for odor recognition, causing us to experience a strong, warm, positive sense of nostalgia.\nSmells have a potent and almost magical impact on our ability to remember and recognize objects and events. ‚ÄúThe nose makes the eyes remember‚Äù, as a renowned Finnish architect Juhani Pallasmaa puts it: a single droplet of a familiar fragrance is often enough to bring up a wild cocktail of emotions and recollections, even those that have long been forgotten.\nA memory of a place, a person, or an experience is often a memory of their smell that lingers long after the odor is gone. J. Douglas Porteous, Professor of Geography at the University of Victoria, coined the term Smellscape to describe how a collective of smells in each particular area form our perception, define our attitude, and craft our recollection of it.\nTo put it simply, we choose to avoid beautiful places and forget delicious meals when their odors are not to our liking. Pleasant aromas, on the other hand, alter our memory, make us overlook flaws and defects, or even fall in love.\nWith such an immense power that scents hold over our perception of reality, it comes as no surprise they have long become a tool in the hands of brand and service designers.\nWhat do a luxury car brand, a cosmetics store, and a carnival ride have in common? The answer is that they all have their own distinct scents.\nCarefully crafted fragrances are widely used to create brand identities, make powerful impressions, and differentiate brands ‚Äúemotionally and memorably‚Äù.\nSome choose to complement visual identities with subtle, tailored aromas. 12.29, a creative ‚Äúolfactive branding company,‚Äù developed the ‚Äúscent identity‚Äù for Cadillac, a ‚Äúsymbol of self-expression representing the irrepressible pursuit of life.‚Äù\nThe branded Cadillac scent is diffused in dealerships and auto shows around the world, evoking a sense of luxury and class. Customers are expected to remember Cadillac better for its ‚Äúsignature nutty coffee, dark leather, and resinous amber notes‚Äù, forging a strong emotional connection with the brand.\nNext time they think of Cadillac, their brain will recall its signature fragrance and the way it made them feel. Cadillac is ready to bet they will not even consider other brands afterwards.\nOthers may be less subtle and employ more aggressive, fragrant marketing tactics. LUSH, a British cosmetics retailer, is known for its distinct smells. Although even the company co-founder admits that odors can be overwhelming for some, LUSH‚Äôs scents play an important role in crafting the brand‚Äôs identity.\nIndeed, the aroma of their stores is so recognizable that it lures customers in from afar with ease, and few walk away without forever remembering the brand‚Äôs distinct smell.\nHowever, retail is not the only area that employs discernible smells.\nDisney takes a holistic approach to service design, carefully considering every aspect that influences customer satisfaction. Smells have long been a part of the signature ‚ÄúDisney experience‚Äù: the main street smells like pastry and popcorn, Spaceship Earth is filled with the burning wood aroma, and Soarin‚Äô is accompanied by notes of orange and pine.\nDozens of scent-emitting devices, Smellitzers, are responsible for adding scents to each experience. Deployed around each park and perfectly synced with every other sensory stimulus, they ‚Äúshoot scents toward passersby‚Äù and ‚Äútrigger memories of childhood nostalgia.‚Äù\nAs shown in the patent, Smellitzer is a rather simple odor delivery system designed to ‚Äúenhance the sense of flight created in the minds of the passengers.‚Äù Scents are carefully curated and manufactured to evoke precise emotions without disrupting the ride experience.\nDisney‚Äôs attractions, lanes, and theaters are packed with smell-emitting gadgets that distribute sweet and savoury notes. The visitors barely notice the presence of added scents, but later inevitably experience a sudden but persistent urge to return to the park.\nCould it be something in the air, perhaps?\nThey can soothe a passenger during a long flight with the subtle notes of chamomile and mint or seduce a hungry shopper with the familiar aroma of freshly baked cinnamon buns. Scents can create and evoke great memories, amplify positive emotions, or turn casual buyers into eager and loyal consumers.\nUnfortunately, smells can also ruin otherwise decent experiences.\nIn 1912, Aldous Huxley, author of the dystopian novel Brave New World, published an essay ‚ÄúSilence is Golden‚Äù, reflecting on his first experience watching a sound film. Huxley despised cinema, calling it the ‚Äúmost frightful creation-saving device for the production of standardized amusement‚Äù, and the addition of sound made the writer concerned for the future of entertainment. Films engaged multiple senses but demanded no intellectual involvement, becoming more accessible, more immersive, and, as Huxley feared, more influential.\n‚ÄúBrave New World,‚Äù published in 1932, features the cinema of the future ‚Äî a multisensory entertainment complex designed to distract society from seeking a deeper sense of purpose in life. Attendees enjoy a ‚Äã‚Äã‚Äúscent organ‚Äù playing ‚Äúa delightfully refreshing Herbal Capriccio ‚Äî rippling arpeggios of thyme and lavender, of rosemary, basil, myrtle, tarragon,‚Äù and get to experience every physical stimulation imaginable.\nHuxley‚Äôs critical take on the state of the entertainment industry was spot-on. Obsessed with the idea of multisensory entertainment, studios did not take long to begin investing in immersive experiences. The 1950s were the age of experiments designed to attract more viewers: colored cinema, 3D films, and, of course, scented movies.\nIn 1960, two films hit the American theaters: Scent of Mystery, accompanied by the odor-delivery technology called ‚ÄúSmell‚ÄìO‚ÄìVision‚Äù, and Behind the Great Wall, employing the process named AromaRama. Smell‚ÄìO‚ÄìVision was designed to transport scents through tubes to each seat, much like Disney‚Äôs Smellitzers, whereas AromaRama distributed smells through the theater‚Äôs ventilation.\nBoth scented movies were panned by critics and viewers alike. In his review for the New York Times, Bosley Crowther wrote that ‚Äú‚Ä¶synthetic smells [‚Ä¶] occasionally befit what one is viewing, but more often they confuse the atmosphere‚Äù. Audiences complained about smells being either too subtle or too overpowering and the machines disrupting the viewing experience.\nThe groundbreaking technologies were soon forgotten, and all plans to release more scented films were scrapped.\nWhy did odors, so efficient at manufacturing nostalgic memories of an amusement park, fail to entertain the audience at the movies? On the one hand, it may attributed to the technological limitations of the time. For instance, AromaRama diffused the smells into the ventilation, which significantly delayed the delivery and required scents to be removed between scenes. Suffice it to say the viewers did not enjoy the experience.\nHowever, there could be other possible explanations.\nFirst of all, digital entertainment is traditionally odorless. Viewers do not anticipate movies to be accompanied by smells, and their brains are conditioned to ignore them. Researchers call it ‚Äúinattentional anosmia‚Äù: people connect their enjoyment with what they see on the screen, not what they smell or taste.\nMoreover, background odors tend to fade and become less pronounced with time. A short exposure to a pleasant odor may be complimentary. For instance, viewers could smell orange as the character in ‚ÄúBehind the Great Wall‚Äù cut and squeezed the fruit: an ‚Äúimpressive‚Äù moment, as admitted by critics. However, left to linger, even the most pleasant scents can leave the viewer uninvolved or irritated.\nFinally, cinema does not require active sensory involvement. Viewers sit still in silence, rarely even moving their heads, while their sight and hearing are busy consuming and interpreting the information. Immersion requires suspension of disbelief: well-crafted films force the viewer to forget the reality around them, but the addition of scents may disrupt this state, especially if scents are not relevant or well-crafted.\nFor the scented movie to engage the audience, smells must be integrated into the film‚Äôs events and play an important role in the viewing experience. Their delivery must be impeccable: discreet, smooth, and perfectly timed. In time, perhaps, we may see the revival of scented cinema. Until then, rare auteur experiments and 4D‚Äìcinema booths at carnivals will remain the only places where fragrant films will live on.\nFortunately, the lessons from the early experiments helped others pave the way for the future of fragrant entertainment.\nUnlike movies, video games require active participation. Players are involved in crafting the narrative of the game and, as such, may expect (and appreciate) a higher degree of realism. Virtual Reality is a good example of technology designed for full sensory stimulation.\nModern headsets are impressive, but several companies are already working hard on the next-gen tech for immersive gaming. Meta and Manus are developing gloves that make virtual elements tangible. Teslasuit built a full-body suit that captures motion and biometry, provides haptic feedback, and emulates sensations for objects in virtual reality. We may be just a few steps away from virtual multi-sensory entertainment being as widespread as mobile phones.\nScents are coming to VR, too, albeit at a slower pace, with a few companies already selling devices for fragrant entertainment. For instance, GameScent has developed a cube that can distribute up to 8 smells, from ‚Äúgunfire‚Äù and ‚Äúexplosion‚Äù to ‚Äúforest‚Äù and ‚Äústorm‚Äù, using AI to sync the odors with the events in the game.\nThe vast majority of experiments, however, occur in the labs, where researchers attempt to understand how smells impact gamers and test various concepts. Some assign smells to locations in a VR game and distribute them to players; others have the participants use a hand-held device to ‚Äúsmell‚Äù objects in the game.\nThe majority of studies demonstrate promising results. The addition of fragrances creates a deeper sense of immersion and enhances realism in virtual reality and in a traditional gaming setting.\nA notable example of the latter is ‚ÄúTainted‚Äù, an immersive game based on South-East Asian folklore, developed by researchers in 2017. The objective of the game is to discover and burn banana trees, where the main antagonist of the story ‚Äî a mythical vengeful spirit named Pontianak ‚Äî is traditionally believed to hide.\nThe way ‚ÄúTainted‚Äù incorporates smells into the gameplay is quite unique. A scent-emitting module, placed in front of the player, diffuses fragrances to complement the narrative. For instance, the smell of banana signals the ghost‚Äôs presence, whereas pineapple aroma means that a flammable object required to complete the quest is nearby. Odors inform the player of dangers, give directions, and become an integral part of the gaming experience, like visuals and sound.\nScented entertainment may be in its early stages for now, but its future is undoubtedly bright. Just imagine soaking your hands in cold virtual water and enjoying the refreshing scent of the sea. Three-dimensional digital worlds, realistic and accessible to touch and smell, may become reality sooner than we think.\nIn the meantime, there are disciplines that actively employ odors today, leveraging their ability to influence human memory, mood, and well-being.\nA scented candle on a desk is not only a tasteful decoration; the pleasant scent it emits helps memorize things better, reduces stress, and creates a productive atmosphere. Our brains are designed to associate objects and facts with smells and recall them when familiar scents are present.\nFragrance-enhanced learning is barely a novelty in the real world. Oil-infused classrooms improve cognition and performance in young students. Scented books and toys are used widely to entertain children and enhance their imagination. Even office spaces use aroma diffusers to increase productivity.\nSome of the most creative examples of scented learning come from places that combine education and entertainment, most notably, museums.\nJorvik Viking Centre is famous for its use of ‚Äúsmells of Viking-age York‚Äù to capture the unique atmosphere of the past. Its scented halls, holograms, and entertainment programs turn a former archeological site into a carnival ride that teleports visitors into the 10th century to immerse them into the daily life of the Vikings.\nAuthentic smells are the center‚Äôs distinct feature, an integral part of its branding and marketing, and an important addition to its collection. Smells are responsible for making Jorvik exhibitions so memorable, and hopefully, for visitors walking away with a few Viking trivia facts firmly stuck in their heads.\nAt the same time, learning is becoming increasingly more digital, from mobile apps for foreign languages to student portals and online universities. Smart devices strive to replace classrooms with their analog textbooks, papers, gel pens, and teachers. Virtual Reality is a step towards the future of immersive digital education, and odors may play a more significant role in making it even more efficient.\nEducation will undoubtedly continue leveraging the achievements of the digital revolution to complement its existing tools. Tablets and Kindles are on their way to replace textbooks and pens. Phones are no longer deemed a harmful distraction that causes brain cancer.\nOdors, in turn, are becoming ‚Äúlearning supplements‚Äù. Teachers and parents have access to personalized diffusers that distribute the smell of peppermint to enhance students‚Äô attention. Large scent-emitting devices for educational facilities are available on the market, too.\nAt the same time, inspired to figure out the way to upload knowledge straight into our brains, we‚Äôve discovered a way to learn things in our sleep using smells. Several studies have shown that exposure to scents during sleep significantly improves cognitive abilities and memory. More than that, smells can activate our memory while we sleep and solidify what we have learnt while awake.\nOdors may not replace textbooks and lectures, but their addition will make remembering and recalling things significantly easier. In fact, researchers from MIT built and tested a wearable scent-emitting device that can be used for targeted memory reactivation.\nIn time, we will undoubtedly see more smart devices that make use of scents for memory enhancement, training, and entertainment. Integrated into the ecosystems of gadgets, olfactory wearables and smart home appliances will improve our well-being, increase productivity, and even detect early symptoms of illnesses.\nThere is, however, a caveat.\nWe know very little about smells.\nUntil 2004, when Richard Axel and Linda Buck received a Nobel Prize for identifying the genes that control odor receptors, we didn‚Äôt even know how our bodies processed smells or that different areas in our brains were activated by different odors.\nWe know that our experience with smells is deep and intimate, from the memories they create to the emotions they evoke. We are aware that unpleasant scents linger longer and have a stronger impact on our mental state and memory. Finally, we understand that intensity, context, and delivery matter as much as the scent itself and that a decent aroma diffused out of place ruins the experience.\nThus, if we wish to build devices that make the best use of scents, we need to follow a few simple principles.\nIn his article about Smellscapes, J. Douglas Porteous writes:\nSmells revive hidden memories and evoke strong emotions, but their connection to our minds is deeply personal. A rich, spicy aroma of freshly roasted coffee beans will not have the same impact on different people, and in order to use scents in learning, we need to tailor the experience to each user.\nIn order to maximize the potential of odors in immersion and learning, we need to understand which smells have the most impact on the user. By filtering out the smells that the user finds unpleasant or associates with sad events in their past, we can reduce any potential negative effect on their wellness or memory.\nHumans are notoriously bad at describing odors.\nVery few languages in the world feature specific terms for smells. For instance, the speakers of Jahai, a language in Malaysia, enjoy the privilege of having specific names for scents like ‚Äúbloody smell that attracts tigers‚Äù and ‚Äúwild mango, wild ginger roots, bat caves, and petrol‚Äù.\nEnglish, on the other hand, often uses adjectives associated with flavor (‚Äúsmoky vanilla‚Äù) or comparison (‚Äúsmells like orange‚Äù) to describe scents. For centuries, we have been trying to work out a system that could help cluster odors.\nAristotle classified all odors into six groups: sweet, acid, severe, fatty, sour, and fetid (unpleasant). Carl Linnaeus expanded it to 7 types: aromatic, fragrant, alliaceous (garlic), ambrosial (musky), hircinous (goaty), repulsive, and nauseous. Hans Henning arranged all scent groups in a prism. None of the existing classifications, however, help accurately describe complex smells, which inevitably makes it harder to recreate them.\nAcademics have developed several comprehensive lists, for instance, the Odor Character Profiling that contains 146 unique descriptors. Pleasant smells from the list are easier to reproduce than unique and sophisticated odors.\nAlthough an aroma of the ‚Äúwarm touch of an early summer sun‚Äù may work better for a particular user than the smell of an apple pie, the high price of getting the scent wrong makes it a reasonable trade-off.\nNothing can ruin a good olfactory experience more than an imperfect delivery system.\nDisney‚Äôs Smellitzers and Jorvik‚Äôs scented exhibition set the standard for discreet, contextual, and consistent inclusion of smells to complement the experience. Their diffusers are well-concealed, and odors do not come off as overwhelming or out of place.\nOn the other hand, the failure of scented movies from the 1950s can at least partially be attributed to poorly designed aroma delivery systems. Critics remembered that even the purifying treatment that was used to clear the theater air between scenes left a ‚Äústicky, sweet‚Äù and ‚Äúupsetting‚Äù smell.\nGood delivery systems are often simple and focus on augmenting the experience without disrupting it. For instance, eScent, a scent-enhanced FFP3 mask, is engineered to reduce stress and improve the well-being of frontline workers. The mask features a slot for applicators infused with essential oil; users can choose fragrances and swap the applicator whenever they want. Beside that, eScent is no different from its ‚Äúanalog‚Äù predecessor: it does not require special equipment or preparation, and the addition of smells does not alter the experience of wearing a mask.\nWe may know little about smells, but we are steadily getting closer to harnessing their power.\nIn 2022, Alex Wiltschko, a former Google staff research scientist, founded Osmo, a company dedicated to ‚Äúgiving computers a sense of smell.‚Äù In the long run, Osmo aspires to use its knowledge to manufacture scents on demand from sustainable synthetic materials.\nToday, the company operates as a research lab, using a trained AI to predict the smell of a substance by analyzing its molecular structure. Osmo‚Äôs first tests demonstrated some promising results, with machine accurately describing the scents in 53% of cases.\nShould Osmo succeed at building a machine capable of recognizing and predicting smells, it will change the digital world forever. How will we interact with our smart devices? How will we use their newly discovered sense of smell to exchange information, share precious memories with each other, or relive moments from the past? Is now the right time for us to come up with ideas, products, and services for the future?\nOdors are a booming industry that offers designers and engineers a unique opportunity to explore new and brave concepts. With the help of smells, we can transform entire industries, from education to healthcare, crafting immersive multi-sensory experiences for learning and leisure.\nSmells are a powerful tool that requires precision and perfection to reach the desired effect. Our past shortcomings may have tainted the reputation of scented experiences, but recent progress demonstrates that we have learnt our lessons well. Modern technologies make it even easier to continue the explorations and develop new ways to use smells in entertainment, learning, and wellness ‚Äî in the real world and beyond.\nOur digital spaces may be devoid of scents, but they will not remain odorless for long."
  },
  {
    "url": "/2024/06/mdx-or-how-i-learned-love-multimedia-writing/",
    "title": "How I Learned To Stop Worrying And Love Multimedia Writing",
    "author": "Frederick O‚ÄôBrien",
    "date": "Jun 21, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Content",
      "Inspiration",
      "MDX"
    ],
    "summary": "Balancing the age-old simplicity of words on paper with the myriad creative possibilities of the web is a tension as old as the web itself. Leaning into that overlap can bring new dimensions not just to the things we write but also to how we write them.",
    "content": "Prior to the World Wide Web, the act of writing remained consistent for centuries. Words were put on paper, and occasionally, people would read them. The tools might change ‚Äî quills, printing presses, typewriters, pens, what have you ‚Äî and an adventurous author may perhaps throw in imagery to compliment their copy.\nWe all know that the web shook things up. With its arrival, writing could become interactive and dynamic. As web development progressed, the creative possibilities of digital content grew ‚Äî and continue to grow ‚Äî exponentially. The line between web writing and web technologies is blurry these days, and by and large, I think that‚Äôs a good thing, though it brings its own challenges. As a sometimes-engineer-sometimes-journalist, I straddle those worlds more than most and have grown to view the overlap as the future.\nWriting for the web is different from traditional forms of writing. It is not a one-size-fits-all process. I‚Äôd like to share the benefits of writing content in digital formats like MDX using a personal project of mine as an example. And, by the end, my hope is to convince you of the greater writing benefits of MDX over more traditional formats.\nAt its most basic, MDX is Markdown with components in it. For those not in the know, Markdown is a lightweight markup language created by John Gruber in 2003, and it‚Äôs everywhere today. GitHub, Trello, Discord ‚Äî all sorts of sites and services use it. It‚Äôs especially popular for authoring blog posts, which makes sense as blogging is very much the digital equivalent of journaling. The syntax doesn‚Äôt ‚Äúget in the way,‚Äù and many content management systems support it.\nMarkdown‚Äôs goal is an ‚Äúeasy-to-read and easy-to-write plain text format‚Äù that can readily be converted into XHTML/HTML if needed. Since its inception, Markdown was supposed to facilitate a writing workflow that integrated the physical act of writing with digital publishing.\nWe‚Äôll get to actual examples later, but for the sake of explanation, compare a block of text written in HTML to the same text written in Markdown.\nHTML is a pretty legible format as it is:\nBut Markdown is somehow even less invasive:\nI‚Äôve become a Markdown disciple since I first learned to code. Its clean and relatively simple syntax and wide compatibilities make it no wonder that Markdown is as pervasive today as it is. Having structural semantics akin to HTML while preserving the flow of plain text writing is a good place to be.\nHowever, it could be accused of being a bit too clean at times. If you want to communicate with words and images, you‚Äôre golden, but if you want to jazz things up, you‚Äôll find yourself looking further afield for other options.\nGruber set out to create a ‚Äúformat for writing for the web,‚Äù and given its ongoing popularity, you have to say he succeeded, yet the web 20 years ago is a long way away from what it is today.\nThis is the all-important context for what I want to discuss about MDX because MDX is an offshoot of Markdown, only more capable of supporting richer forms of multimedia ‚Äî and even user interaction. But before we get into that, we should also discuss the concept of web components because that‚Äôs the second significant piece that MDX brings to the table.\nThe move towards richer multimedia websites and apps has led to a thriving ecosystem of web development frameworks and libraries, including React, Vue, Svelte, and Astro, to name a few. The idea that we can have reusable components that are not only interactive but also respond to each other has driven this growth and continues to push on evolving web platform features like web components.\nBy leaning into the overlaps rather than trying to abstract them away at all costs, we find untold potential for beautiful digital content.\nMy own experience with MDX took shape in a side project of mine: teeline.online. To cut a long story short, before I was a software engineer, I was a journalist, and part of my training involved learning a type of shorthand called Teeline. What it boils down to is ripping out as many superfluous letters as possible ‚Äî I like to call this process ‚Äúdisemvowelment‚Äù ‚Äî then using Teeline‚Äôs alphabet to write the remaining content. This has allowed people like me to write lots of words very quickly.\nDuring my studies, I found online learning resources lacking, so as my engineering skills improved, I started working on the kind of site I‚Äôd have used when I was a student if it was available. Hence, teeline.online.\nI built the teeling.online site with the Svelte framework for its components. The site‚Äôs centerpiece is a dataset of shorthand characters and combinations with which hundreds of outlines can be rendered, combined, and animated as SVG paths.\nAnother part of the site is a very modest syllabus that includes lessons on Teeline theory and best practices. The site is in its early stages, yet is already threatened to become overrun with images and SVGs. There was a time when every word had its own bespoke SVG outline, and every image was made from scratch. Over time, though, I managed to abstract the SVG outlines into a core dataset, with which an infinite number of outlines could be generated.\nThese refinements were obviously handy from technical and organizational standpoints, but wouldn‚Äôt it be nice to weave them into learning materials?\nSvelte‚Äôs framework has its own variant of MDX called MDsveX. Although the syntax is tightly coupled to Svelte-based components (rather than components made by other frameworks, e.g., React), the underlying principles are the same. I was able to use it to weave reusable interactive elements into the syllabus.\nThe first and simplest application of this was to have animated outlines in an ‚ÄúAlphabet‚Äù section. Elsewhere, individual outline cards could be dropped in to illustrate points.\nLikewise, Teeline‚Äôs ‚Äúdisemvowelment‚Äù script could be wired into a single component that I could then use as many times as I like.\nThen, of course, as is only natural when working with components, I could combine them to show the Teeline evolution that converts longhand words into shorthand outlines.\nThe Markdown, meanwhile, looks as simple as this:\nIt‚Äôs not exactly the sort of complex codebase you might expect for an app. Meanwhile, the files themselves can sit in a nice, tidy directory of their own:\nThe syllabus is neatly filed away in its own folder. With a bit of metadata sprinkled in, I have everything I need to render an entire section of the site using routing. The setup feels like a fluid medium between worlds. If you want to write with words and pictures, you can. If an idea comes to mind for a component that would better express what you‚Äôre going for, you can go make it and drop it in.\nIn fairness, a ‚ÄúWordToOutline‚Äù component like this might not mean much to Teeline newcomers, though with such a clear connection between the Markdown and the rendered pages, it‚Äôs not much of a stretch to work out what it is. And, of course, there‚Äôs always the likes of services like Storybook that can be used to organize component libraries as they grow.\nThe raw form of multimedia content can be pretty unsightly ‚Äî something that needs to be kept at arm‚Äôs length by content management systems. With MDX ‚Äî and its ilk ‚Äî the content feels rather friendly and legible.\nI think you can start to see some of the benefits of an MDX setup like this. There are two key benefits in particulart that I think are worth calling out.\nFirst and foremost, MDX doesn‚Äôt distract the writing and editorial flow of working with content. When we‚Äôre working with traditional code languages, even HTML, the code format is convoluted with things like opening and closing tags. And it‚Äôs even more convoluted if we need the added complexity of embedding components in the content.\nMDX (and Markdown, for that matter) is much less verbose. Content is a first-class citizen that takes up way less space than typical markup, making it clear and legible. And where we need the complex affordance of components, those can be dropped in without disrupting that nice editorial experience.\nAnother key benefit of using MDX is reusability. If, for example, I want to display the same information as images instead, each image would have to be bespoke. But we all know how inefficient it is to maintain content in raster images ‚Äî it requires making edits in a completely different application, which is highly inconvenient. With an old-school approach, if I update the design of the site, I‚Äôm left having to create dozens of images in the new style.\nWith MDX (or an equivalent like MDsveX), I only need to make the change once, and it updates everywhere. Having done the leg work of building reusable components, I can weave them throughout the syllabus as I see fit, safe in the knowledge that updates will roll out across the board ‚Äî and do it without affecting the editorial experience whatsoever.\nConsider the time it would take to create images or videos representing the same thing. Over time, using fixed assets like images becomes a form of technical ‚Äî or perhaps editorial ‚Äî debt that adds up over time, while a multimedia approach that leans into components proves to be faster and more flexible than vanilla methods.\nI just made the point that working with reusable components in MDX allows Markdown content to become more robust without affecting the content‚Äôs legibility as we author it. Using Svelte‚Äôs version of MDX, MDsveX, I was able to combine the clean, readable conventions of Markdown with the rich, interactive potential of components.\nIt‚Äôs only right that all my gushing about MDX and its benefits be tempered with a reality check or two. Like anything else, MDX has its limitations, and your mileage with it will vary.\nThat said, I believe that those limitations are likely to show up when MDX is perhaps not the best choice for a particular project. There‚Äôs a sweet spot that MDX fills and it‚Äôs when we need to sprinkle in additional web functionality to the content. We get the best of two worlds: minimal markup and modern web features.\nBut if components aren‚Äôt needed, MDX is overkill when all you need is a clean way to write content that ports nicely into HTML to be consumed by whatever app or platform you use to display it on the web.\nSimilarly, if your technical needs go beyond components, you may be looking at a more complex architecture than what MDX can support, and you would be best leaning into what works best for content in the particular framework or stack you‚Äôre using.\nCode doesn‚Äôt age as well as words or images do. An MDX-esque approach does sign you up for the maintenance work of dependency updates, refactoring, and ‚Äî god forbid ‚Äî framework migrations. I haven‚Äôt had to face the last of those realities yet, though I‚Äôd say the first two are well worth it. Indeed, they‚Äôre good habits to keep.\nWriting with MDX continues to be a learning experience for me, but it‚Äôs already made a positive impact on my editorial work.\nSpecifically, I‚Äôve found that MEX improves the quality of my writing. I think more laterally about how to convey ideas.\nThere is way more potential to enhance my words with componentry than I would get with Markdown alone, opening more avenues for what I can say and how I say it.\nOf course, those components do not come for free. MDX does sign you up to build those, regardless of whether you have a set of predefined components included in your framework. At the same time, I‚Äôd argue that the opportunities MDX opens up for writing greatly outweigh having to build or maintain a few components.\nIf MDX had been around in the age of Leonardo Di Vinci, perhaps he may have reached for MDX in his journals. I know I‚Äôm taking a great leap of assumption here, but the complexity of what he was writing and trying to describe in technical terms with illustrations would have benefited greatly from MDX for everything from interactive demos of his ideas to a better writing experience overall.\nIn many respects, MDX‚Äôs rich, varied way of approaching content is something that Markdown ‚Äî and writing for the web in general ‚Äî encourages already. We don‚Äôt think only in terms of words but of links, images, and semantic structure. MDX and its equivalents merely take the lid off the cookie jar so we can enhance our work.\nWouldn‚Äôt it be nice if‚Ä¶ is a redundant turn of phrase on the web. There may be technical hurdles ‚Äî or, in my case, skill and knowledge hurdles ‚Äî but it‚Äôs a buzz to think about ways in which your thoughts can best manifest on screen.\nAt the same time, the simplicity of Markdown is so unintrusive. If someone wants to write content formatted in vanilla Markdown, it‚Äôs totally possible to do that without trading up to MDX.\nWhy describe the solar system when you can render an explorable one? Why have a picture of a proposed skyscraper when you can display a 3D model? Writing with MDX (or, more accurately, MDsveX) has changed my entire thought process. Potential answers to the question, How do I best get this across?, become more expansive.\nGood things happen when worlds collide. New possibilities emerge when seemingly disparate things come together. Many content management systems shield writers ‚Äî and writing ‚Äî from code. To my mind, this is like shielding painters from wider color palettes, chefs from exotic ingredients, or sculptors from different types of tools.\nLeaning into the overlap between writing and coding gets us closer to one of the web‚Äôs great joys: if you can imagine it, you can probably do it."
  },
  {
    "url": "/2024/06/2-page-login-pattern-how-fix-it/",
    "title": "2-Page Login Pattern, And How To Fix It",
    "author": "Vitaly Friedman",
    "date": "Jun 13, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX",
      "User Experience",
      "Design"
    ],
    "summary": "The 2-page login pattern is becoming pervasive. Here are the reasons behind this design choice and alternative solutions to create a more efficient and user-friendly authentication experience.",
    "content": "Why do we see login forms split into multiple screens everywhere? Instead of typing email and password, we have to type email, move to the next page, and then type password there. This seems to be inefficient, to say the least.\nLet‚Äôs see why login forms are split across screens, what problem they solve, and how to design a better experience for better authentication UX (video).\nThis article is part of our ongoing series on design patterns. It‚Äôs also an upcoming part of the 10h-video library on Smart Interface Design Patterns¬†üç£ and the upcoming live UX training as well. Use code BIRDIE to save 15% off.\nIf there is one thing we‚Äôve learned over the years in UX, it‚Äôs that designing for people is hard. This applies to login forms as well. People are remarkably forgetful. They often forget what email they signed up with or what service they signed in with last time (Google, Twitter, Apple, and so on)\nOne idea is to remind customers what they signed in with last time and perhaps make it a default option. However, it reveals directly what the user‚Äôs account was, which might be a privacy or security issue:\nWhat if instead of showing all options to all customers all the time, we ask for email first, and then look up what service they used last time, and redirect customers to the right place automatically? Well, that‚Äôs exactly the idea behind 2-page logins.\nYou might have seen them already. If a few years ago, most login forms asked for email and password on one page, these days it‚Äôs more common to ask only for email first. When the user chooses to continue, the form will ask for a password in a separate step. Brad explores some problems of this pattern.\nA common reason for splitting the login form across pages is Single Sign-On (SSO) authentication. Large companies typically use SSO for corporate sign-ins of their employees. With it, employees log in only once every day and use only one set of credentials, which improves enterprise security.\nSSO also helps with regulatory compliance, and it‚Äôs much easier to provision users with appropriate permissions and revoke them later at once. So, if an employee leaves, all their accounts and data can be deleted at once.\nTo support both business customers and private customers, companies use 2-step-login. Users need to type in their email first, then the validator checks what provider the email is associated with and redirects users there.\nUsers rarely love this experience. Sometimes, they have multiple accounts (private and business) with one service. Also, 2-step-logins often break autofill and password managers. And for most users, login/pass is way faster than 2-step-login.\nOf course, typically, there are dedicated corporate login pages for employees to sign in, but they often head directly to Gmail, Figma, and so on instead and try to sign in there. However, they won‚Äôt be able to log in as they must sign in through SSO.\nBottom line: the pattern works well for SSO users, but for non-SSO users, it results in a frustrating UX.\nThere is a way to work around these challenges (see the image below). We could use a single-page look-up with email and password input fields as a default. Once a user has typed in their email, we detect if the SSO authentication is enabled.\nIf Single Sign-On (SSO) is enabled for that email, we show a Single Sign-On option and default to it. We could also make the password field optional or disabled.\nIf SSO isn‚Äôt enabled for that email, we proceed with the regular email/password login. This is not much hassle, but it saves trouble for both private and business accounts.\nü§î People often forget what email they signed up with.ü§î They also forget the auth service they signed in with.ü§î Companies use Single Sign-On (SSO) for corporate sign-in.ü§î Individual accounts still need email and password for login.‚úÖ 2-step login: ask for email, then redirect to the right service.\n‚úÖ 2-step-login replaces ‚Äúsocial‚Äù sign-in for repeat users.‚úÖ It directs users rather than giving them roadblocks.ü§î Users still keep forgetting the email they signed in with.ü§î Sometimes, users have multiple accounts with one service.üö´ 2-step logins often break autofill and password managers.üö´ For most users, login/pass is way faster than 2-step-login.\n‚úÖ Better: start with one single page with login and password.‚úÖ As users type their email, detect if SSO is enabled for them.‚úÖ If it is, reveal an SSO-login option and set a default to it.‚úÖ Otherwise, proceed with the regular password login.‚úÖ If users must use SSO, disable the password field ‚Äî don‚Äôt hide it.\nPersonally, I haven‚Äôt tested the approach, but it might be a good alternative to 2-page logins ‚Äî both for SSO and non-SSO users. Keep in mind, though, that SSO authentication might or might not require a password, as sometimes login happens via Yubikey or Touch-ID or third parties (e.g., OAuth).\nAlso, eventually, users will be locked out; it‚Äôs just a matter of time. So, do use magic links for password recovery or access recovery, but don‚Äôt mandate it as a regular login option. Switching between applications is slow and causes mistakes. Instead, nudge users to enable 2FA: it‚Äôs both usable and secure.\nAnd most importantly, test your login flow with the tools that your customers rely on. You might be surprised how broken their experience is if they rely on password managers or security tools to log in. Good luck, everyone!\nIf you are interested in similar insights around UX, take a look at Smart Interface Design Patterns, our 10h-video course with 100s of practical examples from real-life projects ‚Äî with a live UX training later this year. Everything from mega-dropdowns to complex enterprise tables ‚Äî with 5 new segments added every year. Jump to a free preview.\n100 design patterns & real-life\nexamples.10h-video course + live UX training. Free preview.\n(yk)Explore more onUXUser ExperienceDesign"
  },
  {
    "url": "/2024/06/css-tips-and-techniques/",
    "title": "Useful CSS Tips And Techniques",
    "author": "Cosima Mielke",
    "date": "Jun 7, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS"
    ],
    "summary": "The times for CSS have probably never been more exciting than today. In this quick read, we‚Äôve got some useful CSS tips and techniques for you that you can apply to your work right away. Let‚Äôs dive deeper into self-modifying CSS variables, hanging punctuation, and more.",
    "content": "If you‚Äôve been in the web development game for longer, you might recall the days when CSS was utterly confusing and you had to come up with hacks and workarounds to make things work. Luckily, these days are over and new features such as container queries, cascade layers, CSS nesting, the :has selector, grid and subgrid, and even new color spaces make CSS more powerful than ever before.\nAnd the innovation doesn‚Äôt stop here. We also might have style queries and perhaps even state queries, along with balanced text-wrapping and CSS anchor positioning coming our way.\nWith all these lovely new CSS features on the horizon, in this post, we dive into the world of CSS with a few helpful techniques, a deep-dive into specificity, hanging punctuation, and self-modifying CSS variables. We hope they‚Äôll come in handy in your work.\nMany fear the cascade and specificity in CSS. However, the concept isn‚Äôt as hard to get to grips with as one might think. To help you get more comfortable with two of the most fundamental parts of CSS, Andy Bell wrote a wonderful primer on the cascade and specificity.\nThe guide explains how certain CSS property types will be prioritized over others and dives deeper into specificity scoring to help you assess how likely it is that the CSS of a specific rule will apply. Andy uses practical examples to illustrate the concepts and simplifies the underlying mental model to make it easy to adopt and utilize. A power boost for your CSS skills.\nHave you ever considered testing HTML with CSS instead of JavaScript? CSS selectors today are so powerful that it is actually possible to test for most kinds of HTML patterns using CSS alone. A proponent of the practice, Heydon Pickering summarized everything you need to know about testing HTML with CSS, whether you want to test accessibility, uncover HTML bloat, or check the general usability.\nAs Heydon points out, testing with CSS has quite some benefits. Particularly if you work in the browser and prefer exploring visual regressions and inspector information over command line logs, testing with CSS could be for you. It also shines in situations where you don‚Äôt have direct access to a client‚Äôs stack: Just provide a test stylesheet, and clients can locate instances of bad patterns you have identified for them without having to onboard you to help them do so. Clever!\nThe CSS spec for custom properties does not allow a custom property to reference itself ‚Äî although there are quite some use cases where such a feature would be useful. To close the gap, Lea Verou proposed an inherit() function in 2018, which the CSSWG added to the specs in 2021. It hasn‚Äôt been edited-in yet, but Roman Komarov found a workaround that makes it possible to start involving its behavior.\nRoman‚Äôs approach uses container-style queries as a way to access the previous state of a custom property. It can be useful when you want to cycle through various hues without having a static list of values, to match the border-radius visually, or to nest menu lists, for example. The workaround is still strictly experimental (so do not use it in production!), but since it is likely that style queries will gain broad browser support before inherit(), it has great potential.\nhanging-punctuation is a neat little CSS property. It extends punctuation marks such as opening quotes to cater to nice, clean blocks of text. And while it‚Äôs currently only supported in Safari, it doesn‚Äôt hurt to include it in your code, as the property is a perfect example of progressive enhancement: It leaves things as they are in browsers that don‚Äôt support it and adds the extra bit of polish in browsers that do.\nJeremy Keith noticed an unintended side-effect of hanging-punctuation, though. When you apply it globally, it‚Äôs also applied to form fields. So, if the text in a form field starts with a quotation mark or some other piece of punctuation, it‚Äôs pushed outside the field and hidden. Jeremy shares a fix for it: Add input, textarea { hanging-punctuation: none; } to prevent your quotation marks from disappearing. A small tip that can save you a lot of headaches.\nThe aspect-ratio property shines in fluid environments. It can handle anything from inserting a square-shaped <div> to matching the 16:9 size of a <video>, without you thinking in exact dimensions. And most of the time, it does so flawlessly. However, there are some things that can break aspect-ratio. Chris Coyier takes a closer look at three reasons why your aspect-ratio might not work as expected.\nAs Chris explains, one potential breakage is setting both dimensions ‚Äî which might seem obvious, but it can be confusing if one of the dimensions is set from somewhere you didn‚Äôt expect. Stretching and content that forces height can also lead to unexpected results. A great overview of what to look out for when aspect-ratio breaks.\nCSS Grid has taken layouts on the web to the next level. However, as powerful as CSS is today, not every layout that can be imagined is feasible. Masonry layout is one of those things that can‚Äôt be accomplished with CSS alone. To change that, the CSS Working Group is asking for your help.\nThere are currently two approaches in discussion at the CSS Working Group about how CSS should handle masonry-style layouts ‚Äî and they are asking for insights from real-world developers and designers to find the best solution.\nThe first approach would expand CSS Grid to include masonry, and the second approach would be to introduce a masonry layout as a display: masonry display type. Jen Simmons summarized what you need to know about the ongoing debate and how you can contribute your thoughts on which direction CSS should take.\nBefore you come to a conclusion, also be sure to read Rachel Andrew‚Äôs post on the topic. She explains why the Chrome team has concerns about implementing a masonry layout as a part of the CSS Grid specification and clarifies what the alternate proposal enables.\nIf you‚Äôd like to dive deeper into CSS, we‚Äôve got your back ‚Äî with a few friendly events and SmashingConfs coming up this year:\nWe‚Äôd be absolutely delighted to welcome you to one of our special Smashing experiences ‚Äî be it online or in person!\nWith our weekly newsletter, we aim to bring you useful, practical tidbits and share some of the helpful things that folks are working on in the web industry. There are so many talented folks out there working on brilliant projects, and we‚Äôd appreciate it if you could help spread the word and give them the credit they deserve!Also, by subscribing, there are no third-party mailings or hidden advertising, and your support really helps us pay the bills. ‚ù§Ô∏è\nInterested in sponsoring? Feel free to check out our partnership options and get in touch with the team anytime ‚Äî they‚Äôll be sure to get back to you as soon as they can."
  },
  {
    "url": "/2024/06/how-hack-google-lighthouse-scores-2024/",
    "title": "How To Hack Your Google Lighthouse Scores In 2024",
    "author": "Salma Alam-Naylor",
    "date": "Jun 11, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Performance",
      "Testing",
      "Tools"
    ],
    "summary": "Do perfect Lighthouse scores mean the performance of your website is perfect? As it turns out, Lighthouse is influenced by a number of things that can be manipulated and bent to make sites seem more performant than they really are, as Salma Alam-Naylor demonstrates in several experiments.",
    "content": "Google Lighthouse has been one of the most effective ways to gamify and promote web page performance among developers. Using Lighthouse, we can assess web pages based on overall performance, accessibility, SEO, and what Google considers ‚Äúbest practices‚Äù, all with the click of a button.\nWe might use these tests to evaluate out-of-the-box performance for front-end frameworks or to celebrate performance improvements gained by some diligent refactoring. And you know you love sharing screenshots of your perfect Lighthouse scores on social media. It‚Äôs a well-deserved badge of honor worthy of a confetti celebration.\nJust the fact that Lighthouse gets developers like us talking about performance is a win. But, whilst I don‚Äôt want to be a party pooper, the truth is that web performance is far more nuanced than this. In this article, we‚Äôll examine how Google Lighthouse calculates its performance scores, and, using this information, we will attempt to ‚Äúhack‚Äù those scores in our favor, all in the name of fun and science ‚Äî because in the end, Lighthouse is simply a good, but rough guide for debugging performance. We‚Äôll have some fun with it and see to what extent we can ‚Äútrick‚Äù Lighthouse into handing out better scores than we may deserve.\nBut first, let‚Äôs talk about data.\nLocal performance testing is a great way to understand if your website performance is trending in the right direction, but it won‚Äôt paint a full picture of reality. The World Wide Web is the Wild West, and collectively, we‚Äôve almost certainly lost track of the variety of device types, internet connection speeds, screen sizes, browsers, and browser versions that people are using to access websites ‚Äî all of which can have an impact on page performance and user experience.\nField data ‚Äî and lots of it ‚Äî collected by an application performance monitoring tool like Sentry from real people using your website on their devices will give you a far more accurate report of your website performance than your lab data collected from a small sample size using a high-spec super-powered dev machine under a set of controlled conditions. Philip Walton reported in 2021 that ‚Äúalmost half of all pages that scored 100 on Lighthouse didn‚Äôt meet the recommended Core Web Vitals thresholds‚Äù based on data from the HTTP Archive.\nWeb performance is more than a single core web vital metric or Lighthouse performance score. What we‚Äôre talking about goes way beyond the type of raw data we‚Äôre working with.\nSpeed is often the first thing that comes up when talking about web performance ‚Äî just how long does a page take to load? This isn‚Äôt the worst thing to measure, but we must bear in mind that speed is probably influenced heavily by business KPIs and sales targets. Google released a report in 2018 suggesting that the probability of bounces increases by 32% if the page load time reaches higher than three seconds, and soars to 123% if the page load time reaches 10 seconds. So, we must conclude that converting more sales requires reducing bounce rates. And to reduce bounce rates, we must make our pages load faster.\nBut what does ‚Äúload faster‚Äù even mean? At some point, we‚Äôre physically incapable of making a web page load any faster. Humans ‚Äî and the servers that connect them ‚Äî are spread around the globe, and modern internet infrastructure can only deliver so many bytes at a time.\nThe bottom line is that page load is not a single moment in time. In an article titled ‚ÄúWhat is speed?‚Äù Google explains that a page load event is:\nThe key word here is experience. Real web performance is less about numbers and speed than it is about how we experience page load and page usability as users. And this segues nicely into a discussion of how Google Lighthouse calculates performance scores. (It‚Äôs much less about pure speed than you might think.)\nThe Google Lighthouse performance score is calculated using a weighted combination of scores based on core web vital metrics (i.e., First Contentful Paint (FCP), Largest Contentful Paint (LCP), Cumulative Layout Shift (CLS)) and other speed-related metrics (i.e., Speed Index (SI) and Total Blocking Time (TBT)) that are observable throughout the page load timeline.\nThis is how the metrics are weighted in the overall score:\nThe weighting assigned to each score gives us insight into how Google prioritizes the different building blocks of a good user experience:\nThe highest weighted metric is Total Blocking Time (TBT), a metric that looks at the total time after the First Contentful Paint (FCP) to help indicate where the main thread may be blocked long enough to prevent speedy responses to user input. The main thread is considered ‚Äúblocked‚Äù any time there‚Äôs a JavaScript task running on the main thread for more than 50ms. Minimizing TBT ensures that a web page responds to physical user input (e.g., key presses, mouse clicks, and so on).\nThe next most weighted Lighthouse metrics are Largest Contentful Paint (LCP) and Cumulative Layout Shift (CLS). LCP marks the point in the page load timeline when the page‚Äôs main content has likely loaded and is therefore useful.\nAt the point where the main content has likely loaded, you also want to maintain visual stability to ensure that users can use the page and are not affected by unexpected visual shifts (CLS). A good LCP score is anything less than 2.5 seconds (which is a lot higher than we might have thought, given we are often trying to make our websites as fast as possible).\nThe First Contentful Paint (FCP) metric marks the first point in the page load timeline where the user can see something on the screen, and the Speed Index (SI) measures how quickly content is visually displayed during page load over time until the page is ‚Äúcomplete‚Äù.\nYour page is scored based on the speed indices of real websites using performance data from the HTTP Archive. A good FCP score is less than 1.8 seconds and a good SI score is less than 3.4 seconds. Both of these thresholds are higher than you might expect when thinking about speed.\nGoogle Lighthouse‚Äôs performance scoring is, without a doubt, less about speed and more about usability. Your SI and FCP could be super quick, but if your LCP takes too long to paint, and if CLS is caused by large images or external content taking some time to load and shifting things visually, then your overall performance score will be lower than if your page was a little slower to render the FCP but didn‚Äôt cause any CLS. Ultimately, if the page is unresponsive due to JavaScript blocking the main thread for more than 50ms, your performance score will suffer more than if the page was a little slow to paint the FCP.\nTo understand more about how the weightings of each metric contribute to the final performance score, you can play about with the sliders on the Lighthouse Scoring Calculator, and here‚Äôs a rudimentary table demonstrating the effect of skewed individual metric weightings on the overall performance score, proving that page usability and responsiveness is favored over raw speed.\nThe overall Google Lighthouse performance score is calculated by converting each raw metric value into a score from 0 to 100 according to where it falls on its Lighthouse scoring distribution, which is a log-normal distribution derived from the performance metrics of real website performance data from the HTTP Archive. There are two main takeaways from this mathematically overloaded information:\nRead more about how metric scores are determined, including a visualization of the log-normal distribution curve on developer.chrome.com.\nI appreciate Google‚Äôs focus on usability over pure speed in the web performance conversation. It urges developers to think less about aiming for raw numbers and more about the real experiences we build. That being said, I‚Äôve wondered whether today in 2024, it‚Äôs possible to fool Google Lighthouse into believing that a bad page in terms of usability and usefulness is actually a great one.\nI put on my lab coat and science goggles to investigate. All tests were conducted:\nThat all being said, I fully acknowledge that my controlled test environment contradicts my advice at the top of this post, but the experiment is an interesting ride nonetheless. What I hope you‚Äôll take away from this is that Lighthouse scores are only one piece ‚Äî and a tiny one at that ‚Äî of a very large and complex web performance puzzle. And, without field data, I‚Äôm not sure any of this matters anyway.\nTL;DR: Show the smallest amount of LCP-qualifying content on load to boost the FCP and LCP scores until the Lighthouse test has likely finished.\nFCP marks the first point in the page load timeline where the user can see anything at all on the screen, while LCP marks the point in the page load timeline when the main page content (i.e., the largest text or image element) has likely loaded. A fast LCP helps reassure the user that the page is useful. ‚ÄúLikely‚Äù and ‚Äúuseful‚Äù are the important words to bear in mind here.\nThe types of elements on a web page considered by Lighthouse for LCP are:\nThe following elements are excluded from LCP consideration due to the likelihood they do not contain useful content:\nHowever, the notion of an image or text element being useful is completely subjective in this case and generally out of the realm of what machine code can reliably determine. For example, I built a page containing nothing but a <h1> element where, after 10 seconds, JavaScript inserts more descriptive text into the DOM and hides the <h1> element.\nLighthouse considers the heading element to be the LCP element in this experiment. At this point, the page load timeline has finished, but the page‚Äôs main content has not loaded, even though Lighthouse thinks it is likely to have loaded within those 10 seconds. Lighthouse still awards us with a perfect score of 100 even if the heading is replaced by a single punctuation mark, such as a full stop, which is even less useful.\nThis test suggests that if you need to load page content via client-side JavaScript, we‚Äòll want to avoid displaying a skeleton loader screen since that requires loading more elements on the page. And since we know the process will take some time ‚Äî and that we can offload the network request from the main thread to a web worker so it won‚Äôt affect the TBT ‚Äî we can use some arbitrary ‚Äúsplash screen‚Äù that contains a minimal viable LCP element (for better FCP scoring). This way, we‚Äôre giving Lighthouse the impression that the page is useful to users quicker than it actually is.\nAll we need to do is include a valid LCP element that contains something that counts as the FCP. While I would never recommend loading your main page content via client-side JavaScript in 2024 (serve static HTML from a CDN instead or build as much of the page as you can on a server), I would definitely not recommend this ‚Äúhack‚Äù for a good user experience, regardless of what the Lighthouse performance score tells you. This approach also won‚Äôt earn you any favors with search engines indexing your site, as the robots are unable to discover the main content while it is absent from the DOM.\nI also tried this experiment with a variety of random images representing the LCP to make the page even less useful. But given that I used small file sizes ‚Äî made smaller and converted into ‚Äúnext-gen‚Äù image formats using a third-party image API to help with page load speed ‚Äî it seemed that Lighthouse interpreted the elements as ‚Äúplaceholder images‚Äù or images with ‚Äúlow entropy‚Äù. As a result, those images were disqualified as LCP elements, which is a good thing and makes the LCP slightly less hackable.\nView the demo page and use Chromium DevTools in an incognito window to see the results yourself.\nThis hack, however, probably won‚Äôt hold up in many other use cases. Discord, for example, uses the ‚Äúsplash screen‚Äù approach when you hard-refresh the app in the browser, and it receives a sad 29 performance score.\nCompared to my DOM-injected demo, the LCP element was calculated as some content behind the splash screen rather than elements contained within the splash screen content itself, given there were one or more large images in the focussed text channel I tested on. One could argue that Lighthouse scores are less important for apps that are behind authentication anyway: they don‚Äôt need to be indexed by search engines.\nThere are likely many other situations where apps serve user-generated content and you might be unable to control the LCP element entirely, particularly regarding images.\nFor example, if you can control the sizes of all the images on your web pages, you might be able to take advantage of an interesting hack or ‚Äúoptimization‚Äù (in very large quotes) to arbitrarily game the system, as was the case of RentPath. In 2021, developers at RentPath managed to improve their Lighthouse performance score by 17 points when increasing the size of image thumbnails on a web page. They convinced Lighthouse to calculate the LCP element as one of the larger thumbnails instead of a Google Map tile on the page, which takes considerably longer to load via JavaScript.\nThe bottom line is that you can gain higher Lighthouse performance scores if you are aware of your LCP element and in control of it, whether that‚Äôs through a hack like RentPath‚Äôs or mine or a real-deal improvement. That being said, whilst I‚Äôve described the splash screen approach as a hack in this post, that doesn‚Äôt mean this type of experience couldn‚Äôt offer a purposeful and joyful experience. Performance and user experience are about understanding what‚Äôs happening during page load, and it‚Äôs also about intent.\nTL;DR: Defer loading content that causes layout shifts until the Lighthouse test has likely finished to make the test think it has enough data. CSS transforms do not negatively impact CLS, except if used in conjunction with new elements added to the DOM.\nCLS is measured on a decimal scale; a good score is less than 0.1, and a poor score is greater than 0.25. Lighthouse calculates CLS from the largest burst of unexpected layout shifts that occur during a user‚Äôs time on the page based on a combination of the viewport size and the movement of unstable elements in the viewport between two rendered frames. Smaller one-off instances of layout shift may be inconsequential, but a bunch of layout shifts happening one after the other will negatively impact your score.\nIf you know your page contains annoying layout shifts on load, you can defer them until after the page load event has been completed, thus fooling Lighthouse into thinking there is no CLS. This demo page I created, for example, earns a CLS score of 0.143 even though JavaScript immediately starts adding new text elements to the page, shifting the original content up. By pausing the JavaScript that adds new nodes to the DOM by an arbitrary five seconds with a setTimeout(), Lighthouse doesn‚Äôt capture the CLS that takes place.\nThis other demo page earns a performance score of 100, even though it is arguably less useful and useable than the last page given that the added elements pop in seemingly at random without any user interaction.\nWhilst it is possible to defer layout shift events for a page load test, this hack definitely won‚Äôt work for field data and user experience over time (which is a more important focal point, as we discussed earlier). If we perform a ‚Äútime span‚Äù test in Lighthouse on the page with deferred layout shifts, Lighthouse will correctly report a non-green CLS score of around 0.186.\nIf you do want to intentionally create a chaotic experience similar to the demo, you can use CSS animations and transforms to more purposefully pop the content into view on the page. In Google‚Äôs guide to CLS, they state that ‚Äúcontent that moves gradually and naturally from one position to another can often help the user better understand what‚Äôs going on and guide them between state changes‚Äù ‚Äî again, highlighting the importance of user experience in context.\nOn this next demo page, I‚Äôm using CSS transform to scale() the text elements from 0 to 1 and move them around the page. The transforms fail to trigger CLS because the text nodes are already in the DOM when the page loads. That said, I did observe in my testing that if the text nodes are added to the DOM programmatically after the page loads via JavaScript and then animated, Lighthouse will indeed detect CLS and score things accordingly.\nThe Speed Index score is based on the visual progress of the page as it loads. The quicker your content loads nearer the beginning of the page load timeline, the better.\nIt is possible to do some hack to trick the Speed Index into thinking a page load timeline is slower than it is. Conversely, there‚Äôs no real way to ‚Äúfake‚Äù loading content faster than it does. The only way to make your Speed Index score better is to optimize your web page for loading as much of the page as possible, as soon as possible. Whilst not entirely realistic in the web landscape of 2024 (mainly because it would put designers out of a job), you could go all-in to lower your Speed Index as much as possible by:\nTBT measures the total time after the FCP where the main thread was blocked by JavaScript tasks for long enough to prevent responses to user input. A good TBT score is anything lower than 200ms.\nJavaScript-heavy web applications (such as single-page applications) that perform complex state calculations and DOM manipulation on the client on page load (rather than on the server before sending rendered HTML) are prone to suffering poor TBT scores. In this case, you could probably hack your TBT score by deferring all JavaScript until after the Lighthouse test has finished. That said, you‚Äôd need to provide some kind of placeholder content or loading screen to satisfy the FCP and LCP and to inform users that something will happen at some point. Plus, you‚Äôd have to go to extra lengths to hack around the front-end framework you‚Äôre using. (You don‚Äôt want to load a placeholder page that, at some point in the page load timeline, loads a separate React app after an arbitrary amount of time!)\nWhat‚Äôs interesting is that while we‚Äôre still doing all sorts of fancy things with JavaScript in the client, advances in the modern web ecosystem are helping us all reduce the probability of a less-than-stellar TBT score. Many front-end frameworks, in partnership with modern hosting providers, are capable of rendering pages and processing complex logic on demand without any client-side JavaScript. While eliminating JavaScript on the client is not the goal, we certainly have a lot of options to use a lot less of it, thus minimizing the risk of doing too much computation on the main thread on page load.\nGoogle Lighthouse can‚Äôt detect everything that‚Äôs wrong with a particular website. Whilst Lighthouse performance scores prioritize page usability in terms of responding to user input, it still can‚Äôt detect every terrible usability or accessibility issue in 2024.\nIn 2019, Manuel Matuzoviƒá published an experiment where he intentionally created a terrible page that Lighthouse thought was pretty great. I hypothesized that five years later, Lighthouse might do better; but it doesn‚Äôt.\nOn this final demo page I put together, input events are disabled by CSS and JavaScript, making the page technically unresponsive to user input. After five seconds, JavaScript flips a switch and allows you to click the button. The page still scores 100 for both performance and accessibility.\nYou really can‚Äôt rely on Lighthouse as a substitute for usability testing and common sense.\nAs with everything in life, there‚Äôs always a way to game the system. Here are some more tried and tested guaranteed hacks to make sure your Lighthouse performance score artificially knocks everyone else‚Äôs out of the park:\nNote: The best way to learn about web performance and how to optimize your websites is to do the complete opposite of everything we‚Äôve covered in this article all of the time. And finally, to seriously level up your performance skills, use an application monitoring tool like Sentry. Think of Lighthouse as the canary and Sentry as the real-deal production-data-capturing, lean, mean, web vitals machine.\nAnd finally-finally, here‚Äôs the link to the full demo site for educational purposes."
  },
  {
    "url": "/2024/06/presenting-ux-research-design-stakeholders/",
    "title": "Presenting UX Research And Design To Stakeholders: The Power Of Persuasion",
    "author": "Victor Yocco",
    "date": "Jun 5, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UX Research",
      "Communication",
      "UX"
    ],
    "summary": "There‚Äôs more to achieving good UX than research and design. We need to effectively communicate our ideas to gain buy-in from key stakeholders. How do we share our findings with diverse audiences in a way that will empower them to make smart UX decisions? How do we generate excitement for improving or enhancing UX? How do we convince various groups of stakeholders our UX team is providing the best direction for moving forward with a design solution? Victor covers how UX practitioners can harness the power of persuasion and other tactics from the field of communication when presenting research findings and design concepts to key stakeholders.",
    "content": "For UX researchers and designers, our journey doesn‚Äôt end with meticulously gathered data or well-crafted design concepts saved on our laptops or in the cloud. Our true impact lies in effectively communicating research findings and design concepts to key stakeholders and securing their buy-in for implementing our user-centered solutions. This is where persuasion and communication theory become powerful tools, empowering UX practitioners to bridge the gap between research and action.\nI shared a framework for conducting UX research in my previous article on infusing communication theory and UX. In this article, I‚Äôll focus on communication and persuasion considerations for presenting our research and design concepts to key stakeholder groups.\nUX professionals can strategically use persuasion techniques to turn complex research results into clear, practical recommendations that stakeholders can understand and act on. It‚Äôs crucial to remember that persuasion is about helping people understand what to do, not tricking them. When stakeholders see the value of designing with the user in mind, they become strong partners in creating products and services that truly meet user needs. We‚Äôre not trying to manipulate anyone; we‚Äôre trying to make sure our ideas get the attention they deserve in a busy world.\nThe Hovland-Yale model, a framework for understanding how persuasion works, was developed by Carl Hovland and his team at Yale University in the 1950s. Their research was inspired by World War II propaganda, as they wanted to figure out what made some messages more convincing than others.\nIn the Hovland-Yale model, persuasion is understood as a process involving the Independent variables of Source, Message, and Audience. The elements of each factor then lead to the Audience having internal mediating processes around the topic, which, if independent variables are strong enough, can strengthen or change attitudes or behaviors. The interplay of the internal mediating processes leads to persuasion or not, which then leads to the observable effect of the communication (or not, if the message is ineffective). The model proposes that if these elements are carefully crafted and applied, the intended change in attitude or behavior (Effect) is more likely to be successful.\nThe diagram below helps identify the parts of persuasive communication. It shows what you can control as a presenter, how people think about the message and the impact it has. If done well, it can lead to change. I‚Äôll focus exclusively on the independent variables in the far left side of the diagram in this article because, theoretically, this is what you, as the outside source creating a persuasive message, are in control of and, if done well, would lead to the appropriate mediating processes and desired observable effects.\nEffective communication can reinforce currently held positions. You don‚Äôt always need to change minds when presenting research; much of what we find and present might align with currently held beliefs and support actions our stakeholders are already considering.\nOver the years, researchers have explored the usefulness and limitations of this model in various contexts. I‚Äôve provided a list of citations at the end of this article if you are interested in exploring academic literature on the Hovland-Yale model. Reflecting on some of the research findings can help shape how we create and deliver our persuasive communication. Some consistent from academia highlight that:\nI‚Äôll cover the impact of each of these bullets on UX research and design presentations in the relevant sections below.\nIt‚Äôs important to note that while the Hovland-Yale model provides valuable insight into persuasive communication, it remains a simplification of a complex process. Actual attitude change and decision-making can be influenced by a multitude of other factors not covered in this model, like emotional states, group dynamics, and more, necessitating a multi-faceted approach to persuasion. However, the model provides a manageable framework to strengthen the communication of UX research findings, with a focus on elements that are within the control of the researcher and product team. I‚Äôll break down the process of presenting findings to various audiences in the following section.\nLet‚Äôs move into applying the models to our work as UX practitioners with a focus on how the model applies to how we prepare and present our findings to various stakeholders. You can reference the diagram above as needed as we move through the Independent variables.\nLet‚Äôs break down the key parts of the Hovland-Yale model and see how we can use them when presenting our UX research and design ideas.\nRevised: The Hovland-Yale model stresses that where a message comes from greatly affects how believable and effective it is. Research shows that a convincing source needs to be seen as dependable, informed, and trustworthy. In UX research, this source is usually the researcher(s) and other UX team members who present findings, suggest actions, lead workshops, and share design ideas. It‚Äôs crucial for the UX team to build trust with their audience, which often includes users, stakeholders, and designers.\nYou can demonstrate and strengthen your credibility throughout the research process and once again when presenting your findings.\nYou should start building your expertise and credibility before you even finish your research. Often, stakeholders will have already formed an opinion about your work before you even walk into the room. Here are a couple of ways to boost your reputation before or at the beginning of a project:\nCase Studies\nA well-written case study about your past work can be a great way to show stakeholders the benefits of user-centered design. Make sure your case studies match what your stakeholders care about. Don‚Äôt just tell an interesting story; tell a story that matters to them. Understand their priorities and tailor your case study to show how your UX work has helped achieve goals like higher ROI, happier customers, or lower turnover. Share these case studies as a document before the project starts so stakeholders can review them and get a positive impression of your work.\nThought Leadership\nSharing insights and expertise that your UX team has developed is another way to build credibility. This kind of ‚Äúthought leadership‚Äù can establish your team as the experts in your field. It can take many forms, like blog posts, articles in industry publications, white papers, presentations, podcasts, or videos. You can share this content on your website, social media, or directly with stakeholders.\nFor example, if you‚Äôre about to start a project on gathering customer feedback, share any relevant articles or guides your team has created with your stakeholders before the project kickoff. If you are about to start developing a voice of the customer program and you happen to have Victor or Dana on your team, share their article on creating a VoC to your group of stakeholders prior to the kickoff meeting. [Shameless self-promotion and a big smile emoji].\nYou can also build credibility and trust while discussing your research and design, both during the project and when you present your final results.\nBusiness Goals Alignment\nTo really connect with stakeholders, make sure your UX goals and the company‚Äôs business goals work together. Always tie your research findings and design ideas back to the bigger picture. This means showing how your work can affect things like customer happiness, more sales, lower costs, or other important business measures. You can even work with stakeholders to figure out which measures matter most to them. When you present your designs, point out how they‚Äôll help the company reach its goals through good UX.\nIndustry Benchmarks\nThese days, it‚Äôs easier to find data on how other companies in your industry are doing. Use this to your advantage! Compare your findings to these benchmarks or even to your competitors. This can help stakeholders feel more confident in your work. Show them how your research fits in with industry trends or how it uncovers new ways to stand out. When you talk about your designs, highlight how you‚Äôve used industry best practices or made changes based on what you‚Äôve learned from users.\nMethodological Transparency\nBe open and honest about how you did your research. This shows you know what you‚Äôre doing and that you can be trusted. For example, if you were looking into why fewer people are renewing their subscriptions to a fitness app, explain how you planned your research, who you talked to, how you analyzed the data, and any challenges you faced. This transparency helps people accept your research results and builds trust.\nHere are some specific ways to make your design concepts more believable and trustworthy to stakeholders:\nGround Yourself in Research. You‚Äôve done the research, so use it! Make sure your design decisions are based on your findings and user data. When you present, highlight the data that supports your choices.\nGo Beyond Mockups. It‚Äôs helpful for stakeholders to see your designs in action. Static mockups are a good start, but try creating interactive prototypes that show how users will move through and use your design. This is especially important if you‚Äôre creating something new that stakeholders might have trouble visualizing.\nUser Quotes and Testimonials. Include quotes or stories from users in your presentation. This makes the process more personal and shows that you‚Äôre focused on user needs. You can use these quotes to explain specific design choices.\nBefore & After Impact. Use visuals or user journey maps to show how your design solution improves the user experience. If you‚Äôve mapped out the current user journey or documented existing problems, show how your new design fixes those problems. Don‚Äôt leave stakeholders guessing about your design choices. Briefly explain why you made key decisions and how they help users or achieve business goals. You should have research and stakeholder input to back up your decisions.\nShow Your Process. When presenting a more developed concept, show the work that led up to it. Don‚Äôt just share the final product. Include early sketches, wireframes, or simple prototypes to show how the design evolved and the reasoning behind your choices. This is especially helpful for executives or stakeholders who haven‚Äôt been involved in the whole process.\nBe Open to Feedback and Iteration. Work together with stakeholders. Show that you‚Äôre open to their feedback and explain how their input can help you improve your designs.\nMuch of what I‚Äôve covered above are also general best practices for presenting. Remember, these are just suggestions. You don‚Äôt have to use every single one to make your presentations more persuasive. Try different things, see what works best for you and your stakeholders, and have fun with it! The goal is to build trust and credibility with your UX team.\nThe Hovland-Yale model, along with most other communication models, suggests that what you communicate is just as important as how you communicate it. In UX research, your message is usually your insights, data analysis, findings, and recommendations.\nI‚Äôve touched on this in the previous section because it‚Äôs hard to separate the source (who‚Äôs talking) from the message (what they‚Äôre saying). For example, building trust involves being transparent about your research methods, which is part of your message. So, some of what I‚Äôm about to say might sound familiar.\nFor this article, let‚Äôs define the message as your research findings and everything that goes with them (e.g., what you say in your presentation, the slides you use, other media), as well as your design concepts (how you show your design solutions, including drawings, wireframes, prototypes, and so on).\nThe Hovland-Yale model says it‚Äôs important to make your message easy to understand, relevant, and impactful. For example, instead of just saying,\nyou could say,\nStorytelling is also a powerful way to get your message across. Weaving your findings into a narrative helps people connect with your data on a human level and remember your key points. Using real quotes or stories from users makes your presentation even more compelling.\nHere are some other tips for delivering a persuasive message:\nWhen presenting design concepts, it‚Äôs important to tell, not just show, what you‚Äôre proposing. Stakeholders might not have a deep understanding of UX, so just showing them screenshots might not be enough. Use user stories to walk them through the redesigned experience. This helps them understand how users will interact with your design and what benefits it will bring. Static screens show the ‚Äúwhat,‚Äù but user stories reveal the ‚Äúwhy‚Äù and ‚Äúhow.‚Äù By focusing on the user journey, you can demonstrate how your design solves problems and improves the overall experience.\nFor example, if you‚Äôre suggesting changes to the search bar and adding tooltips, you could say:\nHere are some other ways to make your design concepts clearer and more persuasive:\nOne final note on the message is that research has found the likelihood of an audience‚Äôs attitude change is also dependent on the channel of communication. Mass media is found to be less effective in changing attitudes than face-to-face communication. Distributed teams and remote employees can employ several strategies to compensate for any potential impact reduction of asynchronous communication:\nThe way you frame an issue can greatly influence how stakeholders see it. Framing is a persuasion technique that can help your message resonate more deeply with specific stakeholders. Essentially, you want to frame your message in a way that aligns with your stakeholders‚Äô attitudes and values and presents your solution as the next logical step. There are many resources on how to frame messages, as this technique has been used often in public safety and public health research to encourage behavior change. This article discusses applying framing techniques for digital design.\nYou can also frame issues in a way that motivates your stakeholders. For example, instead of calling usability issues ‚Äúproblems,‚Äù I like to call them ‚Äúopportunities.‚Äù This emphasizes the potential for improvement. Let‚Äôs say your research on a hospital website finds that the appointment booking process is confusing. You could frame this as an opportunity to improve patient satisfaction and maybe even reduce call center volume by creating a simpler online booking system. This way, your solution is a win-win for both patients and the hospital. Highlighting the positive outcomes of your proposed changes and using language that focuses on business benefits and user satisfaction can make a big difference.\nUnderstanding your audience‚Äôs goals is essential before embarking on any research or design project. It serves as the foundation for tailoring content, supporting decision-making processes, ensuring clarity and focus, enhancing communication effectiveness, and establishing metrics for evaluation.\nOne specific aspect to consider is securing buy-in from the product and delivery teams prior to beginning any research or design. Without their investment in the outcomes and input on the process, it can be challenging to find stakeholders who see value in a project you created in a vacuum. Engaging with these teams early on helps align expectations, foster collaboration, and ensure that the research and design efforts are informed by the organization‚Äôs objectives.\nOnce you‚Äôve identified your key stakeholders and secured buy-in, you should then Map the Decision-Making Process or understand the decision-making process your audience goes through, including the pain points, considerations, and influencing factors.\nUnderstanding the decision-making process will enable you to provide the necessary information and support at each stage.\nFinally, prior to engaging in any work, set clear objectives with your key stakeholders. Your UX team needs to collaborate with the product and delivery teams to establish clear objectives for the research or design project. These objectives should align with the organization‚Äôs goals and the audience‚Äôs needs.\nBy understanding your audience‚Äôs goals and involving the product and delivery teams from the outset, you can create research and design outcomes that are relevant, impactful, and aligned with the organization‚Äôs objectives.\nAs the source of your message, it‚Äôs your job to understand who you‚Äôre talking to and how they see the issue. Different stakeholders have different interests, goals, and levels of knowledge. It‚Äôs important to tailor your communication to each of these perspectives. Adjust your language, what you emphasize, and the complexity of your message to suit your audience. Technical jargon might be fine for technical stakeholders, but it could alienate those without a technical background.\nRemember, your audience‚Äôs existing opinions, intelligence, and self-esteem play a big role in how persuasive you can be. Research suggests that people with higher intelligence tend to be more resistant to persuasion, while those with moderate self-esteem are easier to persuade than those with very low or very high self-esteem. Understanding your audience is key to giving a persuasive presentation of your UX research and design concepts. Tailoring your communication to address the specific concerns and interests of your stakeholders can significantly increase the impact of your findings.\nTo truly know your audience, you need information about who you‚Äôll be presenting to, and the more you know, the better. At the very least, you should identify the different groups of stakeholders in your audience. This could include designers, developers, product managers, and executives. If possible, try to learn more about your key stakeholders. You could interview them at the beginning of your process, or you could give them a short survey to gauge their attitudes and behaviors toward the area your UX team is exploring.\nThen, your UX team needs to decide the following:\nYour answers to the previous questions will help you focus on what matters most to each stakeholder group. For example, designers might be more interested in usability issues, while executives might care more about the business impact. If you‚Äôre presenting to a mixed audience, include a mix of information and be ready to highlight what‚Äôs relevant to each group in a way that grabs their attention. Adapt your communication style to match each group‚Äôs preferences. Provide technical details for developers and emphasize user experience benefits for executives.\nLet‚Äôs say you did UX research for a mobile banking app, and your audience includes designers, developers, and product managers.\nDesigners:\nDevelopers:\nProduct Managers:\nThe end goal of presenting your findings and design concepts is to get key stakeholders to take action based on what you learned from users. Make sure the impact of your research is crystal clear. Talk about how your findings relate to business goals, customer happiness, and market success (if those are relevant to your product). Suggest clear, actionable next steps in the form of design concepts and encourage feedback and collaboration from stakeholders. This builds excitement and gets people invested. Make sure to answer any questions and ask for more feedback to show that you value their input. Remember, stakeholders play a big role in the product‚Äôs future, so getting them involved increases the value of your research.\nYour audience needs to know what you want them to do. End your presentation with a strong call to action (CTA). But to do this well, you need to be clear on what you want them to do and understand any limitations they might have.\nFor example, if you‚Äôre presenting to the CEO, tailor your CTA to their priorities. Focus on the return on investment (ROI) of user-centered design. Show how your recommendations can increase sales, improve customer satisfaction, or give the company a competitive edge. Use clear visuals and explain how user needs translate into business benefits. End with a strong, action-oriented statement, like\nIf you‚Äôre presenting to product managers and business unit leaders, focus on the business goals they care about, like increasing revenue or reducing customer churn. Explain your research findings in terms of ROI. For example, a strong CTA could be:\nRemember, the effects of persuasive messages can fade over time, especially if the source isn‚Äôt seen as credible. This means you need to keep reinforcing your message to maintain its impact.\nPersuasion is about guiding understanding, not tricking people. Be upfront about any limitations your audience might have, like budget constraints or limited development resources. Anticipate their concerns and address them in your CTA. For example, you could say,\nBy considering both your desired outcome and your audience‚Äôs perspective, you can create a clear, compelling, and actionable CTA that resonates with stakeholders and drives user-centered design decisions.\nFinally, remember that presenting your research findings and design concepts isn‚Äôt the end of the road. The effects of persuasive messages can fade over time. Your team should keep looking for ways to reinforce key messages and decisions as you move forward with implementing solutions. Keep your presentations and concepts in a shared folder, remind people of the reasoning behind decisions, and be flexible if there are multiple ways to achieve the desired outcome. Showing how you‚Äôve addressed stakeholder goals and concerns in your solution will go a long way in maintaining credibility and trust for future projects.\nYou and your UX team are likely already incorporating elements of persuasion into your work. It might be helpful to track how you are doing this to reflect on what works, what doesn‚Äôt, and where there are gaps. I‚Äôve provided a spreadsheet in Figure 3 below for you to modify and use as you might see fit. I‚Äôve included sample data to provide an example of what type of information you might want to record. You can set up the structure of a spreadsheet like this as you think about kicking off your next project, or you can fill it in with information from a recently completed project and reflect on what you can incorporate more in the future.\nPlease use the spreadsheet below as a suggestion and make additions, deletions, or changes as best suited to meet your needs. You don‚Äôt need to be dogmatic in adhering to what I‚Äôve covered here. Experiment, find what works best for you, and have fun.\nFigure 3: Example of spreadsheet categories to track the application of the Hovland-Yale model to your presentation of UX Research findings.\nFoundational Works\nContemporary Applications"
  },
  {
    "url": "/2024/06/scaling-success-key-insights-pratical-takeaways/",
    "title": "Scaling Success: Key Insights And Practical Takeaways",
    "author": "Addy Osmani",
    "date": "Jun 4, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Smashing Books",
      "Performance",
      "Accessibility",
      "Workflow"
    ],
    "summary": "The web is still a young platform, and we‚Äôre only now beginning to recognize what ‚Äúsuccess‚Äù looks like for large projects. In his recent Smashing book, Success at Scale, Addy Osmani presents practical case studies featuring the web‚Äôs most renowned companies and their efforts to make big changes to existing apps and sites. In this article, Addy shows some of the key insights he has learned.",
    "content": "Building successful web products at scale is a multifaceted challenge that demands a combination of technical expertise, strategic decision-making, and a growth-oriented mindset. In Success at Scale, I dive into case studies from some of the web‚Äôs most renowned products, uncovering the strategies and philosophies that propelled them to the forefront of their industries.\nHere you will find some of the insights I‚Äôve gleaned from these success stories, part of an ongoing effort to build a roadmap for teams striving to achieve scalable success in the ever-evolving digital landscape.\nThe foundation of scaling success lies in fostering the right mindset within your team. The case studies in Success at Scale highlight several critical mindsets that permeate the culture of successful organizations.\nThey invest in understanding their users‚Äô needs, behaviors, and pain points and relentlessly strive to deliver value. Instagram‚Äôs performance optimization journey exemplifies this mindset, focusing on improving perceived speed and reducing user frustration, leading to significant gains in engagement and retention.\nBy placing the user at the center of every decision, Instagram was able to identify and prioritize the most impactful optimizations, such as preloading critical resources and leveraging adaptive loading strategies. This user-centric approach allowed them to deliver a seamless and delightful experience to their vast user base, even as their platform grew in complexity.\nTeams must embrace a data-driven approach, leveraging metrics and analytics to guide their decisions and measure impact. Shopify‚Äôs UI performance improvements showcase the power of data-driven optimization, using detailed profiling and user data to prioritize efforts and drive meaningful results.\nBy analyzing user interactions, identifying performance bottlenecks, and continuously monitoring key metrics, Shopify was able to make informed decisions that directly improved the user experience. This data-driven mindset allowed them to allocate resources effectively, focusing on the areas that yielded the greatest impact on performance and user satisfaction.\nSuccessful teams foster a culture of continuous improvement, constantly seeking opportunities to optimize and refine their products. Smashing Magazine‚Äôs case study on enhancing Core Web Vitals demonstrates the impact of iterative enhancements, leading to significant performance gains and improved user satisfaction.\nBy regularly assessing their performance metrics, identifying areas for improvement, and implementing incremental optimizations, Smashing Magazine was able to continuously elevate the user experience. This mindset of continuous improvement ensures that the product remains fast, reliable, and responsive to user needs, even as it scales in complexity and user base.\nHigh-performing teams promote collaboration and inclusivity, ensuring that diverse perspectives are valued and leveraged. The Understood‚Äôs accessibility journey highlights the power of cross-functional collaboration, with designers, developers, and accessibility experts working together to create inclusive experiences for all users.\nBy fostering open communication, knowledge sharing, and a shared commitment to accessibility, The Understood was able to embed inclusive design practices throughout its development process. This collaborative and inclusive approach not only resulted in a more accessible product but also cultivated a culture of empathy and user-centricity that permeated all aspects of their work.\nBeyond cultivating the right mindset, scaling success requires making strategic decisions that lay the foundation for sustainable growth.\nSelecting the right technologies and frameworks can significantly impact scalability. Factors like performance, maintainability, and developer experience should be carefully considered. Notion‚Äôs migration to Next.js exemplifies the importance of choosing a technology stack that aligns with long-term scalability goals.\nBy adopting Next.js, Notion was able to leverage its performance optimizations, such as server-side rendering and efficient code splitting, to deliver fast and responsive pages. Additionally, the developer-friendly ecosystem of Next.js and its strong community support enabled Notion‚Äôs team to focus on building features and optimizing the user experience rather than grappling with low-level infrastructure concerns. This strategic technology choice laid the foundation for Notion‚Äôs scalable and maintainable architecture.\nThis best practice is so important when we want to ensure that pages load fast without over-eagerly delivering JavaScript a user may not need at that time. For example, Instagram made a concerted effort to improve the web performance of instagram.com, resulting in a nearly 50% cumulative improvement in feed page load time. A key area of focus has been shipping less JavaScript code to users, particularly on the critical rendering path.\nThe Instagram team found that the uncompressed size of JavaScript is more important for performance than the compressed size, as larger uncompressed bundles take more time to parse and execute on the client, especially on mobile devices. Two optimizations they implemented to reduce JS parse/execute time were inline requires (only executing code when it‚Äôs first used vs. eagerly on initial load) and serving ES2017+ code to modern browsers to avoid transpilation overhead. Inline requires improved Time-to-Interactive metrics by 12%, and the ES2017+ bundle was 5.7% smaller and 3% faster than the transpiled version.\nWhile good progress has been made, the Instagram team acknowledges there are still many opportunities for further optimization. Potential areas to explore could include the following:\nContinued efforts will be needed to keep instagram.com performing well as new features are added and the product grows in complexity.\nWix‚Äôs comprehensive approach to accessibility, encompassing keyboard navigation, screen reader support, and infrastructure for future development, showcases the importance of building inclusivity into the product‚Äôs core.\nBy considering accessibility requirements from the initial design stages and involving accessibility experts throughout the development process, Wix was able to create a platform that empowered its users to build accessible websites. This holistic approach to accessibility not only benefited end-users but also positioned Wix as a leader in inclusive web design, attracting a wider user base and fostering a culture of empathy and inclusivity within the organization.\nApideck‚Äôs case study in the book highlights the impact of a great developer experience on community building and product velocity.\nBy providing well-documented APIs, intuitive SDKs, and comprehensive developer resources, Apideck was able to cultivate a thriving developer community. This investment in developer experience not only made it easier for developers to integrate with Apideck‚Äôs platform but also fostered a sense of collaboration and knowledge sharing within the community. As a result, ApiDeck was able to accelerate product development, leverage community contributions, and continuously improve its offering based on developer feedback.\nAchieving optimal performance is a critical aspect of scaling success. The case studies in Success at Scale showcase various performance optimization techniques that have proven effective.\nBuilding resilient web experiences that perform well across a range of devices and network conditions requires a progressive enhancement approach. Pinafore‚Äôs case study in Success at Scale highlights the benefits of ensuring core functionality remains accessible even in low-bandwidth or JavaScript-constrained environments.\nBy leveraging server-side rendering and delivering a usable experience even when JavaScript fails to load, Pinafore demonstrates the importance of progressive enhancement. This approach not only improves performance and resilience but also ensures that the application remains accessible to a wider range of users, including those with older devices or limited connectivity. By gracefully degrading functionality in constrained environments, Pinafore provides a reliable and inclusive experience for all users.\nThe book‚Äôs case study on Tinder highlights the power of sophisticated adaptive loading strategies. By dynamically adjusting the content and resources delivered based on the user‚Äôs device capabilities and network conditions, Tinder ensures a seamless experience across a wide range of devices and connectivity scenarios. Tinder‚Äôs adaptive loading approach involves techniques like dynamic code splitting, conditional resource loading, and real-time network quality detection. This allows the application to optimize the delivery of critical resources, prioritize essential content, and minimize the impact of poor network conditions on the user experience.\nBy adapting to the user‚Äôs context, Tinder delivers a fast and responsive experience, even in challenging environments.\nEffective management of resources, such as images and third-party scripts, can significantly impact performance. eBay‚Äôs journey showcases the importance of optimizing image delivery, leveraging techniques like lazy loading and responsive images to reduce page weight and improve load times.\nBy implementing lazy loading, eBay ensures that images are only loaded when they are likely to be viewed by the user, reducing initial page load time and conserving bandwidth. Additionally, by serving appropriately sized images based on the user‚Äôs device and screen size, eBay minimizes the transfer of unnecessary data and improves the overall loading performance. These resource management optimizations, combined with other techniques like caching and CDN utilization, enable eBay to deliver a fast and efficient experience to its global user base.\nRegularly monitoring and analyzing performance metrics is crucial for identifying bottlenecks and opportunities for optimization. The case study on Yahoo! Japan News demonstrates the impact of continuous performance monitoring, using tools like Lighthouse and real user monitoring to identify and address performance issues proactively.\nBy establishing a performance monitoring infrastructure, Yahoo! Japan News gains visibility into the real-world performance experienced by their users. This data-driven approach allows them to identify performance regression, pinpoint specific areas for improvement, and measure the impact of their optimizations. Continuous monitoring also enables Yahoo! Japan News to set performance baselines, track progress over time, and ensure that performance remains a top priority as the application evolves.\nCreating inclusive web experiences that cater to diverse user needs is not only an ethical imperative but also a critical factor in scaling success. The case studies in Success at Scale emphasize the importance of accessibility and inclusive design.\nEnsuring accessibility requires a combination of automated testing tools and manual evaluation. LinkedIn‚Äôs approach to automated accessibility testing demonstrates the value of integrating accessibility checks into the development workflow, catching potential issues early, and reducing the reliance on manual testing alone.\nBy leveraging tools like Deque‚Äôs axe and integrating accessibility tests into their continuous integration pipeline, LinkedIn can identify and address accessibility issues before they reach production. This proactive approach to accessibility testing not only improves the overall accessibility of the platform but also reduces the cost and effort associated with retroactive fixes. However, LinkedIn also recognizes the importance of manual testing and user feedback in uncovering complex accessibility issues that automated tools may miss. By combining automated checks with manual evaluation, LinkedIn ensures a comprehensive approach to accessibility testing.\nDesigning with accessibility in mind from the outset leads to more inclusive and usable products. Success With Scale\\‚Äôs case study on Intercom about creating an accessible messenger highlights the importance of considering diverse user needs, such as keyboard navigation and screen reader compatibility, throughout the design process.\nBy embracing inclusive design principles, Intercom ensures that their messenger is usable by a wide range of users, including those with visual, motor, or cognitive impairments. This involves considering factors such as color contrast, font legibility, focus management, and clear labeling of interactive elements. By designing with empathy and understanding the diverse needs of their users, Intercom creates a messenger experience that is intuitive, accessible, and inclusive. This approach not only benefits users with disabilities but also leads to a more user-friendly and resilient product overall.\nEngaging with users with disabilities and incorporating their feedback is essential for creating truly inclusive experiences. The Understood‚Äôs journey emphasizes the value of user research and collaboration with accessibility experts to identify and address accessibility barriers effectively.\nBy conducting usability studies with users who have diverse abilities and working closely with accessibility consultants, The Understood gains invaluable insights into the real-world challenges faced by their users. This user-centered approach allows them to identify pain points, gather feedback on proposed solutions, and iteratively improve the accessibility of their platform.\nPromoting accessibility as a shared responsibility across the organization fosters a culture of inclusivity. Shopify‚Äôs case study underscores the importance of educating and empowering teams to prioritize accessibility, recognizing it as a fundamental aspect of the user experience rather than a mere technical checkbox.\nBy providing accessibility training, guidelines, and resources to designers, developers, and content creators, Shopify ensures that accessibility is considered at every stage of the product development lifecycle. This shared responsibility approach helps to build accessibility into the core of Shopify‚Äôs products and fosters a culture of inclusivity and empathy. By making accessibility everyone‚Äôs responsibility, Shopify not only improves the usability of their platform but also sets an example for the wider industry on the importance of inclusive design.\nScaling success requires a culture that promotes collaboration, knowledge sharing, and continuous learning. The case studies in Success at Scale highlight the impact of effective collaboration and knowledge management practices.\nBreaking down silos and fostering cross-functional collaboration accelerates problem-solving and innovation. Airbnb‚Äôs design system journey showcases the power of collaboration between design and engineering teams, leading to a cohesive and scalable design language across web and mobile platforms.\nBy establishing a shared language and a set of reusable components, Airbnb‚Äôs design system enables designers and developers to work together more efficiently. Regular collaboration sessions, such as design critiques and code reviews, help to align both teams and ensure that the design system evolves in a way that meets the needs of all stakeholders. This cross-functional approach not only improves the consistency and quality of the user experience but also accelerates the development process by reducing duplication of effort and promoting code reuse.\nCapturing and sharing knowledge across the organization is crucial for maintaining consistency and enabling the efficient onboarding of new team members. Stripe‚Äôs investment in internal frameworks and documentation exemplifies the value of creating a shared understanding and facilitating knowledge transfer.\nBy maintaining comprehensive documentation, code examples, and best practices, Stripe ensures that developers can quickly grasp the intricacies of their internal tools and frameworks. This documentation-driven culture not only reduces the learning curve for new hires but also promotes consistency and adherence to established patterns and practices. Regular knowledge-sharing sessions, such as tech talks and lunch-and-learns, further reinforce this culture of learning and collaboration, enabling team members to learn from each other‚Äôs experiences and stay up-to-date with the latest developments.\nEstablishing communities of practice around specific domains, such as accessibility or performance, promotes knowledge sharing and continuous improvement. Shopify‚Äôs accessibility guild demonstrates the impact of creating a dedicated space for experts and advocates to collaborate, share best practices, and drive accessibility initiatives forward.\nBy bringing together individuals passionate about accessibility from across the organization, Shopify‚Äôs accessibility guild fosters a sense of community and collective ownership. Regular meetings, workshops, and hackathons provide opportunities for members to share their knowledge, discuss challenges, and collaborate on solutions. This community-driven approach not only accelerates the adoption of accessibility best practices but also helps to build a culture of inclusivity and empathy throughout the organization.\nCollaborating with the wider developer community and leveraging open-source solutions can accelerate development and provide valuable insights. Pinafore‚Äôs journey highlights the benefits of engaging with accessibility experts and incorporating their feedback to create a more inclusive and accessible web experience.\nBy actively seeking input from the accessibility community and leveraging open-source accessibility tools and libraries, Pinafore was able to identify and address accessibility issues more effectively. This collaborative approach not only improved the accessibility of the application but also contributed back to the wider community by sharing their learnings and experiences. By embracing open-source collaboration and learning from external experts, teams can accelerate their own accessibility efforts and contribute to the collective knowledge of the industry.\nAchieving scalable success in the web development landscape requires a multifaceted approach that encompasses the right mindset, strategic decision-making, and continuous learning. The Success at Scale book provides a comprehensive exploration of these elements, offering deep insights and practical guidance for teams at all stages of their scaling journey.\nBy cultivating a user-centric, data-driven, and inclusive mindset, teams can prioritize the needs of their users and make informed decisions that drive meaningful results. Adopting a culture of continuous improvement and collaboration ensures that teams are always striving to optimize and refine their products, leveraging the collective knowledge and expertise of their members.\nMaking strategic technology choices, such as selecting performance-oriented frameworks and investing in developer experience, lays the foundation for scalable and maintainable architectures. Implementing performance optimization techniques, such as adaptive loading, efficient resource management, and continuous monitoring, helps teams deliver fast and responsive experiences to their users.\nEmbracing accessibility and inclusive design practices not only ensures that products are usable by a wide range of users but also fosters a culture of empathy and user-centricity. By incorporating accessibility testing, inclusive design principles, and user feedback into the development process, teams can create products that are both technically sound and meaningfully inclusive.\nFostering a culture of collaboration, knowledge sharing, and continuous learning is essential for scaling success. By breaking down silos, promoting cross-functional collaboration, and investing in documentation and communities of practice, teams can accelerate problem-solving, drive innovation, and build a shared understanding of their products and practices.\nThe case studies featured in Success at Scale serve as powerful examples of how these principles and strategies can be applied in real-world contexts. By learning from the successes and challenges of industry leaders, teams can gain valuable insights and inspiration for their own scaling journeys.\nAs you embark on your path to scaling success, remember that it is an ongoing process of iteration, learning, and adaptation. Embrace the mindsets and strategies outlined in this article, dive deeper into the learnings from the Success at Scale book, and continually refine your approach based on the unique needs of your users and the evolving landscape of web development.\nScaling successful web products requires a holistic approach that combines technical excellence, strategic decision-making, and a growth-oriented mindset. By learning from the experiences of industry leaders, as showcased in the Success at Scale book, teams can gain valuable insights and practical guidance on their journey towards sustainable success.\nCultivating a user-centric, data-driven, and inclusive mindset lays the foundation for scalability. By prioritizing the needs of users, making informed decisions based on data, and fostering a culture of continuous improvement and collaboration, teams can create products that deliver meaningful value and drive long-term growth.\nMaking strategic decisions around technology choices, performance optimization, accessibility integration, and developer experience investment sets the stage for scalable and maintainable architectures. By leveraging proven optimization techniques, embracing inclusive design practices, and investing in the tools and processes that empower developers, teams can build products that are fast and resilient.\nThrough ongoing collaboration, knowledge sharing, and a commitment to learning, teams can navigate the complexities of scaling success and create products that make a lasting impact in the digital landscape.\nIn an effort to conserve resources here at Smashing, we‚Äôre trying something new with Success at Scale. The printed book is 304 pages, and we make an expanded PDF version available to everyone who purchases a print book. This accomplishes a few good things:\nSmashing Books have always been printed with materials from FSC Certified forests. We are committed to finding new ways to conserve resources while still bringing you the best possible reading experience.\nProducing a book takes quite a bit of time, and we couldn‚Äôt pull it off without the support of our wonderful community. A huge shout-out to Smashing Members for the kind, ongoing support. The eBook is and always will be free for Smashing Members. Plus, Members get a friendly discount when purchasing their printed copy. Just sayin‚Äô! ;-)\nPromoting best practices and providing you with practical tips to master your daily coding and design challenges has always been (and will be) at the core of everything we do at Smashing.\nIn the past few years, we were very lucky to have worked together with some talented, caring people from the web community to publish their wealth of experience as printed books that stand the test of time. Heather and Steven are two of these people. Have you checked out their books already?"
  },
  {
    "url": "/2024/05/in-praise-of-the-basics/",
    "title": "In Praise Of The Basics",
    "author": "Geoff Graham",
    "date": "May 30, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "CSS",
      "HTML",
      "Inspiration",
      "Career"
    ],
    "summary": "What does it mean to learn the ‚Äúbasics‚Äù, or fundamentals, of front-end web development? Is starting with HTML and CSS still the best entry point to learn how to make websites and apps when we have a seemingly endless supply of frameworks that abstract those building blocks with their own opinions and syntax flavors? Geoff Graham thinks so and discusses why you might consider going ‚Äúback to basics‚Äù to start or move forward in your career.",
    "content": "Lately, I‚Äôve been thinking about the basics of web development. Actually, I‚Äôve been thinking about them for some time now, at least since I started teaching beginning web development in 2020.\nI‚Äôm fascinated by the basics. They‚Äôre an unsung hero, really, as there is no developer worth their salt who would be where they are without them. Yet, they often go unnoticed.\nYou might even think of them as the vegetable side on your dinner plate ‚Äî wholesome but perhaps bland without the right seasoning.\nWho needs the basics of HTML and CSS, some say, when we have tools that abstract the way they‚Äôre written and managed? We now have site builders that require no technical knowledge. We have frameworks with enough syntactic sugar to give your development chops a case of cavities. We have libraries packed with any number of pre-established patterns that can be copy-pasted without breaking a sweat. The need to ‚Äúlearn‚Äù the basics of HTML and CSS is effectively null when the number of tools that exist to supplant them is enough to fill a small galaxy of stars.\nRachel Andrew wrote one of my all-time favorite posts back in 2019, equating the rise of abstractions with an increase in complexity and a profound loss of inroads for others to enter the web development field:\nThere‚Äôs no moment more profound in my web development career than the time I changed the background color of a page from default white to some color value I can‚Äôt remember (but know for a fact it would never be dodgerblue). That, and my personal ‚Äúa-ha!‚Äù moment when realizing that everything in CSS is a box. Nothing guided me with the exception of ‚ÄúView Source,‚Äù and I‚Äôd bet the melting Chapstick in my pocket that you‚Äôre the same if you came up around the turn of the 21st century.\nWhere do you go to learn HTML and CSS these days? Even now, there are few dedicated secondary education programs (or scholarships, for that matter) to consider. We didn‚Äôt have bootcamps back in the day, but you don‚Äôt have to toss a virtual stone across many pixels to find one today.\nThere are excellent and/or free tutorials, too. Here, I‚Äôll link a few of ‚Äôem up for you:\nLet‚Äôs not even get into the number of YouTube tutorials. But if you do, no one beats Kevin‚Äôs incredible archive of recorded gems.\nAnyway, my point is that there are more resources than ever for learning web development, but still painfully few entry points to get there. The resources we have for learning the basics are great, but many are either growing stale, are quick hits without a clear learning path, or assume the learner has at least some technical knowledge. I can tell you, as someone who has hit the Publish button on thousands of front-end tutorials, that the vast majority ‚Äî if not all ‚Äî of them are geared toward those who are already on the career path.\nIt was always a bit painful when someone would email CSS-Tricks asking where to get started learning CSS because, well, you‚Äôd imagine CSS-Tricks being the perfect home for something like that, and yet, there‚Äôs nothing. It‚Äôs just the reality, even if many of us (myself included) cut our chops with sites like CSS-Tricks, Smashing Magazine, and A List Apart. We were all learning together at that time, or so it seemed.\nLearning Experience Design (LXD) is a real thing that I‚Äôd position somewhere between what we know as UX Design and the practice of accessibility. There‚Äôs a focus on creating delightful experiences, sure, but the real aim of LDX is to establish learning paths that universally account for different types of learners (e.g., adults and children) and learning styles (e.g., visual and experiential). According to LDX, learners have a set of needs not totally unlike those that Maslow‚Äôs hierarchy of needs identifies for all humans, and there are different models for determining those needs, perhaps none more influential than Bloom‚Äôs Taxonomy.\nThese are things that many front-end tutorials, bootcamps, videos, and programs are not designed for. It‚Äôs not that the resources are bad (nay, most are excellent); it‚Äôs that they are serving different learners and learning types than what a day-one beginner needs. And let‚Äôs please not rely on AI to fill the gaps in human experiences!\nLike I said, I‚Äôve been thinking about this a lot. Like, a lot a lot. In fact, I recently published an online course purely dedicated to learning the basics of front-end development, creatively named TheBasics.dev. I‚Äôd like to think it‚Äôs not just another tutorial because it‚Äôs a complete set of lessons that includes reading, demonstrations, videos, lab exercises, and assessments, i.e., a myriad of ways to learn. I‚Äôd also like to think that this is more than just another bootcamp because it is curricula designed with the intention to develop new knowledge through reflective practices, peer learning, and feedback.\nAnyway, I‚Äôm darn proud of The Basics, even if I‚Äôm not exactly the self-promoting type, and writing about it is outside of my comfort zone. If you‚Äôre reading this, it‚Äôs very likely that you, too, work on the front end. The Basics isn‚Äôt for you exactly, though I‚Äôd argue that brushing up on fundamentals is never a bad thing, regardless of your profession, but especially in front-end development, where standards are well-documented but ever-changing as well.\nThe Basics is more for your clients who do not know how to update the website they paid you to make. Or the friend who‚Äôs learning but still keeps bugging you with questions about the things they‚Äôre reading. Or your mom, who still has no idea what it is you do for a living. It‚Äôs for those whom the entry points are vanishing. It‚Äôs for those who could simply sign up for a Squarespace account but want to actually understand the code it spits out so they have more control to make a site that uniquely reflects them.\nIf you know a person like that, I would love it if you‚Äôd share The Basics with them.\nLong live the basics! Long live the ‚Äúa-ha!‚Äù moments that help us all fall in love with the World Wide Web."
  },
  {
    "url": "/2024/05/decision-trees-ui-components/",
    "title": "Decision Trees For UI Components",
    "author": "Vitaly Friedman",
    "date": "May 29, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "UI",
      "User Experience",
      "Design"
    ],
    "summary": "Imagine finally resolving never-ending discussions about UI decisions for good. Here are some practical examples of decision trees for UI components and how to use them effectively. An upcoming part of Smart Interface Design Patterns.",
    "content": "How do you know what UI component to choose? Decision trees offer a systematic approach for design teams to document their design decisions. Once we‚Äôve decided what UI components we use and when, we can avoid never-ending discussions, confusion, and misunderstanding.\nLet‚Äôs explore a few examples of decision trees for UI components and how we can get the most out of them.\nThis article is part of our ongoing series on design patterns. It‚Äôs also an upcoming part of the 10h-video library on Smart Interface Design Patterns¬†üç£ and the upcoming live UX training as well. Use code BIRDIE to save 15% off.\nDoctolib Design System is a very impressive design system with decision trees, B2B navigation paths, photography, PIN input, UX writing, and SMS notifications ‚Äî and thorough guides on how to choose UI components.\nI love how practical these decision trees are. Each shows an example of what a component looks like, but I would also add references to real-life UI examples and flows of where and how these components are used. A fantastic starting point that documents design decisions better than any guide would.\nThe team behind Workday‚Äôs Canvas design system created a fantastic set of design decision trees for notifications, errors and alerts, loading patterns, calls to action, truncation, and overflow ‚Äî with guidelines, examples, and use cases, which can now only be retrieved from the archive:\nFor each decision tree, the Workday team has put together a few context-related questions to consider first when making a decision before even jumping into the decision tree. Plus, there are thorough examples for each option available, as well as a very detailed alternative text for every image.\nA choice of a form component can often be daunting. When should you use radio buttons, checkboxes, or dropdowns? Runi Goswami from Lyft has shared a detailed form components decision tree that helps their team choose between form controls.\nWe start by exploring whether a user can select more than one option in our UI. If it‚Äôs indeed multi-select, we use toggles for short options and checkboxes for longer ones.\nIf only one option can be selected, then we use tabs for filtering, radios for shorter options, a switch for immediately applicable options, and a checkbox if only one option can be selected. Dropdowns are used as a last resort.\nOnboarding comes in various forms and shapes. Depending on how subtle or prominent we want to highlight a particular feature, we can use popovers, badges, hints, flags, toasts, feature cards, or design a better empty state. The Newskit team has put together an Onboarding Selection Prototype in Figma.\nThe choice depends on whether we want to interrupt the users to display details (usually isn‚Äôt very effective), show a feature subtly during the experience (more effective), or enable discovery by highlighting a feature within the context of a task a user tries to accomplish.\nThe toolkit asks a designer a couple of questions about the intent of onboarding, and then suggests options that are likely to perform best ‚Äî a fantastic little helper for streamlined onboarding decisions.\nHow do you decide to add a new component to a design system or rather extend an existing one? What‚Äôs the process for contributions, maintenance, and the overall design process? Some design teams codify their design decisions as design system process flowcharts, as shown below.\nAnd here are helpful decision trees for adding new components to a design system:\nWhat I absolutely love about the decision tree approach is not only that it beautifully visualizes design decisions but that it also serves as a documentation. It establishes shared standards across teams and includes examples to follow, with incredible value for new hires.\nOf course, exceptions happen. But once you have codified the ways of working for design teams as a decision tree and made it front and center of your design work, it resolves never-ending discussions about UI decisions for good.\nSo whenever a debate comes up, document your decisions in a decision tree. Turn them into posters. Place them in kitchen areas and developer‚Äôs and QA workspaces. Put them in design critique rooms. Make them visible where design work happens and where code is being written.\nIt‚Äôs worth mentioning that every project will need its own custom trees, so please see the examples above as an idea to build upon and customize away for your needs.\nIf you are interested in similar insights around UX, take a look at Smart Interface Design Patterns, our 10h-video course with 100s of practical examples from real-life projects ‚Äî with a live UX training later this year. Everything from mega-dropdowns to complex enterprise tables ‚Äî with 5 new segments added every year. Jump to a free preview.\n100 design patterns & real-life\nexamples.10h-video course + live UX training. Free preview.\n(yk)Explore more onUIUser ExperienceDesign"
  },
  {
    "url": "/2024/05/desktop-wallpaper-calendars-june-2024/",
    "title": "Ice Cream Ahead (June 2024 Wallpapers Edition)",
    "author": "Cosima Mielke",
    "date": "May 31, 2024",
    "categories": [
      "Accessibility",
      "UX",
      "CSS",
      "JavaScript",
      "Performance",
      "Design",
      "Figma",
      "Wallpapers",
      "React",
      "Vue",
      "Round-Ups",
      "Web Design",
      "Guides",
      "Business",
      "Career",
      "Privacy",
      "Jump to all articles ‚Ü¨",
      "Wallpapers"
    ],
    "summary": "Let‚Äôs kick off June with some fresh inspiration! Artists and designers from across the globe once again tickled their creativity to celebrate the beginning of the new month with a collection of beautiful and unique wallpaper calendars.",
    "content": "There‚Äôs an artist in everyone. Some bring their ideas to life with digital tools, others capture the perfect moment with a camera or love to grab pen and paper to create little doodles or pieces of lettering. And even if you think you‚Äôre far from being an artist, well, it might just be hidden deep inside of you. So why not explore it?\nFor more than 13 years already, our monthly wallpapers series has been the perfect opportunity to do just that: to break out of your daily routine and get fully immersed in a creative little project. This month was no exception, of course.\nIn this post, you‚Äôll find beautiful, unique, and inspiring wallpapers designed by creative folks who took on the challenge. All of them are available in versions with and without a calendar for June 2024 and can be downloaded for free. As a little bonus goodie, we also added a selection of June favorites from our archives that are just too good to be forgotten. Thank you to everyone who shared their designs with us this month! Happy June!\nKittenDesigned by Design Studio from India.previewwith calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nCelebrate National Tropic Day‚ÄúToday, let‚Äôs dive into the lush wonders of the tropics! From breathtaking landscapes to tantalizing flavors, National Tropic Day is a celebration of all things tropical. Join us in honoring the vibrant cultures and biodiversity that make these regions so unique. Get ready to embark on a tropical adventure!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwith calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440without calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nAll-Seeing EyeDesigned by Ricardo Gimenes from Sweden.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nGrand Canyon In June‚ÄúJune arrives, and with it, summer. The endless afternoons, the heat‚Ä¶ and all those moments to enjoy and rest, because, even if we are working, in summer everything is seen with different eyes. This year, we are going to the Grand Canyon of Colorado to admire the beauty of its landscapes and enjoy its sunsets.‚Äù ‚Äî Designed by Veronica Valenzuela Jimenez from Spain.previewwith calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440without calendar: 640x480, 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1440, 2560x1440\nSplashDesigned by Ricardo Gimenes from Sweden.previewwith calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160without calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nWhat Is Green‚ÄúWhen June arrives, it‚Äôs the best moment of the year for the photosynthesis (in the north). Most of the plants are in green colors. I like to play with colors and computers. This picture comes out of my imagination. It‚Äôs like looking with an electronic microscope at a strange green structure.‚Äù ‚Äî Designed by Philippe Brouard from France.previewwith calendar: 1024x768, 1366x768, 1600x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3840x2160without calendar: 1024x768, 1366x768, 1600x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 2560x1600, 2880x1800, 3840x2160\nBack In My DaysDesigned by Ricardo Gimenes from Sweden.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nCreate Your Own Path‚ÄúNice weather has arrived! Clean the dust off your bike and explore your hometown from a different angle! Invite a friend or loved one and share the joy of cycling. Whether you decide to go for a city ride or a ride in nature, the time spent on a bicycle will make you feel free and happy. So don‚Äôt wait, take your bike and call your loved one because happiness is greater only when it is shared. Happy World Bike Day!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSummer Coziness‚ÄúI‚Äôve waited for this summer more than I waited for any other summer since I was a kid. I dream of watermelon, strawberries, and lots of colors.‚Äù ‚Äî Designed by Kate Jameson from the United States.previewwithout calendar: 320x480, 1024x1024, 1280x720, 1680x1200, 1920x1080, 2560x1440\nSummer Surf‚ÄúSummer vibes‚Ä¶‚Äù ‚Äî Designed by Antun Hirsman from Croatia.previewwithout calendar: 640x480, 1152x864, 1280x1024, 1440x900, 1680x1050, 1920x1080, 1920x1440, 2650x1440\nStrawberry FieldsDesigned by Nathalie Ouederni from France.previewwithout calendar: 320x480, 1024x768, 1280x1024, 1440x900, 1680x1200, 1920x1200, 2560x1440\nDeep Dive‚ÄúSummer rains, sunny days, and a whole month to enjoy. Dive deep inside your passions and let them guide you.‚Äù ‚Äî Designed by Ana Masnikosa from Belgrade, Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nJoin The Wave‚ÄúThe month of warmth and nice weather is finally here. We found inspiration in the World Oceans Day which occurs on June 8th and celebrates the wave of change worldwide. Join the wave and dive in!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSummer PartyDesigned by Ricardo Gimenes from Sweden.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440, 3840x2160\nOh, The Places You Will Go!‚ÄúIn celebration of high school and college graduates ready to make their way in the world!‚Äù ‚Äî Designed by Bri Loesch from the United States.previewwithout calendar: 320x480, 1024x768, 1280x1024, 1440x900, 1680x1050, 1680x1200, 1920x1440, 2560x1440\nIce Creams Away!‚ÄúSummer is taking off with some magical ice cream hot air balloons.‚Äù ‚Äî Designed by Sasha Endoh from Canada.previewwithout calendar: 320x480, 1024x768, 1152x864, 1280x800, 1280x960, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1920x1080, 1920x1200, 2560x1440\nMerry-Go-RoundDesigned by Xenia Latii from Germany.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nNine Lives‚ÄúI grew up with cats around (and drawing them all the time). They are so funny‚Ä¶ one moment they are being funny, the next they are reserved. If you have place in your life for a pet, adopt one today!‚Äù ‚Äî Designed by Karen Frolo from the United States.previewwithout calendar: 1024x768, 1024x1024, 1280x800, 1280x960, 1280x1024, 1366x768, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nSolstice Sunset‚ÄúJune 21 marks the longest day of the year for the Northern Hemisphere ‚Äî and sunsets like these will be getting earlier and earlier after that!‚Äù ‚Äî Designed by James Mitchell from the United Kingdom.previewwithout calendar: 1280x720, 1280x800, 1366x768, 1440x900, 1680x1050, 1920x1080, 1920x1200, 2560x1440, 2880x1800\nTravel Time‚ÄúJune is our favorite time of the year because the keenly anticipated sunny weather inspires us to travel. Stuck at the airport, waiting for our flight but still excited about wayfaring, we often start dreaming about the new places we are going to visit. Where will you travel to this summer? Wherever you go, we wish you a pleasant journey!‚Äù ‚Äî Designed by PopArt Studio from Serbia.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nBauhaus‚ÄúI created a screenprint of one of the most famous buildings from the Bauhaus architect Mies van der Rohe for you. So, enjoy the Barcelona Pavillon for your June wallpaper.‚Äù ‚Äî Designed by Anne Korfmacher from Germany.previewwithout calendar: 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nPineapple Summer Pop‚ÄúI love creating fun and feminine illustrations and designs. I was inspired by juicy tropical pineapples to celebrate the start of summer.‚Äù ‚Äî Designed by Brooke Glaser from Honolulu, Hawaii.previewwithout calendar: 640x480, 800x600, 1024x768, 1152x720, 1280x720, 1280x800, 1280x960, 1366x768, 1440x900, 1680x1050, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nMelting AwayDesigned by Ricardo Gimenes from Sweden.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1366x768, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nThe Kids Looking Outside‚ÄúThese are my cats looking out of the window. Because it is Children‚Äôs Day in June in a lot of countries, I chose to make a wallpaper with this photo of my cats. The cats are like kids, they always want to play and love to be outside! Also, most kids love cats!‚Äù ‚Äî Designed by Kevin van Geloven from the Netherlands.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x1024, 1440x900, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nExpand Your Horizons‚ÄúIt‚Äôs summer! Go out, explore, expand your horizons!‚Äù ‚Äî Designed by Dorvan Davoudi from Canada.previewwithout calendar: 800x480, 800x600, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1366x768, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1080, 1920x1200, 1920x1440, 2560x1440\nIce Cream June‚ÄúFor me, June always marks the beginning of summer! The best way to celebrate summer is of course ice cream, what else?‚Äù ‚Äî Designed by Tatiana Anagnostaki from Greece.previewwithout calendar: 1024x768, 1280x1024, 1440x900, 1680x1050, 1680x1200, 1920x1440, 2560x1440\nSunset In Jamaica‚ÄúPhoto from a recent trip to Jamaica edited to give a retro look and feel.‚Äù ‚Äî Designed by Tommy Digiovanni from the United States.previewwithout calendar: 320x480, 1024x768, 1024x1024, 1280x720, 1280x800, 1680x1050, 1920x1080, 1920x1200, 2560x1440\nFlamingood Vibes Only‚ÄúI love flamingos! They give me a happy feeling that I want to share with the world.‚Äù ‚Äî Designed by Melissa Bogemans from Belgium.previewwithout calendar: 320x480, 640x480, 800x480, 800x600, 1024x768, 1024x1024, 1152x864, 1280x720, 1280x800, 1280x960, 1280x1024, 1400x1050, 1440x900, 1600x1200, 1680x1050, 1680x1200, 1920x1200, 1920x1440, 2560x1440\nKnitting For Summer‚ÄúI made multiple circles overlapping with close distances. The overall drawing looks like a clothing texture, for something you could wear in coming summer. Let‚Äôs have a nice summer.‚Äù ‚Äî Designed by Philippe Brouard from France.previewwithout calendar: 800x480, 1024x768, 1280x720, 1280x800, 1440x900, 1600x1200, 1920x1080, 1920x1200, 2560x1440, 2880x1800\n\nUseful front-end & UX bits, delivered once a week.With tools to help you get your work done better. Subscribe and get Vitaly‚Äôs Smart Interface Design Checklists PDF via email. üéÅYour (smashing) email\nOn front-end & UX. Trusted by 207,000+ folks."
  }
]